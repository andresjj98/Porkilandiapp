{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\DeboningForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import { getStorage, setStorage } from '../utils/storage';\n//import { initialInvoices } from '../mock/invoices';\n//import { initialCutTypes } from '../mock/cutTypes';\nimport { filterByDateRange } from '../utils/dateFilters';\n//import { initialUsers } from '../mock/users';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeboningForm = () => {\n  _s();\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableCarcasses, setAvailableCarcasses] = useState([]);\n  const [selectedCarcassCode, setSelectedCarcassCode] = useState('');\n  const [currentCutsForCarcass, setCurrentCutsForCarcass] = useState([]);\n  const [newCut, setNewCut] = useState({\n    cutType: '',\n    weight: '',\n    quantity: ''\n  });\n  const [productos, setProductos] = useState([]); // Inicializar lista de productos desde el back\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const operarioUsers = users.filter(user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario');\n  const [cutTypes, setCutTypes] = useState([]);\n\n  // Cargar datos al montar el componente\n  // AHORA: carga facturas, despostes, usuarios y productos desde tu API\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // 1) Todas las facturas\n        const {\n          data: facturas\n        } = await api.get('/facturas');\n        // 2) Despostes ya hechos (para excluirlos)\n        const {\n          data: despostes\n        } = await api.get('/despostes');\n        const hechosIds = despostes.map(d => d.id_factura);\n        // filtramos facturas que aún no tienen desposte\n        setInvoices(facturas.filter(f => !hechosIds.includes(f.id_factura)));\n\n        // 3) Todos los usuarios → solo operarios\n        const {\n          data: allUsers\n        } = await api.get('/usuarios');\n        setUsers(allUsers);\n        // 4) Lista de productos (tipos de carne)\n        const {\n          data: prods\n        } = await api.get('/productos');\n        setProductos(prods || []);\n      } catch (err) {\n        console.error('Error cargando datos de desposte:', err);\n      }\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    // si no hay factura seleccionada, limpiamos\n    if (!selectedInvoiceId) {\n      setAvailableCarcasses([]);\n      setSelectedCarcassCode('');\n      setCurrentCutsForCarcass([]);\n      return;\n    }\n\n    // función asíncrona para cargar los canales de la factura\n    const loadCanales = async () => {\n      try {\n        // GET /api/canales?factura=ID\n        const {\n          data\n        } = await api.get(`/canales?factura=${selectedInvoiceId}`);\n        setAvailableCarcasses(data || []);\n        setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n      } catch (err) {\n        console.error('Error cargando canales de la factura:', err);\n        setAvailableCarcasses([]);\n        setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n      }\n    };\n    loadCanales();\n  }, [selectedInvoiceId]);\n  useEffect(() => {\n    // 1) Si no hay canal seleccionado, limpiamos solo cutTypes\n    if (!selectedCarcassCode) {\n      setCutTypes([]);\n      return;\n    }\n\n    // 2) Obtenemos el id numérico del canal\n    const canalId = parseInt(selectedCarcassCode, 10);\n    // 3) Buscamos el canal en availableCarcasses para extraer id_producto\n    const canal = availableCarcasses.find(c => c.id_canal === canalId);\n    if (!canal) {\n      setCutTypes([]);\n      return;\n    }\n\n    // 3) Llamamos al endpoint que filtra por id_producto\n    api.get(`/tipos_corte?productos=${canal.id_producto}`).then(({\n      data\n    }) => setCutTypes(data)).catch(err => {\n      console.error('Error cargando tipos de corte:', err);\n      setCutTypes([]);\n    });\n  }, [selectedCarcassCode, availableCarcasses]);\n  useEffect(() => {\n    setCurrentCutsForCarcass([]);\n  }, [selectedCarcassCode]);\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n  const handleNewCutChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCut({\n      ...newCut,\n      [name]: value\n    });\n  };\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10)\n    };\n    setCurrentCutsForCarcass([...currentCutsForCarcass, cutToAdd]);\n    setNewCut({\n      cutType: '',\n      weight: '',\n      quantity: ''\n    });\n  };\n  const handleRegisterAllCuts = async () => {\n    if (currentCutsForCarcass.length === 0) {\n      return alert('No hay cortes para registrar.');\n    }\n    if (!selectedInvoiceId || !selectedOperatorId || !selectedCarcassCode) {\n      return alert('Por favor, selecciona factura, operario y canal.');\n    }\n\n    // Armo el array de detalles con los nombres que valida el backend:\n    const cutsPayload = currentCutsForCarcass.map(cut => ({\n      canalId: Number(selectedCarcassCode),\n      cutTypeId: Number(cut.cutType),\n      // Debe ser el id_tipo_corte\n      weight: cut.weight,\n      quantity: cut.quantity\n    }));\n    try {\n      // Un solo POST con todo\n      const {\n        data: res\n      } = await api.post('/despostes', {\n        id_factura: Number(selectedInvoiceId),\n        id_usuario: Number(selectedOperatorId),\n        cuts: cutsPayload\n      });\n\n      // Limpio estado y muestro éxito\n      setCurrentCutsForCarcass([]);\n      setSelectedCarcassCode('');\n      setNewCut({\n        cutType: '',\n        weight: '',\n        quantity: ''\n      });\n      alert('Desposte y cortes registrados con éxito!');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error registrando desposte y cortes:', err);\n      const msg = (_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.errors ? err.response.data.errors.map(e => e.msg).join('\\n') : 'Hubo un error al guardar en la BD.';\n      alert(msg);\n    }\n  };\n  const getTotalWeightSummary = cutsList => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n  const getInvoiceNumber = invoiceId => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n  const getOperatorName = operatorId => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n  const getCutsSummary = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getTotalWeightByMeatType = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return {};\n    const totalChannelWeight = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + channel.weight;\n      return acc;\n    }, {});\n    const totalCutWeight = cutsList.reduce((acc, cut) => {\n      const channel = invoice.channels.find(ch => ch.code === cut.carcassCode);\n      if (channel) {\n        acc[channel.type] = (acc[channel.type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n    const merma = {};\n    Object.keys(totalChannelWeight).forEach(meatType => {\n      const channelWeight = totalChannelWeight[meatType] || 0;\n      const cutWeight = totalCutWeight[meatType] || 0;\n      merma[meatType] = channelWeight - cutWeight;\n    });\n    Object.keys(totalCutWeight).forEach(meatType => {\n      if (!merma.hasOwnProperty(meatType)) {\n        merma[meatType] = -(totalCutWeight[meatType] || 0);\n      }\n    });\n    return Object.entries(merma);\n  };\n  const getCarcassType = carcassCode => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (invoice) {\n      const channel = invoice.channels.find(ch => ch.code === carcassCode);\n      return channel ? channel.type : 'Desconocido';\n    }\n    return 'Desconocido';\n  };\n\n  // Ahora, todos los productos (ej: “Res”, “Cerdo”, “Pollo”, etc.) aparecerán:\n  const availableCutTypes = selectedCarcassCode ? productos.map(p => p.nombre) : [];\n  const invoicesWithoutDeboning = invoices.filter(invoice => {\n    const hasDeboning = cuts.some(cut => cut.invoiceId === invoice.id);\n    return !hasDeboning;\n  });\n  const groupedCutsArray = Object.entries(groupedCuts);\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n    const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n    const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n    return dateB - dateA;\n  });\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Registro de Despostes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Nuevo Desposte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"invoice\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Factura Pendiente de Desposte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"invoice\",\n          value: selectedInvoiceId,\n          onChange: e => setSelectedInvoiceId(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una Factura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), invoicesWithoutDeboning.map(invoice => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: invoice.id,\n            children: [invoice.number, \" (\", invoice.date, \")\"]\n          }, invoice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), invoicesWithoutDeboning.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay facturas pendientes de desposte.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operatorId\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Operario que Desposta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"operatorId\",\n          name: \"operatorId\",\n          value: selectedOperatorId,\n          onChange: e => setSelectedOperatorId(parseInt(e.target.value, 10)),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Operario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), operarioUsers.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            children: u.nombre\n          }, u.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"carcass\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Canal a Despostar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"carcass\",\n          value: selectedCarcassCode,\n          onChange: e => setSelectedCarcassCode(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          disabled: !selectedInvoiceId || availableCarcasses.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Canal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), availableCarcasses.map(c => {\n            var _productos$find;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: c.id_canal,\n              children: `Código: ${c.codigo_canal} (` + `${((_productos$find = productos.find(p => p.id_producto === c.id_producto)) === null || _productos$find === void 0 ? void 0 : _productos$find.nombre) || 'Desconocido'}, ` + `${c.peso} kg)`\n            }, c.id_canal, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 3\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), selectedInvoiceId && availableCarcasses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay canales disponibles para despostar en esta factura.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), selectedCarcassCode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Registrar Cortes para Canal \", selectedCarcassCode, \" (\", getCarcassType(selectedCarcassCode), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutType\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Tipo de Corte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cutType\",\n            name: \"cutType\",\n            value: newCut.cutType,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Tipo de Corte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), cutTypes.map(tc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tc.id_tipo_corte,\n              children: tc.nombre_corte\n            }, tc.id_tipo_corte, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 5\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutWeight\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Peso del Corte (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutWeight\",\n            name: \"weight\",\n            placeholder: \"Ej: 50\",\n            value: newCut.weight,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutQuantity\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Cantidad de Piezas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutQuantity\",\n            name: \"quantity\",\n            placeholder: \"Ej: 2\",\n            value: newCut.quantity,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTemporaryCut,\n          className: \"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n          children: \"Agregar Corte a la Lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this), currentCutsForCarcass.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Cortes Temporales para Canal \", selectedCarcassCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: currentCutsForCarcass.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [cut.cutType, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.weight, \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 77\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.quantity, \" piezas\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTemporaryCut(cut.id),\n              className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 19\n            }, this)]\n          }, cut.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-gray-100 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-md font-semibold text-gray-800 mb-2\",\n            children: \"Resumen de Peso Total Temporal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700\",\n            children: [\"Total Despostado: \", getTotalWeightSummary(currentCutsForCarcass), \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegisterAllCuts,\n          className: \"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n          children: \"Registrar Todos los Cortes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Despostes Registrados por Factura\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Filtros de Despostes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Buscar (N\\xFAmero Factura)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search-deboning\",\n              placeholder: \"Ej: FAC-2023-001\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"start-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Inicio Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"start-date-deboning\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"end-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Fin Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"end-date-deboning\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearFilters,\n          className: \"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",\n          children: \"Limpiar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), paginatedGroupedCuts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n          const invoice = invoices.find(inv => inv.number === invoiceNumber);\n          const invoiceId = invoice ? invoice.id : null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: [\"Factura: \", invoiceNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: cutsList.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-gray-200 rounded-lg p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Corte: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.cutType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 73\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Canal C\\xF3digo: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.carcassCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 80\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Peso: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.weight, \" kg\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.quantity, \" piezas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Operario: \", getOperatorName(cut.operatorId)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Fecha: \", cut.processingDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 25\n                }, this)]\n              }, cut.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 p-4 bg-gray-100 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mb-2\",\n                children: \"Resumen de Peso por Tipo de Corte en esta Factura\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 21\n              }, this), getCutsSummary(cutsList).map(([type, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [type, \": \", totalWeight.toFixed(2), \" kg\"]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mt-4 mb-2\",\n                children: \"Total Kilos Despostado y Merma por Tipo de Carne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 21\n              }, this), getTotalWeightByMeatType(cutsList).map(([meatType, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [meatType, \" (Despostado): \", totalWeight.toFixed(2), \" kg\"]\n              }, meatType, true, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 23\n              }, this)), invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([meatType, mermaWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [meatType, \" (Merma): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`,\n                  children: [mermaWeight.toFixed(2), \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 45\n                }, this)]\n              }, `${meatType}-merma`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 19\n            }, this)]\n          }, invoiceNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay despostes registrados que coincidan con la b\\xFAsqueda o rango de fechas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6 space-x-2\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: `px-4 py-2 rounded-lg transition-colors ${currentPage === index + 1 ? 'bg-black text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n_s(DeboningForm, \"huF2fYIaqDttjeSn0Q4pxCgWzP8=\");\n_c = DeboningForm;\nexport default DeboningForm;\nvar _c;\n$RefreshReg$(_c, \"DeboningForm\");","map":{"version":3,"names":["React","useState","useEffect","filterByDateRange","api","jsxDEV","_jsxDEV","DeboningForm","_s","invoices","setInvoices","cuts","setCuts","users","setUsers","selectedInvoiceId","setSelectedInvoiceId","selectedOperatorId","setSelectedOperatorId","availableCarcasses","setAvailableCarcasses","selectedCarcassCode","setSelectedCarcassCode","currentCutsForCarcass","setCurrentCutsForCarcass","newCut","setNewCut","cutType","weight","quantity","productos","setProductos","searchTerm","setSearchTerm","startDate","setStartDate","endDate","setEndDate","groupedCuts","setGroupedCuts","currentPage","setCurrentPage","itemsPerPage","operarioUsers","filter","user","role","toLowerCase","cutTypes","setCutTypes","loadData","data","facturas","get","despostes","hechosIds","map","d","id_factura","f","includes","allUsers","prods","err","console","error","loadCanales","canalId","parseInt","canal","find","c","id_canal","id_producto","then","catch","dateFilteredCuts","grouped","reduce","acc","cut","invoiceNumber","getInvoiceNumber","invoiceId","push","filteredGrouped","Object","entries","cutsList","handleNewCutChange","e","name","value","target","handleAddTemporaryCut","alert","id","Date","now","cutToAdd","parseFloat","handleRegisterAllCuts","length","cutsPayload","Number","cutTypeId","res","post","id_usuario","_err$response","_err$response$data","msg","response","errors","join","getTotalWeightSummary","totalWeight","sum","toFixed","invoice","inv","number","getOperatorName","operatorId","operator","fullName","getCutsSummary","summary","getTotalWeightByMeatType","channel","channels","ch","code","carcassCode","meatType","type","getMermaByMeatType","totalChannelWeight","totalCutWeight","merma","keys","forEach","channelWeight","cutWeight","hasOwnProperty","getCarcassType","availableCutTypes","p","nombre","invoicesWithoutDeboning","hasDeboning","some","groupedCutsArray","sortedGroupedCuts","sort","cutsA","cutsB","dateA","processingDate","dateB","startIndex","endIndex","paginatedGroupedCuts","slice","totalPages","Math","ceil","handlePageChange","page","handleClearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","date","u","disabled","_productos$find","codigo_canal","peso","tc","id_tipo_corte","nombre_corte","placeholder","onClick","handleDeleteTemporaryCut","mermaWeight","Array","from","_","index","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/DeboningForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n//import { getStorage, setStorage } from '../utils/storage';\n//import { initialInvoices } from '../mock/invoices';\n//import { initialCutTypes } from '../mock/cutTypes';\nimport { filterByDateRange } from '../utils/dateFilters';\n//import { initialUsers } from '../mock/users';\nimport api from '../services/api';\n\n\nconst DeboningForm = () => {\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableCarcasses, setAvailableCarcasses] = useState([]);\n  const [selectedCarcassCode, setSelectedCarcassCode] = useState('');\n  const [currentCutsForCarcass, setCurrentCutsForCarcass] = useState([]);\n  const [newCut, setNewCut] = useState({ cutType: '', weight: '', quantity: '' });\n  const [productos, setProductos] = useState([]); // Inicializar lista de productos desde el back\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n\n const operarioUsers = users.filter(\n    user =>\n      typeof user.role === 'string' &&\n      user.role.toLowerCase() === 'operario'\n  );\n\n  const [cutTypes, setCutTypes] = useState([]);\n\n  // Cargar datos al montar el componente\n  // AHORA: carga facturas, despostes, usuarios y productos desde tu API\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // 1) Todas las facturas\n        const { data: facturas } = await api.get('/facturas');\n        // 2) Despostes ya hechos (para excluirlos)\n        const { data: despostes } = await api.get('/despostes');\n        const hechosIds = despostes.map(d => d.id_factura);\n        // filtramos facturas que aún no tienen desposte\n        setInvoices(facturas.filter(f => !hechosIds.includes(f.id_factura)));\n\n        // 3) Todos los usuarios → solo operarios\n     const { data: allUsers } = await api.get('/usuarios');\n     setUsers(allUsers);\n        // 4) Lista de productos (tipos de carne)\n        const { data: prods } = await api.get('/productos');\n        setProductos(prods || []);\n      } catch (err) {\n        console.error('Error cargando datos de desposte:', err);\n      }\n    };\n    loadData();\n  }, []);\n\n\nuseEffect(() => {\n  // si no hay factura seleccionada, limpiamos\n  if (!selectedInvoiceId) {\n    setAvailableCarcasses([]);\n    setSelectedCarcassCode('');\n    setCurrentCutsForCarcass([]);\n    return;\n  }\n\n  // función asíncrona para cargar los canales de la factura\n  const loadCanales = async () => {\n    try {\n      // GET /api/canales?factura=ID\n      const { data } = await api.get(`/canales?factura=${selectedInvoiceId}`);\n      setAvailableCarcasses(data || []);\n      setSelectedCarcassCode('');\n      setCurrentCutsForCarcass([]);\n    } catch (err) {\n      console.error('Error cargando canales de la factura:', err);\n      setAvailableCarcasses([]);\n      setSelectedCarcassCode('');\n      setCurrentCutsForCarcass([]);\n    }\n  };\n\n  loadCanales();\n}, [selectedInvoiceId]);\n\n\nuseEffect(() => {\n  // 1) Si no hay canal seleccionado, limpiamos solo cutTypes\n  if (!selectedCarcassCode) {\n    setCutTypes([]);\n    return;\n  }\n\n    // 2) Obtenemos el id numérico del canal\n    const canalId = parseInt(selectedCarcassCode, 10);\n    // 3) Buscamos el canal en availableCarcasses para extraer id_producto\n    const canal = availableCarcasses.find(c => c.id_canal === canalId);\n    if (!canal) {\n      setCutTypes([]);\n      return;\n    }\n\n  // 3) Llamamos al endpoint que filtra por id_producto\n  api\n    .get(`/tipos_corte?productos=${canal.id_producto}`)\n    .then(({ data }) => setCutTypes(data))\n    .catch(err => {\n      console.error('Error cargando tipos de corte:', err);\n      setCutTypes([]);\n    });\n}, [selectedCarcassCode, availableCarcasses]);\n\n  useEffect(() => {\n    setCurrentCutsForCarcass([]);\n  }, [selectedCarcassCode]);\n\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n\n\n  const handleNewCutChange = (e) => {\n    const { name, value } = e.target;\n    setNewCut({ ...newCut, [name]: value });\n  };\n\n  const handleAddTemporaryCut = () => {\n  if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n    alert('Por favor, completa todos los campos del corte.');\n    return;\n  }\n  const id = `temp-cut-${Date.now()}`;\n  const cutToAdd = {\n    id,\n    cutType: newCut.cutType,\n    weight: parseFloat(newCut.weight),\n    quantity: parseInt(newCut.quantity, 10),\n  };\n  setCurrentCutsForCarcass([...currentCutsForCarcass, cutToAdd]);\n  setNewCut({ cutType: '', weight: '', quantity: '' });\n};\n\nconst handleRegisterAllCuts = async () => {\n  if (currentCutsForCarcass.length === 0) {\n    return alert('No hay cortes para registrar.');\n  }\n  if (!selectedInvoiceId || !selectedOperatorId || !selectedCarcassCode) {\n    return alert('Por favor, selecciona factura, operario y canal.');\n  }\n\n  // Armo el array de detalles con los nombres que valida el backend:\n  const cutsPayload = currentCutsForCarcass.map(cut => ({\n    canalId:      Number(selectedCarcassCode),\n    cutTypeId:    Number(cut.cutType),    // Debe ser el id_tipo_corte\n    weight:       cut.weight,\n    quantity:     cut.quantity\n  }));\n\n  try {\n    // Un solo POST con todo\n    const { data: res } = await api.post('/despostes', {\n      id_factura: Number(selectedInvoiceId),\n      id_usuario: Number(selectedOperatorId),\n      cuts:       cutsPayload\n    });\n\n    // Limpio estado y muestro éxito\n    setCurrentCutsForCarcass([]);\n    setSelectedCarcassCode('');\n    setNewCut({ cutType:'', weight:'', quantity:'' });\n    alert('Desposte y cortes registrados con éxito!');\n\n  } catch (err) {\n    console.error('Error registrando desposte y cortes:', err);\n    const msg = err.response?.data?.errors\n      ? err.response.data.errors.map(e=>e.msg).join('\\n')\n      : 'Hubo un error al guardar en la BD.';\n    alert(msg);\n  }\n};\n\n  const getTotalWeightSummary = (cutsList) => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n\n  const getInvoiceNumber = (invoiceId) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n\n  const getOperatorName = (operatorId) => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n\n\n  const getCutsSummary = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getTotalWeightByMeatType = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return {};\n\n    const totalChannelWeight = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + channel.weight;\n      return acc;\n    }, {});\n\n    const totalCutWeight = cutsList.reduce((acc, cut) => {\n      const channel = invoice.channels.find(ch => ch.code === cut.carcassCode);\n      if (channel) {\n         acc[channel.type] = (acc[channel.type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n\n    const merma = {};\n    Object.keys(totalChannelWeight).forEach(meatType => {\n      const channelWeight = totalChannelWeight[meatType] || 0;\n      const cutWeight = totalCutWeight[meatType] || 0;\n      merma[meatType] = channelWeight - cutWeight;\n    });\n\n     Object.keys(totalCutWeight).forEach(meatType => {\n        if (!merma.hasOwnProperty(meatType)) {\n             merma[meatType] = -(totalCutWeight[meatType] || 0);\n        }\n     });\n\n\n    return Object.entries(merma);\n  };\n\n\n  const getCarcassType = (carcassCode) => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (invoice) {\n      const channel = invoice.channels.find(ch => ch.code === carcassCode);\n      return channel ? channel.type : 'Desconocido';\n    }\n    return 'Desconocido';\n  };\n\n  // Ahora, todos los productos (ej: “Res”, “Cerdo”, “Pollo”, etc.) aparecerán:\n  const availableCutTypes = selectedCarcassCode ? productos.map(p => p.nombre) : [];\n\n  const invoicesWithoutDeboning = invoices.filter(invoice => {\n    const hasDeboning = cuts.some(cut => cut.invoiceId === invoice.id);\n    return !hasDeboning;\n  });\n\n  const groupedCutsArray = Object.entries(groupedCuts);\n\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n      const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n      const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n      return dateB - dateA;\n  });\n\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Registro de Despostes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Nuevo Desposte</h3>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"invoice\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Factura Pendiente de Desposte</label>\n          <select\n            id=\"invoice\"\n            value={selectedInvoiceId}\n            onChange={(e) => setSelectedInvoiceId(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona una Factura</option>\n            {invoicesWithoutDeboning.map(invoice => (\n              <option key={invoice.id} value={invoice.id}>\n                {invoice.number} ({invoice.date})\n              </option>\n            ))}\n          </select>\n           {invoicesWithoutDeboning.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay facturas pendientes de desposte.</p>\n          )}\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"operatorId\" className=\"block text-sm font-medium text-gray-700\">Operario que Desposta</label>\n          <select\n            id=\"operatorId\"\n            name=\"operatorId\"\n            value={selectedOperatorId}\n            onChange={(e) => setSelectedOperatorId(parseInt(e.target.value, 10))}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona un Operario</option>\n            {operarioUsers.map(u => (\n            <option key={u.id} value={u.id}>\n              {u.nombre}\n            </option>\n          ))}\n          </select>\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"carcass\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Canal a Despostar</label>\n          <select\n            id=\"carcass\"\n            value={selectedCarcassCode}\n            onChange={(e) => setSelectedCarcassCode(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            disabled={!selectedInvoiceId || availableCarcasses.length === 0}\n          >\n            <option value=\"\">Selecciona un Canal</option>\n            {availableCarcasses.map(c => (\n  <option key={c.id_canal} value={c.id_canal}>\n    {`Código: ${c.codigo_canal} (` +\n      `${productos.find(p => p.id_producto === c.id_producto)?.nombre || 'Desconocido'}, ` +\n      `${c.peso} kg)` }\n  </option>\n            ))}\n          </select>\n           {selectedInvoiceId && availableCarcasses.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay canales disponibles para despostar en esta factura.</p>\n          )}\n        </div>\n\n        {selectedCarcassCode && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Registrar Cortes para Canal {selectedCarcassCode} ({getCarcassType(selectedCarcassCode)})</h4>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutType\" className=\"block text-sm font-medium text-gray-700\">Tipo de Corte</label>\n              <select\n                id=\"cutType\"\n                name=\"cutType\"\n                value={newCut.cutType}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              >\n                <option value=\"\">Selecciona un Tipo de Corte</option>\n                {cutTypes.map(tc => (\n    <option key={tc.id_tipo_corte} value={tc.id_tipo_corte}>\n      {tc.nombre_corte}\n    </option>\n             ))}\n              </select>\n            </div>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutWeight\" className=\"block text-sm font-medium text-gray-700\">Peso del Corte (kg)</label>\n              <input\n                type=\"number\"\n                id=\"cutWeight\"\n                name=\"weight\"\n                placeholder=\"Ej: 50\"\n                value={newCut.weight}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n             <div className=\"mt-3\">\n              <label htmlFor=\"cutQuantity\" className=\"block text-sm font-medium text-gray-700\">Cantidad de Piezas</label>\n              <input\n                type=\"number\"\n                id=\"cutQuantity\"\n                name=\"quantity\"\n                placeholder=\"Ej: 2\"\n                value={newCut.quantity}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n            <button\n              onClick={handleAddTemporaryCut}\n              className=\"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Agregar Corte a la Lista\n            </button>\n          </div>\n        )}\n\n        {currentCutsForCarcass.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-white\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Cortes Temporales para Canal {selectedCarcassCode}</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {currentCutsForCarcass.map(cut => (\n                <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3 flex justify-between items-center\">\n                  <div>\n                    <p className=\"text-gray-700 font-medium\">{cut.cutType}: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                    <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                  </div>\n                  <button\n                    onClick={() => handleDeleteTemporaryCut(cut.id)}\n                    className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                  >\n                    Eliminar\n                  </button>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"mt-4 p-3 bg-gray-100 rounded-lg\">\n              <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso Total Temporal</h5>\n              <p className=\"text-gray-700\">Total Despostado: {getTotalWeightSummary(currentCutsForCarcass)} kg</p>\n            </div>\n\n            <button\n              onClick={handleRegisterAllCuts}\n              className=\"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Registrar Todos los Cortes\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Sección de Visualización de Despostes Integrada */}\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Despostes Registrados por Factura</h2>\n\n        <div className=\"mb-6 bg-white p-4 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Filtros de Despostes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"search-deboning\" className=\"block text-sm font-medium text-gray-700\">Buscar (Número Factura)</label>\n              <input\n                type=\"text\"\n                id=\"search-deboning\"\n                placeholder=\"Ej: FAC-2023-001\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n             <div>\n              <label htmlFor=\"start-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Inicio Desposte</label>\n              <input\n                type=\"date\"\n                id=\"start-date-deboning\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"end-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Fin Desposte</label>\n              <input\n                type=\"date\"\n                id=\"end-date-deboning\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n           <button\n            onClick={handleClearFilters}\n            className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Limpiar Filtros\n          </button>\n        </div>\n\n\n        {paginatedGroupedCuts.length > 0 ? (\n          <div className=\"space-y-8\">\n            {paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n              const invoice = invoices.find(inv => inv.number === invoiceNumber);\n              const invoiceId = invoice ? invoice.id : null;\n\n              return (\n                <div key={invoiceNumber} className=\"bg-white p-6 rounded-lg shadow-md\">\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Factura: {invoiceNumber}</h3>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {cutsList.map(cut => (\n                      <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3\">\n                        <p className=\"text-gray-700 font-medium\">Corte: <span className=\"font-normal\">{cut.cutType}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Canal Código: <span className=\"font-normal\">{cut.carcassCode}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Peso: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                        <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                        <p className=\"text-gray-600 text-sm\">Operario: {getOperatorName(cut.operatorId)}</p>\n                        <p className=\"text-gray-600 text-sm\">Fecha: {cut.processingDate}</p>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"mt-4 p-4 bg-gray-100 rounded-lg\">\n                    <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso por Tipo de Corte en esta Factura</h5>\n                    {getCutsSummary(cutsList).map(([type, totalWeight]) => (\n                      <p key={type} className=\"text-gray-700\">{type}: {totalWeight.toFixed(2)} kg</p>\n                    ))}\n\n                    <h5 className=\"text-md font-semibold text-gray-800 mt-4 mb-2\">Total Kilos Despostado y Merma por Tipo de Carne</h5>\n                    {getTotalWeightByMeatType(cutsList).map(([meatType, totalWeight]) => (\n                      <p key={meatType} className=\"text-gray-700\">{meatType} (Despostado): {totalWeight.toFixed(2)} kg</p>\n                    ))}\n                     {invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([meatType, mermaWeight]) => (\n                      <p key={`${meatType}-merma`} className=\"text-gray-700\">\n                        {meatType} (Merma): <span className={`${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`}>{mermaWeight.toFixed(2)} kg</span>\n                      </p>\n                    ))}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay despostes registrados que coincidan con la búsqueda o rango de fechas.</p>\n        )}\n      </div>\n\n       {totalPages > 1 && (\n        <div className=\"flex justify-center mt-6 space-x-2\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index + 1}\n              onClick={() => handlePageChange(index + 1)}\n              className={`px-4 py-2 rounded-lg transition-colors ${\n                currentPage === index + 1\n                  ? 'bg-black text-white'\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n              }`}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DeboningForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
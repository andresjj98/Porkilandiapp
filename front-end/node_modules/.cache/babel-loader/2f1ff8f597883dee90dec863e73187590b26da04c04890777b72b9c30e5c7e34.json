{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\DeboningForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\nimport { InventoryContext } from '../contexts/InventoryContext';\nimport { filterByDateRange } from '../utils/dateFilters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeboningForm = ({\n  userRole\n}) => {\n  _s();\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [despostes, setDespostes] = useState([]);\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableChannels, setAvailableChannels] = useState([]);\n  const [selectedChannelCodes, setSelectedChannelCodes] = useState([]);\n  const [currentCuts, setCurrentCuts] = useState([]);\n  const [newCut, setNewCut] = useState({\n    cutType: '',\n    weight: '',\n    quantity: ''\n  });\n  const [cutTypes, setCutTypes] = useState({}); // Inicializar vacío\n  const [cutTypeNameToId, setCutTypeNameToId] = useState({});\n  const [desposteChannelsMap, setDesposteChannelsMap] = useState({});\n  const {\n    refreshInventory\n  } = useContext(InventoryContext);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n  const [editingDesposteId, setEditingDesposteId] = useState(null);\n  const [editedDesposte, setEditedDesposte] = useState({\n    invoiceId: '',\n    operatorId: '',\n    date: ''\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const operarioUsers = users.filter(user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario');\n  const loadData = async () => {\n    try {\n      const [factRes, desRes, detRes, prodRes, userRes] = await Promise.allSettled([api.get('/facturas'), api.get('/despostes'), api.get('/detalles_corte'), api.get('/productos'), api.get('/usuarios')]);\n      const invoicesData = factRes.status === 'fulfilled' ? factRes.value.data : [];\n      setInvoices(invoicesData);\n      const canalMap = {};\n      invoicesData.forEach(inv => {\n        (inv.channels || []).forEach(ch => {\n          canalMap[ch.id] = {\n            code: ch.code,\n            type: ch.type,\n            invoiceId: inv.id\n          };\n        });\n      });\n      const cutTypesByMeat = {};\n      const cutNameToId = {};\n      const cutIdToName = {};\n      const prodData = prodRes.status === 'fulfilled' ? prodRes.value.data : [];\n      (prodData || []).forEach(p => {\n        if (!cutTypesByMeat[p.tipo_carne]) cutTypesByMeat[p.tipo_carne] = [];\n        if (!cutTypesByMeat[p.tipo_carne].includes(p.tipo_corte)) {\n          cutTypesByMeat[p.tipo_carne].push(p.tipo_corte);\n        }\n        cutNameToId[p.tipo_corte] = p.id_tipo_corte;\n        cutIdToName[p.id_tipo_corte] = p.tipo_corte;\n      });\n      const desposteMap = {};\n      const desposteList = desRes.status === 'fulfilled' ? desRes.value.data : [];\n      const desCanalMap = {};\n      for (const d of desposteList) {\n        desposteMap[d.id_desposte] = d;\n        try {\n          const resp = await api.get(`/desposte_canales?desposte=${d.id_desposte}`);\n          desCanalMap[d.id_desposte] = resp.data || [];\n        } catch (err) {\n          desCanalMap[d.id_desposte] = [];\n        }\n      }\n      const detData = detRes.status === 'fulfilled' ? detRes.value.data : [];\n      const mappedCuts = (detData || []).map(det => {\n        const des = desposteMap[det.id_desposte] || {};\n        return {\n          id: det.id_detalle,\n          desposteId: det.id_desposte,\n          invoiceId: des.id_factura,\n          operatorId: des.id_usuario,\n          channelCodes: (desCanalMap[det.id_desposte] || []).map(cid => {\n            var _canalMap$cid;\n            return ((_canalMap$cid = canalMap[cid]) === null || _canalMap$cid === void 0 ? void 0 : _canalMap$cid.code) || cid;\n          }),\n          cutType: cutIdToName[det.id_tipo_corte] || String(det.id_tipo_corte),\n          weight: parseFloat(det.peso),\n          quantity: det.cantidad,\n          processingDate: des.fecha\n        };\n      });\n      const userData = userRes.status === 'fulfilled' ? userRes.value.data : [];\n      const userList = (userData || []).map(u => ({\n        id: u.id,\n        fullName: u.nombre,\n        role: u.role\n      }));\n      setCuts(mappedCuts);\n      setDespostes(desposteList);\n      setDesposteChannelsMap(desCanalMap);\n      setUsers(userList);\n      setCutTypes(cutTypesByMeat);\n      setCutTypeNameToId(cutNameToId);\n    } catch (error) {\n      console.error('Error loading initial data for DeboningForm:', error);\n    }\n  };\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n    loadData();\n  }, []);\n  useEffect(() => {\n    if (selectedInvoiceId) {\n      const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n      if (invoice) {\n        const usedCodes = Object.entries(desposteChannelsMap).flatMap(([_, codes]) => {\n          const des = despostes.find(d => d.id_desposte === Number(_));\n          return des && des.id_factura === selectedInvoiceId ? codes.map(id => {\n            var _invoice$channels$fin;\n            return (_invoice$channels$fin = invoice.channels.find(c => c.id === id)) === null || _invoice$channels$fin === void 0 ? void 0 : _invoice$channels$fin.code;\n          }) : [];\n        });\n        const available = invoice.channels.filter(ch => !usedCodes.includes(ch.code));\n        setAvailableChannels(available);\n        setSelectedChannelCodes([]);\n        setCurrentCuts([]);\n      }\n    } else {\n      setAvailableChannels([]);\n      setSelectedChannelCodes([]);\n      setCurrentCuts([]);\n    }\n  }, [selectedInvoiceId, invoices, desposteChannelsMap, despostes]);\n  useEffect(() => {\n    setCurrentCuts([]);\n  }, [selectedChannelCodes.join(',')]);\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n  const handleNewCutChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCut({\n      ...newCut,\n      [name]: value\n    });\n  };\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10)\n    };\n    setCurrentCuts([...currentCuts, cutToAdd]);\n    setNewCut({\n      cutType: '',\n      weight: '',\n      quantity: ''\n    });\n  };\n  const handleDeleteTemporaryCut = id => {\n    setCurrentCuts(currentCuts.filter(cut => cut.id !== id));\n  };\n  const handleRegisterAllCuts = async () => {\n    if (currentCuts.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n    if (selectedInvoiceId === '' || selectedOperatorId === '' || selectedChannelCodes.length === 0) {\n      alert('Por favor, selecciona la factura, el operario y al menos un canal.');\n      return;\n    }\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    const channelIds = invoice ? invoice.channels.filter(c => selectedChannelCodes.includes(c.code)).map(c => c.id) : [];\n    const cutsToSend = currentCuts.map(cut => ({\n      cutTypeId: cutTypeNameToId[cut.cutType],\n      weight: cut.weight,\n      quantity: cut.quantity\n    }));\n    try {\n      await api.post('/despostes', {\n        id_factura: selectedInvoiceId,\n        id_usuario: selectedOperatorId,\n        channelIds,\n        cuts: cutsToSend\n      });\n      await loadData();\n      await refreshInventory();\n      setCurrentCuts([]);\n      setSelectedChannelCodes([]);\n      setNewCut({\n        cutType: '',\n        weight: '',\n        quantity: ''\n      });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error('Error registering cuts:', error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n  const getTotalWeightSummary = cutsList => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n  const getInvoiceNumber = invoiceId => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n  const getOperatorName = operatorId => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n  const getCutsSummary = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getTotalWeightByInvoice = (invoiceId, cutsList) => {\n    return cutsList.reduce((sum, cut) => cut.invoiceId === invoiceId ? sum + cut.weight : sum, 0);\n  };\n  const getMermaByInvoice = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return 0;\n    const channels = invoice.channels;\n    const selectedIds = Object.entries(desposteChannelsMap).reduce((acc, [dId, ids]) => {\n      const d = despostes.find(ds => ds.id_desposte === Number(dId));\n      if (d && d.id_factura === invoiceId) acc.push(...ids);\n      return acc;\n    }, []);\n    const totalChannelWeight = channels.filter(ch => selectedIds.includes(ch.id)).reduce((s, ch) => s + parseFloat(ch.weight), 0);\n    const cutsWeight = getTotalWeightByInvoice(invoiceId, cutsList);\n    return totalChannelWeight - cutsWeight;\n  };\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return [];\n    const channelWeights = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + parseFloat(channel.weight);\n      return acc;\n    }, {});\n    const cutWeights = cutsList.reduce((acc, cut) => {\n      if (cut.invoiceId === invoiceId) {\n        const type = getSelectedMeatType();\n        acc[type] = (acc[type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n    const merma = {};\n    Object.keys(channelWeights).forEach(type => {\n      const channelWeight = channelWeights[type] || 0;\n      const cutWeight = cutWeights[type] || 0;\n      merma[type] = channelWeight - cutWeight;\n    });\n    return Object.entries(merma);\n  };\n  const getSelectedMeatType = () => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (!invoice) return '';\n    const ch = invoice.channels.find(c => selectedChannelCodes.includes(c.code));\n    return ch ? ch.type : '';\n  };\n  const availableCutTypes = selectedChannelCodes.length > 0 ? cutTypes[getSelectedMeatType()] || [] : [];\n\n  // Mostrar solo las facturas que tienen al menos un canal pendiente de desposte\n  const invoicesWithPendingChannels = invoices.filter(invoice => {\n    const usedIds = Object.entries(desposteChannelsMap).reduce((acc, [dId, ids]) => {\n      const d = despostes.find(ds => ds.id_desposte === Number(dId));\n      if (d && d.id_factura === invoice.id) acc.push(...ids);\n      return acc;\n    }, []);\n    return invoice.channels.some(ch => !usedIds.includes(ch.id));\n  });\n  const groupedCutsArray = Object.entries(groupedCuts);\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n    const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n    const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n    return dateB - dateA;\n  });\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleEditDesposte = des => {\n    setEditingDesposteId(des.id_desposte);\n    setEditedDesposte({\n      invoiceId: des.id_factura,\n      operatorId: des.id_usuario,\n      date: des.fecha\n    });\n  };\n  const handleEditedDesposteChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedDesposte(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleCancelEditDesposte = () => {\n    setEditingDesposteId(null);\n    setEditedDesposte({\n      invoiceId: '',\n      operatorId: '',\n      date: ''\n    });\n  };\n  const handleSaveEditedDesposte = async () => {\n    if (!editedDesposte.invoiceId || !editedDesposte.operatorId || !editedDesposte.date) {\n      alert('Por favor, completa todos los campos.');\n      return;\n    }\n    try {\n      await api.put(`/despostes/${editingDesposteId}`, {\n        id_factura: editedDesposte.invoiceId,\n        id_usuario: editedDesposte.operatorId,\n        fecha: editedDesposte.date\n      });\n      await loadData();\n      await refreshInventory();\n      handleCancelEditDesposte();\n      alert('Desposte actualizado con éxito!');\n    } catch (error) {\n      console.error('Error updating deboning:', error);\n      alert('Error al actualizar el desposte. Intenta de nuevo.');\n    }\n  };\n  const handleDeleteDesposte = async id => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este desposte?')) {\n      try {\n        await api.delete(`/despostes/${id}`);\n        await loadData();\n        await refreshInventory();\n        alert('Desposte eliminado con éxito!');\n      } catch (error) {\n        console.error('Error deleting deboning:', error);\n        alert('Error al eliminar el desposte. Intenta de nuevo.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Registro de Despostes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Nuevo Desposte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"invoice\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Factura Pendiente de Desposte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"invoice\",\n          value: selectedInvoiceId,\n          onChange: e => setSelectedInvoiceId(Number(e.target.value)),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una Factura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), invoicesWithPendingChannels.map(invoice => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: invoice.id,\n            children: [invoice.number, \" (\", invoice.date, \")\"]\n          }, invoice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), invoicesWithPendingChannels.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay facturas pendientes de desposte.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operatorId\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Operario que Desposta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"operatorId\",\n          name: \"operatorId\",\n          value: selectedOperatorId,\n          onChange: e => setSelectedOperatorId(Number(e.target.value)),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Operario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), operarioUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.id,\n            children: user.fullName\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Canales a Despostar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 space-y-1\",\n          children: [availableChannels.map(ch => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedChannelCodes.includes(ch.code),\n              onChange: e => {\n                if (e.target.checked) {\n                  setSelectedChannelCodes([...selectedChannelCodes, ch.code]);\n                } else {\n                  setSelectedChannelCodes(selectedChannelCodes.filter(c => c !== ch.code));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: `Código: ${ch.code} (${ch.type}, ${ch.weight}kg)`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this)]\n          }, ch.code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this)), selectedInvoiceId && availableChannels.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: \"No hay canales disponibles para despostar en esta factura.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), selectedChannelCodes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Registrar Cortes para Canales \", selectedChannelCodes.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutType\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Tipo de Corte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cutType\",\n            name: \"cutType\",\n            value: newCut.cutType,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Tipo de Corte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), availableCutTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutWeight\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Peso del Corte (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutWeight\",\n            name: \"weight\",\n            placeholder: \"Ej: 50\",\n            value: newCut.weight,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutQuantity\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Cantidad de Piezas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutQuantity\",\n            name: \"quantity\",\n            placeholder: \"Ej: 2\",\n            value: newCut.quantity,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTemporaryCut,\n          className: \"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n          children: \"Agregar Corte a la Lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this), currentCuts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Cortes Temporales para Canales \", selectedChannelCodes.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: currentCuts.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [cut.cutType, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.weight, \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 77\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.quantity, \" piezas\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTemporaryCut(cut.id),\n              className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 19\n            }, this)]\n          }, cut.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-gray-100 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-md font-semibold text-gray-800 mb-2\",\n            children: \"Resumen de Peso Total Temporal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700\",\n            children: [\"Total Despostado: \", getTotalWeightSummary(currentCuts), \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegisterAllCuts,\n          className: \"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n          children: \"Registrar Todos los Cortes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Despostes Registrados por Factura\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Filtros de Despostes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Buscar (N\\xFAmero Factura)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search-deboning\",\n              placeholder: \"Ej: FAC-2023-001\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"start-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Inicio Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"start-date-deboning\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"end-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Fin Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"end-date-deboning\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearFilters,\n          className: \"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",\n          children: \"Limpiar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), paginatedGroupedCuts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n          const invoice = invoices.find(inv => inv.number === invoiceNumber);\n          const invoiceId = invoice ? invoice.id : null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: [\"Factura: \", invoiceNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 19\n            }, this), Object.entries(cutsList.reduce((acc, cut) => {\n              if (!acc[cut.desposteId]) acc[cut.desposteId] = [];\n              acc[cut.desposteId].push(cut);\n              return acc;\n            }, {})).map(([desId, desCuts]) => {\n              const des = despostes.find(d => d.id_desposte === Number(desId)) || {};\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-6 border border-gray-200 rounded-lg p-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-700 font-medium\",\n                      children: [\"Desposte ID: \", desId]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-600 text-sm\",\n                      children: [\"Operario: \", getOperatorName(des.id_usuario)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-600 text-sm\",\n                      children: [\"Fecha: \", des.fecha]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 27\n                  }, this), userRole === 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEditDesposte(des),\n                      className: \"px-3 py-1 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\",\n                      children: \"Editar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 642,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeleteDesposte(desId),\n                      className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n                      children: \"Eliminar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 25\n                }, this), editingDesposteId === Number(desId) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-3 mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700\",\n                      children: \"Factura\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"invoiceId\",\n                      value: editedDesposte.invoiceId,\n                      onChange: handleEditedDesposteChange,\n                      className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Selecciona una Factura\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 653,\n                        columnNumber: 33\n                      }, this), invoices.map(inv => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: inv.id,\n                        children: inv.number\n                      }, inv.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 655,\n                        columnNumber: 35\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 652,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700\",\n                      children: \"Operario\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 660,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      name: \"operatorId\",\n                      value: editedDesposte.operatorId,\n                      onChange: handleEditedDesposteChange,\n                      className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Selecciona un Operario\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 662,\n                        columnNumber: 33\n                      }, this), operarioUsers.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: u.id,\n                        children: u.fullName\n                      }, u.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 664,\n                        columnNumber: 35\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block text-sm font-medium text-gray-700\",\n                      children: \"Fecha\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 669,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      name: \"date\",\n                      value: editedDesposte.date,\n                      onChange: handleEditedDesposteChange,\n                      className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-end space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleCancelEditDesposte,\n                      className: \"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",\n                      children: \"Cancelar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 673,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleSaveEditedDesposte,\n                      className: \"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n                      children: \"Guardar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 674,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\",\n                  children: desCuts.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"border border-gray-200 rounded-lg p-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-700 font-medium\",\n                      children: [\"Corte: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-normal\",\n                        children: cut.cutType\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 681,\n                        columnNumber: 81\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 681,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-700 font-medium\",\n                      children: [\"Canales: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-normal\",\n                        children: cut.channelCodes.join(', ')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 682,\n                        columnNumber: 83\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 682,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-700 font-medium\",\n                      children: [\"Peso: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-normal\",\n                        children: [cut.weight, \" kg\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 683,\n                        columnNumber: 80\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 683,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-gray-700 font-medium\",\n                      children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-normal\",\n                        children: [cut.quantity, \" piezas\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 684,\n                        columnNumber: 84\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 684,\n                      columnNumber: 33\n                    }, this)]\n                  }, cut.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 27\n                }, this)]\n              }, desId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 p-4 bg-gray-100 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mb-2\",\n                children: \"Resumen de Peso por Tipo de Corte en esta Factura\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 21\n              }, this), getCutsSummary(cutsList).map(([type, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [type, \": \", totalWeight.toFixed(2), \" kg\"]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mt-4 mb-2\",\n                children: \"Resumen de Peso Total y Merma\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [\"Total Despostado: \", getTotalWeightByInvoice(invoiceId, cutsList).toFixed(2), \" kg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [\"Merma: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${getMermaByInvoice(invoiceId, cutsList) >= 0 ? 'text-green-600' : 'text-red-600'}`,\n                  children: [getMermaByInvoice(invoiceId, cutsList).toFixed(2), \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mt-4 mb-2\",\n                children: \"Merma Total por Tipo de Carne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 21\n              }, this), invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([type, mermaWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [type, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`,\n                  children: [mermaWeight.toFixed(2), \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 33\n                }, this)]\n              }, `${type}-total-merma`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 19\n            }, this)]\n          }, invoiceNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay despostes registrados que coincidan con la b\\xFAsqueda o rango de fechas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6 space-x-2\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: `px-4 py-2 rounded-lg transition-colors ${currentPage === index + 1 ? 'bg-black text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this);\n};\n_s(DeboningForm, \"fx6H478mJTU3INPPwpxUNysCKjM=\");\n_c = DeboningForm;\nexport default DeboningForm;\nvar _c;\n$RefreshReg$(_c, \"DeboningForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","api","InventoryContext","filterByDateRange","jsxDEV","_jsxDEV","DeboningForm","userRole","_s","invoices","setInvoices","cuts","setCuts","despostes","setDespostes","users","setUsers","selectedInvoiceId","setSelectedInvoiceId","selectedOperatorId","setSelectedOperatorId","availableChannels","setAvailableChannels","selectedChannelCodes","setSelectedChannelCodes","currentCuts","setCurrentCuts","newCut","setNewCut","cutType","weight","quantity","cutTypes","setCutTypes","cutTypeNameToId","setCutTypeNameToId","desposteChannelsMap","setDesposteChannelsMap","refreshInventory","searchTerm","setSearchTerm","startDate","setStartDate","endDate","setEndDate","groupedCuts","setGroupedCuts","editingDesposteId","setEditingDesposteId","editedDesposte","setEditedDesposte","invoiceId","operatorId","date","currentPage","setCurrentPage","itemsPerPage","operarioUsers","filter","user","role","toLowerCase","loadData","factRes","desRes","detRes","prodRes","userRes","Promise","allSettled","get","invoicesData","status","value","data","canalMap","forEach","inv","channels","ch","id","code","type","cutTypesByMeat","cutNameToId","cutIdToName","prodData","p","tipo_carne","includes","tipo_corte","push","id_tipo_corte","desposteMap","desposteList","desCanalMap","d","id_desposte","resp","err","detData","mappedCuts","map","det","des","id_detalle","desposteId","id_factura","id_usuario","channelCodes","cid","_canalMap$cid","String","parseFloat","peso","cantidad","processingDate","fecha","userData","userList","u","fullName","nombre","error","console","invoice","find","usedCodes","Object","entries","flatMap","_","codes","Number","_invoice$channels$fin","c","available","join","dateFilteredCuts","grouped","reduce","acc","cut","invoiceNumber","getInvoiceNumber","filteredGrouped","cutsList","handleNewCutChange","e","name","target","handleAddTemporaryCut","alert","Date","now","cutToAdd","parseInt","handleDeleteTemporaryCut","handleRegisterAllCuts","length","channelIds","cutsToSend","cutTypeId","post","getTotalWeightSummary","totalWeight","sum","toFixed","number","getOperatorName","operator","getCutsSummary","summary","getTotalWeightByInvoice","getMermaByInvoice","selectedIds","dId","ids","ds","totalChannelWeight","s","cutsWeight","getMermaByMeatType","channelWeights","channel","cutWeights","getSelectedMeatType","merma","keys","channelWeight","cutWeight","availableCutTypes","invoicesWithPendingChannels","usedIds","some","groupedCutsArray","sortedGroupedCuts","sort","cutsA","cutsB","dateA","dateB","startIndex","endIndex","paginatedGroupedCuts","slice","totalPages","Math","ceil","handlePageChange","page","handleEditDesposte","handleEditedDesposteChange","prev","handleCancelEditDesposte","handleSaveEditedDesposte","put","handleDeleteDesposte","window","confirm","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","checked","placeholder","onClick","handleClearFilters","desId","desCuts","mermaWeight","Array","from","index","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/DeboningForm.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\nimport { InventoryContext } from '../contexts/InventoryContext';\nimport { filterByDateRange } from '../utils/dateFilters';\n\n\n\nconst DeboningForm = ({ userRole }) => {\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [despostes, setDespostes] = useState([]);\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableChannels, setAvailableChannels] = useState([]);\n  const [selectedChannelCodes, setSelectedChannelCodes] = useState([]);\n  const [currentCuts, setCurrentCuts] = useState([]);\n  const [newCut, setNewCut] = useState({ cutType: '', weight: '', quantity: '' });\n  const [cutTypes, setCutTypes] = useState({}); // Inicializar vacío\n  const [cutTypeNameToId, setCutTypeNameToId] = useState({});\n  const [desposteChannelsMap, setDesposteChannelsMap] = useState({});\n\n  const { refreshInventory } = useContext(InventoryContext);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n\n  const [editingDesposteId, setEditingDesposteId] = useState(null);\n  const [editedDesposte, setEditedDesposte] = useState({ invoiceId: '', operatorId: '', date: '' });\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n\n  const operarioUsers = users.filter(\n    user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario'\n  );\n\nconst loadData = async () => {\n    try {\n      const [factRes, desRes, detRes, prodRes, userRes] = await Promise.allSettled([\n        api.get('/facturas'),\n        api.get('/despostes'),\n        api.get('/detalles_corte'),\n        api.get('/productos'),\n        api.get('/usuarios')\n      ]);\n\n      const invoicesData = factRes.status === 'fulfilled' ? factRes.value.data : [];\n      setInvoices(invoicesData);\n\n      const canalMap = {};\n      invoicesData.forEach(inv => {\n        (inv.channels || []).forEach(ch => {\n          canalMap[ch.id] = { code: ch.code, type: ch.type, invoiceId: inv.id };\n        });\n      });\n\n      const cutTypesByMeat = {};\n      const cutNameToId = {};\n      const cutIdToName = {};\n      const prodData = prodRes.status === 'fulfilled' ? prodRes.value.data : [];\n      (prodData || []).forEach(p => {\n        if (!cutTypesByMeat[p.tipo_carne]) cutTypesByMeat[p.tipo_carne] = [];\n        if (!cutTypesByMeat[p.tipo_carne].includes(p.tipo_corte)) {\n          cutTypesByMeat[p.tipo_carne].push(p.tipo_corte);\n        }\n        cutNameToId[p.tipo_corte] = p.id_tipo_corte;\n        cutIdToName[p.id_tipo_corte] = p.tipo_corte;\n      });\n\n      const desposteMap = {};\n      const desposteList = desRes.status === 'fulfilled' ? desRes.value.data : [];\n      const desCanalMap = {};\n      for (const d of desposteList) {\n        desposteMap[d.id_desposte] = d;\n      try {\n          const resp = await api.get(`/desposte_canales?desposte=${d.id_desposte}`);\n          desCanalMap[d.id_desposte] = resp.data || [];\n        } catch (err) {\n          desCanalMap[d.id_desposte] = [];\n        }\n      }\n\n      const detData = detRes.status === 'fulfilled' ? detRes.value.data : [];\n      const mappedCuts = (detData || []).map(det => {\n        const des = desposteMap[det.id_desposte] || {};        \n        return {\n          id: det.id_detalle,\n          desposteId: det.id_desposte,\n          invoiceId: des.id_factura,\n          operatorId: des.id_usuario,\n          channelCodes: (desCanalMap[det.id_desposte] || []).map(cid => canalMap[cid]?.code || cid),\n          cutType: cutIdToName[det.id_tipo_corte] || String(det.id_tipo_corte),\n          weight: parseFloat(det.peso),\n          quantity: det.cantidad,\n          processingDate: des.fecha\n        };\n      });\n\n      const userData = userRes.status === 'fulfilled' ? userRes.value.data : [];\n      const userList = (userData || []).map(u => ({\n        id: u.id,\n        fullName: u.nombre,\n        role: u.role\n      }));\n\n      setCuts(mappedCuts);\n      setDespostes(desposteList);\n      setDesposteChannelsMap(desCanalMap);\n      setUsers(userList);\n      setCutTypes(cutTypesByMeat);\n      setCutTypeNameToId(cutNameToId);\n    } catch (error) {\n      console.error('Error loading initial data for DeboningForm:', error);\n    }\n  };\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n  \n    loadData();\n  }, []);\n\n\n  useEffect(() => {\n    if (selectedInvoiceId) {\n      const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n      if (invoice) {\n        const usedCodes = Object.entries(desposteChannelsMap).flatMap(([_, codes]) => {\n          const des = despostes.find(d => d.id_desposte === Number(_));\n          return des && des.id_factura === selectedInvoiceId ? codes.map(id => invoice.channels.find(c=>c.id===id)?.code) : [];\n        });\n        const available = invoice.channels.filter(ch => !usedCodes.includes(ch.code));\n        setAvailableChannels(available);\n        setSelectedChannelCodes([]);\n        setCurrentCuts([]);\n      }\n    } else {\n      setAvailableChannels([]);\n      setSelectedChannelCodes([]);\n      setCurrentCuts([]);\n    }\n  }, [selectedInvoiceId, invoices, desposteChannelsMap, despostes]);\n\n  useEffect(() => {\n    setCurrentCuts([]);\n  }, [selectedChannelCodes.join(',')]);\n\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n\n\n  const handleNewCutChange = (e) => {\n    const { name, value } = e.target;\n    setNewCut({ ...newCut, [name]: value });\n  };\n\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10),\n    };\n\n    setCurrentCuts([...currentCuts, cutToAdd]);\n    setNewCut({ cutType: '', weight: '', quantity: '' });\n  };\n\n  const handleDeleteTemporaryCut = (id) => {\n    setCurrentCuts(currentCuts.filter(cut => cut.id !== id));\n  };\n\n  const handleRegisterAllCuts = async () => {\n    if (currentCuts.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n   if (\n      selectedInvoiceId === '' ||\n      selectedOperatorId === '' ||\n      selectedChannelCodes.length === 0\n    ) {\n      alert('Por favor, selecciona la factura, el operario y al menos un canal.');\n      return;\n    }\n\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    const channelIds = invoice ? invoice.channels.filter(c => selectedChannelCodes.includes(c.code)).map(c=>c.id) : [];\n      const cutsToSend = currentCuts.map(cut => ({\n      cutTypeId: cutTypeNameToId[cut.cutType],\n      weight: cut.weight,\n      quantity: cut.quantity\n    }));\n\n    try {\n      await api.post('/despostes', {\n        id_factura: selectedInvoiceId,\n        id_usuario: selectedOperatorId,\n        channelIds,\n        cuts: cutsToSend\n      });\n      await loadData();\n      await refreshInventory();\n      setCurrentCuts([]);\n      setSelectedChannelCodes([]);\n      setNewCut({ cutType: '', weight: '', quantity: '' });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error('Error registering cuts:', error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n\n\n  const getTotalWeightSummary = (cutsList) => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n\n  const getInvoiceNumber = (invoiceId) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n\n  const getOperatorName = (operatorId) => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n\n\n  const getCutsSummary = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getTotalWeightByInvoice = (invoiceId, cutsList) => {\n    return cutsList.reduce((sum, cut) =>\n      cut.invoiceId === invoiceId ? sum + cut.weight : sum, 0);\n  };\n\n  const getMermaByInvoice = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return 0;\n\n    const channels = invoice.channels;\n    const selectedIds = Object.entries(desposteChannelsMap).reduce((acc,[dId,ids])=>{\n      const d = despostes.find(ds=>ds.id_desposte===Number(dId));\n      if(d && d.id_factura===invoiceId) acc.push(...ids);\n      return acc;\n   },[]);\n    const totalChannelWeight = channels.filter(ch=>selectedIds.includes(ch.id)).reduce((s,ch)=>s+parseFloat(ch.weight),0);\n    const cutsWeight = getTotalWeightByInvoice(invoiceId, cutsList);\n    return totalChannelWeight - cutsWeight;\n  };\nconst getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return [];\n\n    const channelWeights = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + parseFloat(channel.weight);\n      return acc;\n    }, {});\n\n    const cutWeights = cutsList.reduce((acc, cut) => {\n      if (cut.invoiceId === invoiceId) {\n        const type = getSelectedMeatType();\n        acc[type] = (acc[type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n\n    const merma = {};\n    Object.keys(channelWeights).forEach(type => {\n      const channelWeight = channelWeights[type] || 0;\n      const cutWeight = cutWeights[type] || 0;\n      merma[type] = channelWeight - cutWeight;\n    });\n\n    return Object.entries(merma);\n  };\n\n\n  const getSelectedMeatType = () => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (!invoice) return '';\n    const ch = invoice.channels.find(c => selectedChannelCodes.includes(c.code));\n    return ch ? ch.type : '';\n  };\n\n  const availableCutTypes = selectedChannelCodes.length > 0 ? cutTypes[getSelectedMeatType()] || [] : [];\n\n// Mostrar solo las facturas que tienen al menos un canal pendiente de desposte\n  const invoicesWithPendingChannels = invoices.filter(invoice => {\n    const usedIds = Object.entries(desposteChannelsMap).reduce((acc,[dId,ids])=>{\n      const d = despostes.find(ds=>ds.id_desposte===Number(dId));\n      if(d && d.id_factura===invoice.id) acc.push(...ids);\n      return acc;\n    },[]);\n    return invoice.channels.some(ch => !usedIds.includes(ch.id));\n  });\n\n  const groupedCutsArray = Object.entries(groupedCuts);\n\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n      const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n      const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n      return dateB - dateA;\n  });\n\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n const handleEditDesposte = (des) => {\n    setEditingDesposteId(des.id_desposte);\n    setEditedDesposte({\n      invoiceId: des.id_factura,\n      operatorId: des.id_usuario,\n      date: des.fecha\n    });\n  };\n\n  const handleEditedDesposteChange = (e) => {\n    const { name, value } = e.target;\n    setEditedDesposte(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCancelEditDesposte = () => {\n    setEditingDesposteId(null);\n    setEditedDesposte({ invoiceId: '', operatorId: '', date: '' });\n  };\n\n  const handleSaveEditedDesposte = async () => {\n    if (!editedDesposte.invoiceId || !editedDesposte.operatorId || !editedDesposte.date) {\n      alert('Por favor, completa todos los campos.');\n      return;\n    }\n    try {\n      await api.put(`/despostes/${editingDesposteId}`, {\n        id_factura: editedDesposte.invoiceId,\n        id_usuario: editedDesposte.operatorId,\n        fecha: editedDesposte.date\n      });\n      await loadData();\n      await refreshInventory();\n      handleCancelEditDesposte();\n      alert('Desposte actualizado con éxito!');\n    } catch (error) {\n      console.error('Error updating deboning:', error);\n      alert('Error al actualizar el desposte. Intenta de nuevo.');\n    }\n  };\n\n  const handleDeleteDesposte = async (id) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este desposte?')) {\n      try {\n        await api.delete(`/despostes/${id}`);\n        await loadData();\n        await refreshInventory();\n        alert('Desposte eliminado con éxito!');\n      } catch (error) {\n        console.error('Error deleting deboning:', error);\n        alert('Error al eliminar el desposte. Intenta de nuevo.');\n      }\n    }\n  };\n\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Registro de Despostes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Nuevo Desposte</h3>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"invoice\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Factura Pendiente de Desposte</label>\n          <select\n            id=\"invoice\"\n            value={selectedInvoiceId}\n            onChange={(e) => setSelectedInvoiceId(Number(e.target.value))}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona una Factura</option>\n             {invoicesWithPendingChannels.map(invoice => (\n              <option key={invoice.id} value={invoice.id}>\n                {invoice.number} ({invoice.date})\n              </option>\n            ))}\n          </select>\n            {invoicesWithPendingChannels.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay facturas pendientes de desposte.</p>\n          )}\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"operatorId\" className=\"block text-sm font-medium text-gray-700\">Operario que Desposta</label>\n          <select\n            id=\"operatorId\"\n            name=\"operatorId\"\n            value={selectedOperatorId}\n            onChange={(e) => setSelectedOperatorId(Number(e.target.value))}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona un Operario</option>\n            {operarioUsers.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.fullName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mt-3\">\n           <label className=\"block text-sm font-medium text-gray-700\">Seleccionar Canales a Despostar</label>\n          <div className=\"mt-2 space-y-1\">\n            {availableChannels.map(ch => (\n              <label key={ch.code} className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedChannelCodes.includes(ch.code)}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      setSelectedChannelCodes([...selectedChannelCodes, ch.code]);\n                    } else {\n                      setSelectedChannelCodes(selectedChannelCodes.filter(c => c !== ch.code));\n                    }\n                  }}\n                />\n                <span>{`Código: ${ch.code} (${ch.type}, ${ch.weight}kg)`}</span>\n              </label>\n            ))}\n          {selectedInvoiceId && availableChannels.length === 0 && (\n              <p className=\"text-sm text-gray-500\">No hay canales disponibles para despostar en esta factura.</p>\n            )}\n          </div>\n        </div>\n\n        {selectedChannelCodes.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Registrar Cortes para Canales {selectedChannelCodes.join(', ')}</h4>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutType\" className=\"block text-sm font-medium text-gray-700\">Tipo de Corte</label>\n              <select\n                id=\"cutType\"\n                name=\"cutType\"\n                value={newCut.cutType}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              >\n                <option value=\"\">Selecciona un Tipo de Corte</option>\n                {availableCutTypes.map(type => (\n                  <option key={type} value={type}>{type}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutWeight\" className=\"block text-sm font-medium text-gray-700\">Peso del Corte (kg)</label>\n              <input\n                type=\"number\"\n                id=\"cutWeight\"\n                name=\"weight\"\n                placeholder=\"Ej: 50\"\n                value={newCut.weight}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n             <div className=\"mt-3\">\n              <label htmlFor=\"cutQuantity\" className=\"block text-sm font-medium text-gray-700\">Cantidad de Piezas</label>\n              <input\n                type=\"number\"\n                id=\"cutQuantity\"\n                name=\"quantity\"\n                placeholder=\"Ej: 2\"\n                value={newCut.quantity}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n            <button\n              onClick={handleAddTemporaryCut}\n              className=\"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Agregar Corte a la Lista\n            </button>\n          </div>\n        )}\n\n        {currentCuts.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-white\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Cortes Temporales para Canales {selectedChannelCodes.join(', ')}</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {currentCuts.map(cut => (\n                <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3 flex justify-between items-center\">\n                  <div>\n                    <p className=\"text-gray-700 font-medium\">{cut.cutType}: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                    <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                  </div>\n                  <button\n                    onClick={() => handleDeleteTemporaryCut(cut.id)}\n                    className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                  >\n                    Eliminar\n                  </button>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"mt-4 p-3 bg-gray-100 rounded-lg\">\n              <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso Total Temporal</h5>\n              <p className=\"text-gray-700\">Total Despostado: {getTotalWeightSummary(currentCuts)} kg</p>\n            </div>\n\n            <button\n              onClick={handleRegisterAllCuts}\n              className=\"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Registrar Todos los Cortes\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Sección de Visualización de Despostes Integrada */}\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Despostes Registrados por Factura</h2>\n\n        <div className=\"mb-6 bg-white p-4 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Filtros de Despostes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"search-deboning\" className=\"block text-sm font-medium text-gray-700\">Buscar (Número Factura)</label>\n              <input\n                type=\"text\"\n                id=\"search-deboning\"\n                placeholder=\"Ej: FAC-2023-001\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n             <div>\n              <label htmlFor=\"start-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Inicio Desposte</label>\n              <input\n                type=\"date\"\n                id=\"start-date-deboning\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"end-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Fin Desposte</label>\n              <input\n                type=\"date\"\n                id=\"end-date-deboning\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n           <button\n            onClick={handleClearFilters}\n            className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Limpiar Filtros\n          </button>\n        </div>\n\n\n        {paginatedGroupedCuts.length > 0 ? (\n          <div className=\"space-y-8\">\n            {paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n              const invoice = invoices.find(inv => inv.number === invoiceNumber);\n              const invoiceId = invoice ? invoice.id : null;\n\n              return (\n                <div key={invoiceNumber} className=\"bg-white p-6 rounded-lg shadow-md\">\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Factura: {invoiceNumber}</h3>\n\n                  {Object.entries(cutsList.reduce((acc, cut) => {\n                    if (!acc[cut.desposteId]) acc[cut.desposteId] = [];\n                    acc[cut.desposteId].push(cut);\n                    return acc;\n                  }, {})).map(([desId, desCuts]) => {\n                    const des = despostes.find(d => d.id_desposte === Number(desId)) || {};\n                    return (\n                      <div key={desId} className=\"mb-6 border border-gray-200 rounded-lg p-4\">\n                        <div className=\"flex justify-between items-start mb-4\">\n                          <div>\n                            <p className=\"text-gray-700 font-medium\">Desposte ID: {desId}</p>\n                            <p className=\"text-gray-600 text-sm\">Operario: {getOperatorName(des.id_usuario)}</p>\n                            <p className=\"text-gray-600 text-sm\">Fecha: {des.fecha}</p>\n                          </div>\n                          {userRole === 'admin' && (\n                            <div className=\"flex space-x-2\">\n                              <button onClick={() => handleEditDesposte(des)} className=\"px-3 py-1 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\">Editar</button>\n                              <button onClick={() => handleDeleteDesposte(desId)} className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\">Eliminar</button>\n                            </div>\n                          )}\n                        </div>\n\n                        {editingDesposteId === Number(desId) ? (\n                          <div className=\"space-y-3 mb-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700\">Factura</label>\n                              <select name=\"invoiceId\" value={editedDesposte.invoiceId} onChange={handleEditedDesposteChange} className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\">\n                                <option value=\"\">Selecciona una Factura</option>\n                                {invoices.map(inv => (\n                                  <option key={inv.id} value={inv.id}>{inv.number}</option>\n                                ))}\n                              </select>\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700\">Operario</label>\n                              <select name=\"operatorId\" value={editedDesposte.operatorId} onChange={handleEditedDesposteChange} className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\">\n                                <option value=\"\">Selecciona un Operario</option>\n                                {operarioUsers.map(u => (\n                                  <option key={u.id} value={u.id}>{u.fullName}</option>\n                                ))}\n                              </select>\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700\">Fecha</label>\n                              <input type=\"date\" name=\"date\" value={editedDesposte.date} onChange={handleEditedDesposteChange} className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\" />\n                            </div>\n                            <div className=\"flex justify-end space-x-2\">\n                              <button onClick={handleCancelEditDesposte} className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\">Cancelar</button>\n                              <button onClick={handleSaveEditedDesposte} className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\">Guardar</button>\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\">\n                            {desCuts.map(cut => (\n                              <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3\">\n                                <p className=\"text-gray-700 font-medium\">Corte: <span className=\"font-normal\">{cut.cutType}</span></p>\n                                <p className=\"text-gray-700 font-medium\">Canales: <span className=\"font-normal\">{cut.channelCodes.join(', ')}</span></p>\n                                <p className=\"text-gray-700 font-medium\">Peso: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                                <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"mt-4 p-4 bg-gray-100 rounded-lg\">\n                    <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso por Tipo de Corte en esta Factura</h5>\n                    {getCutsSummary(cutsList).map(([type, totalWeight]) => (\n                      <p key={type} className=\"text-gray-700\">{type}: {totalWeight.toFixed(2)} kg</p>\n                    ))}\n\n                    <h5 className=\"text-md font-semibold text-gray-800 mt-4 mb-2\">Resumen de Peso Total y Merma</h5>\n                    <p className=\"text-gray-700\">Total Despostado: {getTotalWeightByInvoice(invoiceId, cutsList).toFixed(2)} kg</p>\n                    <p className=\"text-gray-700\">Merma: <span className={`${getMermaByInvoice(invoiceId, cutsList) >= 0 ? 'text-green-600' : 'text-red-600'}`}>{getMermaByInvoice(invoiceId, cutsList).toFixed(2)} kg</span></p>\n                    <h5 className=\"text-md font-semibold text-gray-800 mt-4 mb-2\">Merma Total por Tipo de Carne</h5>\n                    {invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([type, mermaWeight]) => (\n                      <p key={`${type}-total-merma`} className=\"text-gray-700\">\n                        {type}: <span className={`${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`}>{mermaWeight.toFixed(2)} kg</span>\n                      </p>\n                    ))}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay despostes registrados que coincidan con la búsqueda o rango de fechas.</p>\n        )}\n      </div>\n\n       {totalPages > 1 && (\n        <div className=\"flex justify-center mt-6 space-x-2\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index + 1}\n              onClick={() => handlePageChange(index + 1)}\n              className={`px-4 py-2 rounded-lg transition-colors ${\n                currentPage === index + 1\n                  ? 'bg-black text-white'\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n              }`}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DeboningForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
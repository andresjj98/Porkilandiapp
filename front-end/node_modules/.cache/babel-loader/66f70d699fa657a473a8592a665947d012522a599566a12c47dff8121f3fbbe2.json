{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\InventoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n/*import { getStorage } from '../utils/storage';\nimport { initialInvoices } from '../mock/invoices';\nimport { initialUsers } from '../mock/users';*/\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryList = () => {\n  _s();\n  /*const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);*/\n  const [items, setItems] = useState([]);\n  const [inventory, setInventory] = useState({});\n  const [totalWeightByMeatType, setTotalWeightByMeatType] = useState({});\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        /*const loadedCuts = await getStorage('cuts');\n        setCuts(loadedCuts || []);\n        const loadedInvoices = await getStorage('invoices');\n        setInvoices(loadedInvoices || []);\n        const loadedUsers = await getStorage('users');\n        setUsers(loadedUsers || []);*/\n        const [{\n          data: productos\n        }, {\n          data: inventario\n        }] = await Promise.all([api.get('/productos'), api.get('/inventario')]);\n        const prodMap = {};\n        (productos || []).forEach(p => {\n          prodMap[p.id_producto] = p.nombre;\n        });\n        const mapped = (inventario || []).map(it => ({\n          id: it.id_inventario,\n          productId: it.id_producto,\n          productName: prodMap[it.id_producto] || 'Desconocido',\n          quantity: it.cantidad,\n          weight: parseFloat(it.peso_total),\n          status: it.estado,\n          origin: it.origen || ''\n        }));\n        setItems(mapped);\n      } catch (error) {\n        console.error('Error loading inventory:', error);\n      }\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    /*const groupedInventory = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      const originInvoiceNumber = invoice ? invoice.number : 'Desconocida';\n       if (!acc[meatType]) {\n        acc[meatType] = {};\n      }\n       const key = `${cut.cutType}-${originInvoiceNumber}`;\n       if (!acc[meatType][key]) {\n        acc[meatType][key] = {\n          cutType: cut.cutType,\n          totalWeight: 0,\n          totalQuantity: 0,\n          origins: new Set(),\n        };\n      }\n       acc[meatType][key].totalWeight += cut.weight;\n      acc[meatType][key].totalQuantity += cut.quantity;\n      acc[meatType][key].origins.add(originInvoiceNumber);*/\n\n    const grouped = items.reduce((acc, item) => {\n      if (!acc[item.productName]) acc[item.productName] = [];\n      acc[item.productName].push(item);\n      return acc;\n    }, {});\n    setInventory(grouped);\n\n    /*Object.keys(groupedInventory).forEach(meatType => {\n      Object.keys(groupedInventory[meatType]).forEach(key => {\n        groupedInventory[meatType][key].origins = Array.from(groupedInventory[meatType][key].origins);\n      });\n    });\n     setInventory(groupedInventory);\n     const totalByMeatType = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n       acc[meatType] = (acc[meatType] || 0) + cut.weight;*/\n    const totalByMeatType = items.reduce((acc, item) => {\n      acc[item.productName] = (acc[item.productName] || 0) + item.weight;\n      return acc;\n    }, {});\n    setTotalWeightByMeatType(totalByMeatType);\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Inventario de Cortes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Total de Kilos por Tipo de Carne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), Object.keys(totalWeightByMeatType).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: Object.entries(totalWeightByMeatType).map(([meatType, totalWeight]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-gray-200 rounded-lg p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800 font-medium\",\n            children: [meatType, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-normal\",\n              children: [totalWeight.toFixed(2), \" kg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)\n        }, meatType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay datos de inventario para mostrar el resumen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Detalle de Inventario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), Object.keys(inventory).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-8\",\n      children: Object.entries(inventory).map(([meatType, itemsList]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: [\"Tipo de Carne: \", meatType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: itemsList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Peso Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: [item.weight.toFixed(2), \" kg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 74\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Origen: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.origin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Estado: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, meatType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600\",\n      children: \"No hay cortes en el inventario detallado a\\xFAn.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryList, \"KgV92+tj+c497XUaKs1cQSxnMiQ=\");\n_c = InventoryList;\nexport default InventoryList;\nvar _c;\n$RefreshReg$(_c, \"InventoryList\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","InventoryList","_s","items","setItems","inventory","setInventory","totalWeightByMeatType","setTotalWeightByMeatType","loadData","data","productos","inventario","Promise","all","get","prodMap","forEach","p","id_producto","nombre","mapped","map","it","id","id_inventario","productId","productName","quantity","cantidad","weight","parseFloat","peso_total","status","estado","origin","origen","error","console","grouped","reduce","acc","item","push","totalByMeatType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","meatType","totalWeight","toFixed","itemsList","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/InventoryList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n/*import { getStorage } from '../utils/storage';\nimport { initialInvoices } from '../mock/invoices';\nimport { initialUsers } from '../mock/users';*/\nimport api from '../services/api';\n\nconst InventoryList = () => {\n  /*const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);*/\n  const [items, setItems] = useState([]); \n  const [inventory, setInventory] = useState({});\n  const [totalWeightByMeatType, setTotalWeightByMeatType] = useState({});\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        /*const loadedCuts = await getStorage('cuts');\n        setCuts(loadedCuts || []);\n        const loadedInvoices = await getStorage('invoices');\n        setInvoices(loadedInvoices || []);\n        const loadedUsers = await getStorage('users');\n        setUsers(loadedUsers || []);*/\n          const [{ data: productos }, { data: inventario }] = await Promise.all([\n          api.get('/productos'),\n          api.get('/inventario')\n        ]);\n\n        const prodMap = {};\n        (productos || []).forEach(p => {\n          prodMap[p.id_producto] = p.nombre;\n        });\n\n        const mapped = (inventario || []).map(it => ({\n          id: it.id_inventario,\n          productId: it.id_producto,\n          productName: prodMap[it.id_producto] || 'Desconocido',\n          quantity: it.cantidad,\n          weight: parseFloat(it.peso_total),\n          status: it.estado,\n          origin: it.origen || ''\n        }));\n\n        setItems(mapped);\n      } catch (error) {\n        console.error('Error loading inventory:', error);\n      }\n    };\n    loadData();\n  }, []);\n\n\n  useEffect(() => {\n    /*const groupedInventory = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      const originInvoiceNumber = invoice ? invoice.number : 'Desconocida';\n\n      if (!acc[meatType]) {\n        acc[meatType] = {};\n      }\n\n      const key = `${cut.cutType}-${originInvoiceNumber}`;\n\n      if (!acc[meatType][key]) {\n        acc[meatType][key] = {\n          cutType: cut.cutType,\n          totalWeight: 0,\n          totalQuantity: 0,\n          origins: new Set(),\n        };\n      }\n\n      acc[meatType][key].totalWeight += cut.weight;\n      acc[meatType][key].totalQuantity += cut.quantity;\n      acc[meatType][key].origins.add(originInvoiceNumber);*/\n\n     const grouped = items.reduce((acc, item) => {\n      if (!acc[item.productName]) acc[item.productName] = [];\n      acc[item.productName].push(item);\n\n      return acc;\n    }, {});\n    setInventory(grouped);\n\n    /*Object.keys(groupedInventory).forEach(meatType => {\n      Object.keys(groupedInventory[meatType]).forEach(key => {\n        groupedInventory[meatType][key].origins = Array.from(groupedInventory[meatType][key].origins);\n      });\n    });\n\n    setInventory(groupedInventory);\n\n    const totalByMeatType = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;*/\n      const totalByMeatType = items.reduce((acc, item) => {\n      acc[item.productName] = (acc[item.productName] || 0) + item.weight;\n      return acc;\n    }, {});\n    setTotalWeightByMeatType(totalByMeatType);\n\n  }, [items]);\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Inventario de Cortes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Total de Kilos por Tipo de Carne</h3>\n        {Object.keys(totalWeightByMeatType).length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {Object.entries(totalWeightByMeatType).map(([meatType, totalWeight]) => (\n              <div key={meatType} className=\"border border-gray-200 rounded-lg p-4\">\n                <p className=\"text-gray-800 font-medium\">{meatType}: <span className=\"font-normal\">{totalWeight.toFixed(2)} kg</span></p>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay datos de inventario para mostrar el resumen.</p>\n        )}\n      </div>\n\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Detalle de Inventario</h2>\n      {Object.keys(inventory).length > 0 ? (\n        <div className=\"space-y-8\">\n          {Object.entries(inventory).map(([meatType, itemsList]) => (\n            <div key={meatType} className=\"bg-white p-6 rounded-lg shadow-md\">\n              <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Tipo de Carne: {meatType}</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n{itemsList.map(item => (\n                  <div key={item.id} className=\"border border-gray-200 rounded-lg p-4\">\n                    <p className=\"text-gray-800 font-medium\">Cantidad: <span className=\"font-normal\">{item.quantity}</span></p>\n                    <p className=\"text-gray-800 font-medium\">Peso Total: <span className=\"font-normal\">{item.weight.toFixed(2)} kg</span></p>\n                    <p className=\"text-gray-800 font-medium\">Origen: <span className=\"font-normal\">{item.origin}</span></p>\n                    <p className=\"text-gray-800 font-medium\">Estado: <span className=\"font-normal\">{item.status}</span></p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p className=\"text-gray-600\">No hay cortes en el inventario detallado aún.</p>\n      )}\n    </div>\n  );\n};\n\nexport default InventoryList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
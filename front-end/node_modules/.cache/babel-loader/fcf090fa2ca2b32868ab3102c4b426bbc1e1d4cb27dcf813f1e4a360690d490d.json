{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\contexts\\\\InventoryContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InventoryContext = /*#__PURE__*/createContext({\n  items: [],\n  refreshInventory: () => {},\n  loading: true\n});\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const loadInventory = async () => {\n    try {\n      const {\n        data\n      } = await api.get('/inventario/detalles');\n      const mapped = (data || []).map(it => ({\n        id: it.id_inventario,\n        meatType: it.tipo_carne,\n        cutType: it.tipo_corte,\n        quantity: it.cantidad,\n        weight: parseFloat(it.peso_total),\n        status: it.estado,\n        origin: it.origen || ''\n      }));\n      setItems(mapped);\n    } catch (err) {\n      console.error('Error loading inventory:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadInventory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      items,\n      refreshInventory: loadInventory,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryProvider, \"X0A+44AtCQpjgFsTFhgdow3TGVs=\");\n_c = InventoryProvider;\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","InventoryContext","items","refreshInventory","loading","InventoryProvider","children","_s","setItems","setLoading","loadInventory","data","get","mapped","map","it","id","id_inventario","meatType","tipo_carne","cutType","tipo_corte","quantity","cantidad","weight","parseFloat","peso_total","status","estado","origin","origen","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/contexts/InventoryContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nexport const InventoryContext = createContext({ items: [], refreshInventory: () => {}, loading: true });\r\n\r\nexport const InventoryProvider = ({ children }) => {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const loadInventory = async () => {\r\n    try {\r\n      const { data } = await api.get('/inventario/detalles');\r\n\r\n      const mapped = (data || []).map(it => ({\r\n        id: it.id_inventario,\r\n        meatType: it.tipo_carne,\r\n        cutType: it.tipo_corte,\r\n        quantity: it.cantidad,\r\n        weight: parseFloat(it.peso_total),\r\n        status: it.estado,\r\n        origin: it.origen || '',\r\n      }));\r\n\r\n      setItems(mapped);\r\n    } catch (err) {\r\n      console.error('Error loading inventory:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadInventory();\r\n  }, []);\r\n\r\n  return (\r\n    <InventoryContext.Provider value={{ items, refreshInventory: loadInventory, loading }}>\r\n      {children}\r\n    </InventoryContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,gBAAgB,gBAAGN,aAAa,CAAC;EAAEO,KAAK,EAAE,EAAE;EAAEC,gBAAgB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAAEC,OAAO,EAAE;AAAK,CAAC,CAAC;AAEvG,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEK,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,sBAAsB,CAAC;MAEtD,MAAMC,MAAM,GAAG,CAACF,IAAI,IAAI,EAAE,EAAEG,GAAG,CAACC,EAAE,KAAK;QACrCC,EAAE,EAAED,EAAE,CAACE,aAAa;QACpBC,QAAQ,EAAEH,EAAE,CAACI,UAAU;QACvBC,OAAO,EAAEL,EAAE,CAACM,UAAU;QACtBC,QAAQ,EAAEP,EAAE,CAACQ,QAAQ;QACrBC,MAAM,EAAEC,UAAU,CAACV,EAAE,CAACW,UAAU,CAAC;QACjCC,MAAM,EAAEZ,EAAE,CAACa,MAAM;QACjBC,MAAM,EAAEd,EAAE,CAACe,MAAM,IAAI;MACvB,CAAC,CAAC,CAAC;MAEHtB,QAAQ,CAACK,MAAM,CAAC;IAClB,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAChD,CAAC,SAAS;MACRtB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACda,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACC,gBAAgB,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAEjC,KAAK;MAAEC,gBAAgB,EAAEO,aAAa;MAAEN;IAAQ,CAAE;IAAAE,QAAA,EACnFA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAAChC,EAAA,CAnCWF,iBAAiB;AAAAmC,EAAA,GAAjBnC,iBAAiB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\InventoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { InventoryContext } from '../contexts/InventoryContext';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryList = () => {\n  _s();\n  /*const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);*/\n  const {\n    items\n  } = useContext(InventoryContext);\n  const [inventory, setInventory] = useState({});\n  const [totalWeightByMeatType, setTotalWeightByMeatType] = useState({});\n  useEffect(() => {\n    /*const groupedInventory = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      const originInvoiceNumber = invoice ? invoice.number : 'Desconocida';\n       if (!acc[meatType]) {\n        acc[meatType] = {};\n      }\n       const key = `${cut.cutType}-${originInvoiceNumber}`;\n       if (!acc[meatType][key]) {\n        acc[meatType][key] = {\n          cutType: cut.cutType,\n          totalWeight: 0,\n          totalQuantity: 0,\n          origins: new Set(),\n        };\n      }\n       acc[meatType][key].totalWeight += cut.weight;\n      acc[meatType][key].totalQuantity += cut.quantity;\n      acc[meatType][key].origins.add(originInvoiceNumber);*/\n\n    const grouped = items.reduce((acc, item) => {\n      if (!acc[item.productName]) acc[item.productName] = [];\n      acc[item.productName].push(item);\n      return acc;\n    }, {});\n    setInventory(grouped);\n\n    /*Object.keys(groupedInventory).forEach(meatType => {\n      Object.keys(groupedInventory[meatType]).forEach(key => {\n        groupedInventory[meatType][key].origins = Array.from(groupedInventory[meatType][key].origins);\n      });\n    });\n     setInventory(groupedInventory);\n     const totalByMeatType = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n       acc[meatType] = (acc[meatType] || 0) + cut.weight;*/\n    const totalByMeatType = items.reduce((acc, item) => {\n      acc[item.productName] = (acc[item.productName] || 0) + item.weight;\n      return acc;\n    }, {});\n    setTotalWeightByMeatType(totalByMeatType);\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Inventario de Cortes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Total de Kilos por Tipo de Carne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), Object.keys(totalWeightByMeatType).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: Object.entries(totalWeightByMeatType).map(([meatType, totalWeight]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-gray-200 rounded-lg p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800 font-medium\",\n            children: [meatType, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-normal\",\n              children: [totalWeight.toFixed(2), \" kg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, meatType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay datos de inventario para mostrar el resumen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Detalle de Inventario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), Object.keys(inventory).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-8\",\n      children: Object.entries(inventory).map(([meatType, itemsList]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: [\"Tipo de Carne: \", meatType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: itemsList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Peso Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: [item.weight.toFixed(2), \" kg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 74\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Origen: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.origin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Estado: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, meatType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600\",\n      children: \"No hay cortes en el inventario detallado a\\xFAn.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryList, \"LKCjc5T79O07CpPgHPPjBIsuYHw=\");\n_c = InventoryList;\nexport default InventoryList;\nvar _c;\n$RefreshReg$(_c, \"InventoryList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","InventoryContext","api","jsxDEV","_jsxDEV","InventoryList","_s","items","inventory","setInventory","totalWeightByMeatType","setTotalWeightByMeatType","grouped","reduce","acc","item","productName","push","totalByMeatType","weight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","map","meatType","totalWeight","toFixed","itemsList","quantity","origin","status","id","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/InventoryList.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { InventoryContext } from '../contexts/InventoryContext';\nimport api from '../services/api';\n\nconst InventoryList = () => {\n  /*const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);*/\n  const { items } = useContext(InventoryContext);\n  const [inventory, setInventory] = useState({});\n  const [totalWeightByMeatType, setTotalWeightByMeatType] = useState({});\n\n\n  useEffect(() => {\n    /*const groupedInventory = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      const originInvoiceNumber = invoice ? invoice.number : 'Desconocida';\n\n      if (!acc[meatType]) {\n        acc[meatType] = {};\n      }\n\n      const key = `${cut.cutType}-${originInvoiceNumber}`;\n\n      if (!acc[meatType][key]) {\n        acc[meatType][key] = {\n          cutType: cut.cutType,\n          totalWeight: 0,\n          totalQuantity: 0,\n          origins: new Set(),\n        };\n      }\n\n      acc[meatType][key].totalWeight += cut.weight;\n      acc[meatType][key].totalQuantity += cut.quantity;\n      acc[meatType][key].origins.add(originInvoiceNumber);*/\n\n     const grouped = items.reduce((acc, item) => {\n      if (!acc[item.productName]) acc[item.productName] = [];\n      acc[item.productName].push(item);\n\n      return acc;\n    }, {});\n    setInventory(grouped);\n\n    /*Object.keys(groupedInventory).forEach(meatType => {\n      Object.keys(groupedInventory[meatType]).forEach(key => {\n        groupedInventory[meatType][key].origins = Array.from(groupedInventory[meatType][key].origins);\n      });\n    });\n\n    setInventory(groupedInventory);\n\n    const totalByMeatType = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;*/\n      const totalByMeatType = items.reduce((acc, item) => {\n      acc[item.productName] = (acc[item.productName] || 0) + item.weight;\n      return acc;\n    }, {});\n    setTotalWeightByMeatType(totalByMeatType);\n\n  }, [items]);\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Inventario de Cortes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Total de Kilos por Tipo de Carne</h3>\n        {Object.keys(totalWeightByMeatType).length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {Object.entries(totalWeightByMeatType).map(([meatType, totalWeight]) => (\n              <div key={meatType} className=\"border border-gray-200 rounded-lg p-4\">\n                <p className=\"text-gray-800 font-medium\">{meatType}: <span className=\"font-normal\">{totalWeight.toFixed(2)} kg</span></p>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay datos de inventario para mostrar el resumen.</p>\n        )}\n      </div>\n\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Detalle de Inventario</h2>\n      {Object.keys(inventory).length > 0 ? (\n        <div className=\"space-y-8\">\n          {Object.entries(inventory).map(([meatType, itemsList]) => (\n            <div key={meatType} className=\"bg-white p-6 rounded-lg shadow-md\">\n              <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Tipo de Carne: {meatType}</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n{itemsList.map(item => (\n                  <div key={item.id} className=\"border border-gray-200 rounded-lg p-4\">\n                    <p className=\"text-gray-800 font-medium\">Cantidad: <span className=\"font-normal\">{item.quantity}</span></p>\n                    <p className=\"text-gray-800 font-medium\">Peso Total: <span className=\"font-normal\">{item.weight.toFixed(2)} kg</span></p>\n                    <p className=\"text-gray-800 font-medium\">Origen: <span className=\"font-normal\">{item.origin}</span></p>\n                    <p className=\"text-gray-800 font-medium\">Estado: <span className=\"font-normal\">{item.status}</span></p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p className=\"text-gray-600\">No hay cortes en el inventario detallado aún.</p>\n      )}\n    </div>\n  );\n};\n\nexport default InventoryList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
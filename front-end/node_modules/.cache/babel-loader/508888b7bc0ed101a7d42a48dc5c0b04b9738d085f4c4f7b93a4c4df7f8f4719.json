{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\DeboningForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getStorage, setStorage } from '../utils/storage';\nimport { initialInvoices } from '../mock/invoices';\nimport { initialCutTypes } from '../mock/cutTypes';\nimport { filterByDateRange } from '../utils/dateFilters';\nimport { initialUsers } from '../mock/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeboningForm = () => {\n  _s();\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableCarcasses, setAvailableCarcasses] = useState([]);\n  const [selectedCarcassCode, setSelectedCarcassCode] = useState('');\n  const [currentCutsForCarcass, setCurrentCutsForCarcass] = useState([]);\n  const [newCut, setNewCut] = useState({\n    cutType: '',\n    weight: '',\n    quantity: ''\n  });\n  const [productos, setProductos] = useState([]); // Inicializar lista de productos desde el back\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const operarioUsers = users.filter(user => user.role === 'Operario');\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const loadedInvoices = await getStorage('invoices');\n        setInvoices(loadedInvoices || []);\n        const loadedCuts = await getStorage('cuts');\n        setCuts(loadedCuts || []);\n        const loadedUsers = await getStorage('users');\n        setUsers(loadedUsers || []);\n        // 2.2) Llamar al backend para obtener lista de productos\n        try {\n          const resp = await api.get('/productos');\n          // resp.data = [{ id_producto: 1, nombre: 'Res' }, …]\n          setProductos(resp.data || []);\n        } catch (fetchErr) {\n          console.error(\"Error cargando productos:\", fetchErr);\n        }\n      } catch (error) {\n        console.error(\"Error loading initial data for DeboningForm:\", error);\n      }\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    if (selectedInvoiceId) {\n      const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n      if (invoice) {\n        const despostedCarcassCodes = cuts.filter(cut => cut.invoiceId === selectedInvoiceId).map(cut => cut.carcassCode);\n        const available = invoice.channels.filter(channel => !despostedCarcassCodes.includes(channel.code));\n        setAvailableCarcasses(available);\n        setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n      }\n    } else {\n      setAvailableCarcasses([]);\n      setSelectedCarcassCode('');\n      setCurrentCutsForCarcass([]);\n    }\n  }, [selectedInvoiceId, invoices, cuts]);\n  useEffect(() => {\n    setCurrentCutsForCarcass([]);\n  }, [selectedCarcassCode]);\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n  const handleNewCutChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCut({\n      ...newCut,\n      [name]: value\n    });\n  };\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10)\n    };\n    setCurrentCutsForCarcass([...currentCutsForCarcass, cutToAdd]);\n    setNewCut({\n      cutType: '',\n      weight: '',\n      quantity: ''\n    });\n  };\n  const handleDeleteTemporaryCut = id => {\n    setCurrentCutsForCarcass(currentCutsForCarcass.filter(cut => cut.id !== id));\n  };\n  const handleRegisterAllCuts = async () => {\n    if (currentCutsForCarcass.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n    if (!selectedInvoiceId || !selectedOperatorId || !selectedCarcassCode) {\n      alert('Por favor, selecciona la factura, el operario y el canal.');\n      return;\n    }\n    const processingDate = new Date().toISOString().split('T')[0];\n    const cutsToSave = currentCutsForCarcass.map(cut => ({\n      invoiceId: selectedInvoiceId,\n      operatorId: selectedOperatorId,\n      carcassCode: selectedCarcassCode,\n      cutType: cut.cutType,\n      weight: cut.weight,\n      quantity: cut.quantity,\n      processingDate\n    }));\n    try {\n      const newCuts = [...cuts, ...cutsToSave.map(c => ({\n        id: `cut-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        ...c\n      }))];\n      await setStorage('cuts', newCuts);\n      setCuts(newCuts);\n      setCurrentCutsForCarcass([]);\n      setSelectedCarcassCode('');\n      setNewCut({\n        cutType: '',\n        weight: '',\n        quantity: ''\n      });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error(\"Error registering cuts:\", error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n  const getTotalWeightSummary = cutsList => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n  const getInvoiceNumber = invoiceId => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n  const getOperatorName = operatorId => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n  const getCutsSummary = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getTotalWeightByMeatType = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return {};\n    const totalChannelWeight = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + channel.weight;\n      return acc;\n    }, {});\n    const totalCutWeight = cutsList.reduce((acc, cut) => {\n      const channel = invoice.channels.find(ch => ch.code === cut.carcassCode);\n      if (channel) {\n        acc[channel.type] = (acc[channel.type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n    const merma = {};\n    Object.keys(totalChannelWeight).forEach(meatType => {\n      const channelWeight = totalChannelWeight[meatType] || 0;\n      const cutWeight = totalCutWeight[meatType] || 0;\n      merma[meatType] = channelWeight - cutWeight;\n    });\n    Object.keys(totalCutWeight).forEach(meatType => {\n      if (!merma.hasOwnProperty(meatType)) {\n        merma[meatType] = -(totalCutWeight[meatType] || 0);\n      }\n    });\n    return Object.entries(merma);\n  };\n  const getCarcassType = carcassCode => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (invoice) {\n      const channel = invoice.channels.find(ch => ch.code === carcassCode);\n      return channel ? channel.type : 'Desconocido';\n    }\n    return 'Desconocido';\n  };\n\n  // Ahora, todos los productos (ej: “Res”, “Cerdo”, “Pollo”, etc.) aparecerán:\n  const availableCutTypes = selectedCarcassCode ? productos.map(p => p.nombre) : [];\n  const invoicesWithoutDeboning = invoices.filter(invoice => {\n    const hasDeboning = cuts.some(cut => cut.invoiceId === invoice.id);\n    return !hasDeboning;\n  });\n  const groupedCutsArray = Object.entries(groupedCuts);\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n    const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n    const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n    return dateB - dateA;\n  });\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Registro de Despostes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Nuevo Desposte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"invoice\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Factura Pendiente de Desposte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"invoice\",\n          value: selectedInvoiceId,\n          onChange: e => setSelectedInvoiceId(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una Factura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), invoicesWithoutDeboning.map(invoice => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: invoice.id,\n            children: [invoice.number, \" (\", invoice.date, \")\"]\n          }, invoice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), invoicesWithoutDeboning.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay facturas pendientes de desposte.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operatorId\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Operario que Desposta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"operatorId\",\n          name: \"operatorId\",\n          value: selectedOperatorId,\n          onChange: e => setSelectedOperatorId(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Operario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), operarioUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.id,\n            children: user.fullName\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"carcass\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Canal a Despostar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"carcass\",\n          value: selectedCarcassCode,\n          onChange: e => setSelectedCarcassCode(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          disabled: !selectedInvoiceId || availableCarcasses.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Canal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), availableCarcasses.map(carcass => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: carcass.code,\n            children: `Código: ${carcass.code} (${carcass.type}, ${carcass.weight}kg)`\n          }, carcass.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), selectedInvoiceId && availableCarcasses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay canales disponibles para despostar en esta factura.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), selectedCarcassCode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Registrar Cortes para Canal \", selectedCarcassCode, \" (\", getCarcassType(selectedCarcassCode), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutType\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Tipo de Corte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cutType\",\n            name: \"cutType\",\n            value: newCut.cutType,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Tipo de Corte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), productos.map(producto => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: producto.nombre,\n              children: producto.nombre\n            }, producto.id_producto, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 16\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutWeight\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Peso del Corte (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutWeight\",\n            name: \"weight\",\n            placeholder: \"Ej: 50\",\n            value: newCut.weight,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutQuantity\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Cantidad de Piezas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutQuantity\",\n            name: \"quantity\",\n            placeholder: \"Ej: 2\",\n            value: newCut.quantity,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTemporaryCut,\n          className: \"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n          children: \"Agregar Corte a la Lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this), currentCutsForCarcass.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Cortes Temporales para Canal \", selectedCarcassCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: currentCutsForCarcass.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [cut.cutType, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.weight, \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 77\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.quantity, \" piezas\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTemporaryCut(cut.id),\n              className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 19\n            }, this)]\n          }, cut.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-gray-100 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-md font-semibold text-gray-800 mb-2\",\n            children: \"Resumen de Peso Total Temporal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700\",\n            children: [\"Total Despostado: \", getTotalWeightSummary(currentCutsForCarcass), \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegisterAllCuts,\n          className: \"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n          children: \"Registrar Todos los Cortes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Despostes Registrados por Factura\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Filtros de Despostes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Buscar (N\\xFAmero Factura)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search-deboning\",\n              placeholder: \"Ej: FAC-2023-001\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"start-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Inicio Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"start-date-deboning\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"end-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Fin Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"end-date-deboning\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearFilters,\n          className: \"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",\n          children: \"Limpiar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), paginatedGroupedCuts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n          const invoice = invoices.find(inv => inv.number === invoiceNumber);\n          const invoiceId = invoice ? invoice.id : null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: [\"Factura: \", invoiceNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: cutsList.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-gray-200 rounded-lg p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Corte: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.cutType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 73\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Canal C\\xF3digo: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.carcassCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 80\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Peso: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.weight, \" kg\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.quantity, \" piezas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Operario: \", getOperatorName(cut.operatorId)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Fecha: \", cut.processingDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 25\n                }, this)]\n              }, cut.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 p-4 bg-gray-100 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mb-2\",\n                children: \"Resumen de Peso por Tipo de Corte en esta Factura\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 21\n              }, this), getCutsSummary(cutsList).map(([type, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [type, \": \", totalWeight.toFixed(2), \" kg\"]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mt-4 mb-2\",\n                children: \"Total Kilos Despostado y Merma por Tipo de Carne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 21\n              }, this), getTotalWeightByMeatType(cutsList).map(([meatType, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [meatType, \" (Despostado): \", totalWeight.toFixed(2), \" kg\"]\n              }, meatType, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 23\n              }, this)), invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([meatType, mermaWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [meatType, \" (Merma): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`,\n                  children: [mermaWeight.toFixed(2), \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 45\n                }, this)]\n              }, `${meatType}-merma`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 19\n            }, this)]\n          }, invoiceNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay despostes registrados que coincidan con la b\\xFAsqueda o rango de fechas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6 space-x-2\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: `px-4 py-2 rounded-lg transition-colors ${currentPage === index + 1 ? 'bg-black text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(DeboningForm, \"5ZIZRM/GW8Q0TkP6GvP+UD1yjos=\");\n_c = DeboningForm;\nexport default DeboningForm;\nvar _c;\n$RefreshReg$(_c, \"DeboningForm\");","map":{"version":3,"names":["React","useState","useEffect","getStorage","setStorage","initialInvoices","initialCutTypes","filterByDateRange","initialUsers","jsxDEV","_jsxDEV","DeboningForm","_s","invoices","setInvoices","cuts","setCuts","users","setUsers","selectedInvoiceId","setSelectedInvoiceId","selectedOperatorId","setSelectedOperatorId","availableCarcasses","setAvailableCarcasses","selectedCarcassCode","setSelectedCarcassCode","currentCutsForCarcass","setCurrentCutsForCarcass","newCut","setNewCut","cutType","weight","quantity","productos","setProductos","searchTerm","setSearchTerm","startDate","setStartDate","endDate","setEndDate","groupedCuts","setGroupedCuts","currentPage","setCurrentPage","itemsPerPage","operarioUsers","filter","user","role","loadData","loadedInvoices","loadedCuts","loadedUsers","resp","api","get","data","fetchErr","console","error","invoice","find","inv","id","despostedCarcassCodes","cut","invoiceId","map","carcassCode","available","channels","channel","includes","code","dateFilteredCuts","grouped","reduce","acc","invoiceNumber","getInvoiceNumber","push","filteredGrouped","Object","entries","cutsList","toLowerCase","handleNewCutChange","e","name","value","target","handleAddTemporaryCut","alert","Date","now","cutToAdd","parseFloat","parseInt","handleDeleteTemporaryCut","handleRegisterAllCuts","length","processingDate","toISOString","split","cutsToSave","operatorId","newCuts","c","Math","random","toString","substr","getTotalWeightSummary","totalWeight","sum","toFixed","number","getOperatorName","operator","fullName","getCutsSummary","summary","getTotalWeightByMeatType","ch","meatType","type","getMermaByMeatType","totalChannelWeight","totalCutWeight","merma","keys","forEach","channelWeight","cutWeight","hasOwnProperty","getCarcassType","availableCutTypes","p","nombre","invoicesWithoutDeboning","hasDeboning","some","groupedCutsArray","sortedGroupedCuts","sort","cutsA","cutsB","dateA","dateB","startIndex","endIndex","paginatedGroupedCuts","slice","totalPages","ceil","handlePageChange","page","handleClearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","date","disabled","carcass","producto","id_producto","placeholder","onClick","mermaWeight","Array","from","_","index","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/DeboningForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getStorage, setStorage } from '../utils/storage';\nimport { initialInvoices } from '../mock/invoices';\nimport { initialCutTypes } from '../mock/cutTypes';\nimport { filterByDateRange } from '../utils/dateFilters';\nimport { initialUsers } from '../mock/users';\n\n\nconst DeboningForm = () => {\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableCarcasses, setAvailableCarcasses] = useState([]);\n  const [selectedCarcassCode, setSelectedCarcassCode] = useState('');\n  const [currentCutsForCarcass, setCurrentCutsForCarcass] = useState([]);\n  const [newCut, setNewCut] = useState({ cutType: '', weight: '', quantity: '' });\n  const [productos, setProductos] = useState([]); // Inicializar lista de productos desde el back\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n\n  const operarioUsers = users.filter(user => user.role === 'Operario');\n\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const loadedInvoices = await getStorage('invoices');\n        setInvoices(loadedInvoices || []);\n        const loadedCuts = await getStorage('cuts');\n        setCuts(loadedCuts || []);\n        const loadedUsers = await getStorage('users');\n        setUsers(loadedUsers || []);\n       // 2.2) Llamar al backend para obtener lista de productos\n       try {\n         const resp = await api.get('/productos');\n         // resp.data = [{ id_producto: 1, nombre: 'Res' }, …]\n         setProductos(resp.data || []);\n       } catch (fetchErr) {\n         console.error(\"Error cargando productos:\", fetchErr);\n       }\n      } catch (error) {\n        console.error(\"Error loading initial data for DeboningForm:\", error);\n      }\n    };\n    loadData();\n  }, []);\n\n\n  useEffect(() => {\n    if (selectedInvoiceId) {\n      const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n      if (invoice) {\n        const despostedCarcassCodes = cuts\n          .filter(cut => cut.invoiceId === selectedInvoiceId)\n          .map(cut => cut.carcassCode);\n\n        const available = invoice.channels.filter(channel =>\n          !despostedCarcassCodes.includes(channel.code)\n        );\n        setAvailableCarcasses(available);\n        setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n      }\n    } else {\n      setAvailableCarcasses([]);\n      setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n    }\n  }, [selectedInvoiceId, invoices, cuts]);\n\n  useEffect(() => {\n    setCurrentCutsForCarcass([]);\n  }, [selectedCarcassCode]);\n\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n\n\n  const handleNewCutChange = (e) => {\n    const { name, value } = e.target;\n    setNewCut({ ...newCut, [name]: value });\n  };\n\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10),\n    };\n\n    setCurrentCutsForCarcass([...currentCutsForCarcass, cutToAdd]);\n    setNewCut({ cutType: '', weight: '', quantity: '' });\n  };\n\n  const handleDeleteTemporaryCut = (id) => {\n    setCurrentCutsForCarcass(currentCutsForCarcass.filter(cut => cut.id !== id));\n  };\n\n  const handleRegisterAllCuts = async () => {\n    if (currentCutsForCarcass.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n    if (!selectedInvoiceId || !selectedOperatorId || !selectedCarcassCode) {\n       alert('Por favor, selecciona la factura, el operario y el canal.');\n       return;\n    }\n\n    const processingDate = new Date().toISOString().split('T')[0];\n    const cutsToSave = currentCutsForCarcass.map(cut => ({\n      invoiceId: selectedInvoiceId,\n      operatorId: selectedOperatorId,\n      carcassCode: selectedCarcassCode,\n      cutType: cut.cutType,\n      weight: cut.weight,\n      quantity: cut.quantity,\n      processingDate,\n    }));\n\n    try {\n      const newCuts = [...cuts, ...cutsToSave.map(c => ({ id: `cut-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`, ...c }))];\n      await setStorage('cuts', newCuts);\n      setCuts(newCuts);\n      setCurrentCutsForCarcass([]);\n      setSelectedCarcassCode('');\n      setNewCut({ cutType: '', weight: '', quantity: '' });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error(\"Error registering cuts:\", error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n\n\n  const getTotalWeightSummary = (cutsList) => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n\n  const getInvoiceNumber = (invoiceId) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n\n  const getOperatorName = (operatorId) => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n\n\n  const getCutsSummary = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getTotalWeightByMeatType = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return {};\n\n    const totalChannelWeight = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + channel.weight;\n      return acc;\n    }, {});\n\n    const totalCutWeight = cutsList.reduce((acc, cut) => {\n      const channel = invoice.channels.find(ch => ch.code === cut.carcassCode);\n      if (channel) {\n         acc[channel.type] = (acc[channel.type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n\n    const merma = {};\n    Object.keys(totalChannelWeight).forEach(meatType => {\n      const channelWeight = totalChannelWeight[meatType] || 0;\n      const cutWeight = totalCutWeight[meatType] || 0;\n      merma[meatType] = channelWeight - cutWeight;\n    });\n\n     Object.keys(totalCutWeight).forEach(meatType => {\n        if (!merma.hasOwnProperty(meatType)) {\n             merma[meatType] = -(totalCutWeight[meatType] || 0);\n        }\n     });\n\n\n    return Object.entries(merma);\n  };\n\n\n  const getCarcassType = (carcassCode) => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (invoice) {\n      const channel = invoice.channels.find(ch => ch.code === carcassCode);\n      return channel ? channel.type : 'Desconocido';\n    }\n    return 'Desconocido';\n  };\n\n  // Ahora, todos los productos (ej: “Res”, “Cerdo”, “Pollo”, etc.) aparecerán:\n  const availableCutTypes = selectedCarcassCode ? productos.map(p => p.nombre) : [];\n\n  const invoicesWithoutDeboning = invoices.filter(invoice => {\n    const hasDeboning = cuts.some(cut => cut.invoiceId === invoice.id);\n    return !hasDeboning;\n  });\n\n  const groupedCutsArray = Object.entries(groupedCuts);\n\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n      const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n      const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n      return dateB - dateA;\n  });\n\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Registro de Despostes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Nuevo Desposte</h3>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"invoice\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Factura Pendiente de Desposte</label>\n          <select\n            id=\"invoice\"\n            value={selectedInvoiceId}\n            onChange={(e) => setSelectedInvoiceId(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona una Factura</option>\n            {invoicesWithoutDeboning.map(invoice => (\n              <option key={invoice.id} value={invoice.id}>\n                {invoice.number} ({invoice.date})\n              </option>\n            ))}\n          </select>\n           {invoicesWithoutDeboning.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay facturas pendientes de desposte.</p>\n          )}\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"operatorId\" className=\"block text-sm font-medium text-gray-700\">Operario que Desposta</label>\n          <select\n            id=\"operatorId\"\n            name=\"operatorId\"\n            value={selectedOperatorId}\n            onChange={(e) => setSelectedOperatorId(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona un Operario</option>\n            {operarioUsers.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.fullName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"carcass\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Canal a Despostar</label>\n          <select\n            id=\"carcass\"\n            value={selectedCarcassCode}\n            onChange={(e) => setSelectedCarcassCode(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            disabled={!selectedInvoiceId || availableCarcasses.length === 0}\n          >\n            <option value=\"\">Selecciona un Canal</option>\n            {availableCarcasses.map(carcass => (\n              <option key={carcass.code} value={carcass.code}>\n                {`Código: ${carcass.code} (${carcass.type}, ${carcass.weight}kg)`}\n              </option>\n            ))}\n          </select>\n           {selectedInvoiceId && availableCarcasses.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay canales disponibles para despostar en esta factura.</p>\n          )}\n        </div>\n\n        {selectedCarcassCode && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Registrar Cortes para Canal {selectedCarcassCode} ({getCarcassType(selectedCarcassCode)})</h4>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutType\" className=\"block text-sm font-medium text-gray-700\">Tipo de Corte</label>\n              <select\n                id=\"cutType\"\n                name=\"cutType\"\n                value={newCut.cutType}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              >\n                <option value=\"\">Selecciona un Tipo de Corte</option>\n                {productos.map(producto => (\n               <option\n                 key={producto.id_producto}\n                 value={producto.nombre}\n               >\n                 {producto.nombre}\n               </option>\n             ))}\n              </select>\n            </div>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutWeight\" className=\"block text-sm font-medium text-gray-700\">Peso del Corte (kg)</label>\n              <input\n                type=\"number\"\n                id=\"cutWeight\"\n                name=\"weight\"\n                placeholder=\"Ej: 50\"\n                value={newCut.weight}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n             <div className=\"mt-3\">\n              <label htmlFor=\"cutQuantity\" className=\"block text-sm font-medium text-gray-700\">Cantidad de Piezas</label>\n              <input\n                type=\"number\"\n                id=\"cutQuantity\"\n                name=\"quantity\"\n                placeholder=\"Ej: 2\"\n                value={newCut.quantity}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n            <button\n              onClick={handleAddTemporaryCut}\n              className=\"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Agregar Corte a la Lista\n            </button>\n          </div>\n        )}\n\n        {currentCutsForCarcass.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-white\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Cortes Temporales para Canal {selectedCarcassCode}</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {currentCutsForCarcass.map(cut => (\n                <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3 flex justify-between items-center\">\n                  <div>\n                    <p className=\"text-gray-700 font-medium\">{cut.cutType}: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                    <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                  </div>\n                  <button\n                    onClick={() => handleDeleteTemporaryCut(cut.id)}\n                    className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                  >\n                    Eliminar\n                  </button>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"mt-4 p-3 bg-gray-100 rounded-lg\">\n              <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso Total Temporal</h5>\n              <p className=\"text-gray-700\">Total Despostado: {getTotalWeightSummary(currentCutsForCarcass)} kg</p>\n            </div>\n\n            <button\n              onClick={handleRegisterAllCuts}\n              className=\"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Registrar Todos los Cortes\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Sección de Visualización de Despostes Integrada */}\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Despostes Registrados por Factura</h2>\n\n        <div className=\"mb-6 bg-white p-4 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Filtros de Despostes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"search-deboning\" className=\"block text-sm font-medium text-gray-700\">Buscar (Número Factura)</label>\n              <input\n                type=\"text\"\n                id=\"search-deboning\"\n                placeholder=\"Ej: FAC-2023-001\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n             <div>\n              <label htmlFor=\"start-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Inicio Desposte</label>\n              <input\n                type=\"date\"\n                id=\"start-date-deboning\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"end-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Fin Desposte</label>\n              <input\n                type=\"date\"\n                id=\"end-date-deboning\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n           <button\n            onClick={handleClearFilters}\n            className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Limpiar Filtros\n          </button>\n        </div>\n\n\n        {paginatedGroupedCuts.length > 0 ? (\n          <div className=\"space-y-8\">\n            {paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n              const invoice = invoices.find(inv => inv.number === invoiceNumber);\n              const invoiceId = invoice ? invoice.id : null;\n\n              return (\n                <div key={invoiceNumber} className=\"bg-white p-6 rounded-lg shadow-md\">\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Factura: {invoiceNumber}</h3>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {cutsList.map(cut => (\n                      <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3\">\n                        <p className=\"text-gray-700 font-medium\">Corte: <span className=\"font-normal\">{cut.cutType}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Canal Código: <span className=\"font-normal\">{cut.carcassCode}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Peso: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                        <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                        <p className=\"text-gray-600 text-sm\">Operario: {getOperatorName(cut.operatorId)}</p>\n                        <p className=\"text-gray-600 text-sm\">Fecha: {cut.processingDate}</p>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"mt-4 p-4 bg-gray-100 rounded-lg\">\n                    <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso por Tipo de Corte en esta Factura</h5>\n                    {getCutsSummary(cutsList).map(([type, totalWeight]) => (\n                      <p key={type} className=\"text-gray-700\">{type}: {totalWeight.toFixed(2)} kg</p>\n                    ))}\n\n                    <h5 className=\"text-md font-semibold text-gray-800 mt-4 mb-2\">Total Kilos Despostado y Merma por Tipo de Carne</h5>\n                    {getTotalWeightByMeatType(cutsList).map(([meatType, totalWeight]) => (\n                      <p key={meatType} className=\"text-gray-700\">{meatType} (Despostado): {totalWeight.toFixed(2)} kg</p>\n                    ))}\n                     {invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([meatType, mermaWeight]) => (\n                      <p key={`${meatType}-merma`} className=\"text-gray-700\">\n                        {meatType} (Merma): <span className={`${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`}>{mermaWeight.toFixed(2)} kg</span>\n                      </p>\n                    ))}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay despostes registrados que coincidan con la búsqueda o rango de fechas.</p>\n        )}\n      </div>\n\n       {totalPages > 1 && (\n        <div className=\"flex justify-center mt-6 space-x-2\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index + 1}\n              onClick={() => handlePageChange(index + 1)}\n              className={`px-4 py-2 rounded-lg transition-colors ${\n                currentPage === index + 1\n                  ? 'bg-black text-white'\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n              }`}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DeboningForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
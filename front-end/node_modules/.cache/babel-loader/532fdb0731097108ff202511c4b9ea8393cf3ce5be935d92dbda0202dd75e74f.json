{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:4000/api'\n});\n\n// Interceptor: agrega el token a cada petición\napi.interceptors.request.use(cfg => {\n  const token = localStorage.getItem('token');\n  if (token) cfg.headers.Authorization = `Bearer ${token}`;\n  return cfg;\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_BASE_URL","interceptors","request","use","cfg","token","localStorage","getItem","headers","Authorization"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:4000/api',\r\n});\r\n\r\n// Interceptor: agrega el token a cada petición\r\napi.interceptors.request.use(cfg => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) cfg.headers.Authorization = `Bearer ${token}`;\r\n  return cfg;\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI;AACjD,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,GAAG,IAAI;EAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAED,GAAG,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACxD,OAAOD,GAAG;AACZ,CAAC,CAAC;AAEF,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
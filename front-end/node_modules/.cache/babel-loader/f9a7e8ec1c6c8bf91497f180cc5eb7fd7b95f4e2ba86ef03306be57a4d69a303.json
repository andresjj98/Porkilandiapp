{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\OrderForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\nimport { filterByDateRange } from '../utils/dateFilters';\nimport { subtractFromInventory } from '../utils/inventoryLogic';\nimport { InventoryContext } from '../contexts/InventoryContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderForm = () => {\n  _s();\n  var _cutTypes$newItem$mea;\n  const [orders, setOrders] = useState([]);\n  const [posList, setPosList] = useState([]);\n  const [cutTypes, setCutTypes] = useState({});\n  const [cutNameToIdByMeat, setCutNameToIdByMeat] = useState({});\n  const [cutIdToName, setCutIdToName] = useState({});\n  const [cutIdToMeatId, setCutIdToMeatId] = useState({});\n  const [meatTypeIdToName, setMeatTypeIdToName] = useState({});\n  const [productIdMap, setProductIdMap] = useState({});\n  const [productInfoById, setProductInfoById] = useState({});\n  const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [meatTypeNameToId, setMeatTypeNameToId] = useState({});\n  const {\n    refreshInventory\n  } = useContext(InventoryContext);\n  const [newOrder, setNewOrder] = useState({\n    codigoOrden: '',\n    date: '',\n    posId: '',\n    operatorId: '',\n    status: 'pendiente',\n    items: []\n  });\n  const [newItem, setNewItem] = useState({\n    meatType: '',\n    cutType: '',\n    quantity: '',\n    weight: ''\n  });\n  const [availableCutTypes, setAvailableCutTypes] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [editingOrderId, setEditingOrderId] = useState(null);\n  const [editedOrderStatus, setEditedOrderStatus] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const operarioUsers = users.filter(user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario');\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const {\n          data\n        } = await api.get('/puntos_venta');\n        setPosList(data || []);\n      } catch (err) {\n        console.error('Error loading puntos de venta:', err);\n      }\n      try {\n        const [ordRes, carneRes, prodRes, userRes, factRes, detRes] = await Promise.all([api.get('/ordenes'), api.get('/tipo_carne'), api.get('/productos'), api.get('/usuarios'), api.get('/facturas'), api.get('/detalles_corte')]);\n        const typeNameToId = {};\n        const typeIdToName = {};\n        (carneRes.data || []).forEach(p => {\n          typeNameToId[p.nombre] = p.id_tipo_carne;\n          typeIdToName[p.id_tipo_carne] = p.nombre;\n        });\n        const cutTypesMap = {};\n        const nameToIdByMeat = {};\n        const idToName = {};\n        const idToMeat = {};\n        const productMap = {};\n        const productInfo = {};\n        (prodRes.data || []).forEach(p => {\n          if (!cutTypesMap[p.tipo_carne]) cutTypesMap[p.tipo_carne] = [];\n          if (!cutTypesMap[p.tipo_carne].includes(p.tipo_corte)) {\n            cutTypesMap[p.tipo_carne].push(p.tipo_corte);\n          }\n          if (!nameToIdByMeat[p.tipo_carne]) nameToIdByMeat[p.tipo_carne] = {};\n          nameToIdByMeat[p.tipo_carne][p.tipo_corte] = p.id_tipo_corte;\n          idToName[p.id_tipo_corte] = p.tipo_corte;\n          idToMeat[p.id_tipo_corte] = p.id_tipo_carne;\n          if (!productMap[p.tipo_carne]) productMap[p.tipo_carne] = {};\n          productMap[p.tipo_carne][p.tipo_corte] = p.id_producto;\n          productInfo[p.id_producto] = {\n            meat: p.tipo_carne,\n            cut: p.tipo_corte\n          };\n        });\n        const invoicesList = factRes.data || [];\n        const cutsMap = {};\n        (detRes.data || []).forEach(det => {\n          cutsMap[det.id_detalle] = {\n            id: det.id_detalle,\n            invoiceId: det.id_desposte || 0,\n            carcassCode: String(det.id_canal),\n            cutType: det.id_tipo_corte,\n            quantity: det.cantidad,\n            weight: parseFloat(det.peso)\n          };\n        });\n        const ordersData = await Promise.all((ordRes.data || []).map(async ord => {\n          const {\n            data: detalles\n          } = await api.get(`/detalle_orden?orden=${ord.id_orden}`);\n          const items = (detalles || []).map(d => {\n            const info = productInfo[d.id_producto] || {};\n            return {\n              id: d.id_detalle,\n              meatType: info.meat || 'Desconocido',\n              cutType: info.cut || 'N/A',\n              quantity: d.cantidad,\n              weight: parseFloat(d.peso_total)\n            };\n          });\n          return {\n            id: ord.id_orden,\n            orderCode: ord.codigo_orden,\n            date: ord.fecha_orden,\n            posId: ord.id_pos,\n            operatorId: ord.id_usuario,\n            status: ord.estado,\n            items\n          };\n        }));\n        const usersMapped = (userRes.data || []).map(u => ({\n          id: u.id,\n          fullName: u.nombre,\n          role: u.role\n        }));\n        setMeatTypeNameToId(typeNameToId);\n        setMeatTypeIdToName(typeIdToName);\n        setCutNameToIdByMeat(nameToIdByMeat);\n        setCutIdToName(idToName);\n        setCutIdToMeatId(idToMeat);\n        setCutTypes(cutTypesMap);\n        setProductIdMap(productMap);\n        setProductInfoById(productInfo);\n        setInvoices(invoicesList);\n        setCuts(Object.values(cutsMap));\n        setOrders(ordersData);\n        setUsers(usersMapped);\n      } catch (error) {\n        console.error('Error loading initial data for OrderForm:', error);\n      }\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const {\n          data\n        } = await api.get('/usuarios');\n        const mapped = (data || []).map(u => ({\n          id: u.id,\n          fullName: u.nombre,\n          role: u.role\n        }));\n        setUsers(mapped);\n      } catch (err) {\n        console.error('Error loading users for operators list:', err);\n      }\n    };\n    loadUsers();\n  }, []);\n  useEffect(() => {\n    const loadLatestCuts = async () => {\n      try {\n        const {\n          data\n        } = await api.get('/productos');\n        const map = {};\n        const nameToId = {};\n        const idToNameMap = {};\n        const idToMeatMap = {};\n        const productMap = {};\n        const infoMap = {};\n        (data || []).forEach(p => {\n          if (!map[p.tipo_carne]) map[p.tipo_carne] = [];\n          if (!map[p.tipo_carne].includes(p.tipo_corte)) {\n            map[p.tipo_carne].push(p.tipo_corte);\n          }\n          if (!nameToId[p.tipo_carne]) nameToId[p.tipo_carne] = {};\n          nameToId[p.tipo_carne][p.tipo_corte] = p.id_tipo_corte;\n          idToNameMap[p.id_tipo_corte] = p.tipo_corte;\n          idToMeatMap[p.id_tipo_corte] = p.id_tipo_carne;\n          if (!productMap[p.tipo_carne]) productMap[p.tipo_carne] = {};\n          productMap[p.tipo_carne][p.tipo_corte] = p.id_producto;\n          infoMap[p.id_producto] = {\n            meat: p.tipo_carne,\n            cut: p.tipo_corte\n          };\n        });\n        setCutTypes(map);\n        setCutNameToIdByMeat(nameToId);\n        setCutIdToName(idToNameMap);\n        setCutIdToMeatId(idToMeatMap);\n        setProductIdMap(productMap);\n        setProductInfoById(infoMap);\n      } catch (err) {\n        console.error('Error refreshing cut types:', err);\n      }\n    };\n    loadLatestCuts();\n  }, []);\n  useEffect(() => {\n    if (newItem.meatType) {\n      setAvailableCutTypes(cutTypes[newItem.meatType] || []);\n    } else {\n      setAvailableCutTypes([]);\n    }\n    setNewItem(prev => ({\n      ...prev,\n      cutType: ''\n    }));\n  }, [newItem.meatType, cutTypes]);\n  const handleOrderInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewOrder({\n      ...newOrder,\n      [name]: value\n    });\n  };\n  const handleItemInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewItem({\n      ...newItem,\n      [name]: value\n    });\n  };\n  const handleAddItem = () => {\n    if (!newItem.meatType || !newItem.cutType || !newItem.quantity && !newItem.weight) {\n      alert('Por favor, completa al menos el tipo de carne, corte y cantidad o peso del item.');\n      return;\n    }\n    const itemToAdd = {\n      id: `item-${Date.now()}`,\n      ...newItem,\n      quantity: newItem.quantity ? parseInt(newItem.quantity, 10) : null,\n      weight: newItem.weight ? parseFloat(newItem.weight) : null\n    };\n    setNewOrder({\n      ...newOrder,\n      items: [...newOrder.items, itemToAdd]\n    });\n    setNewItem({\n      meatType: '',\n      cutType: '',\n      quantity: '',\n      weight: ''\n    });\n  };\n  const handleDeleteItem = itemId => {\n    setNewOrder({\n      ...newOrder,\n      items: newOrder.items.filter(item => item.id !== itemId)\n    });\n  };\n  const handleSaveOrder = async () => {\n    if (!newOrder.date || !newOrder.posId || !newOrder.operatorId || newOrder.items.length === 0) {\n      alert('Por favor, completa los datos de la orden y agrega al menos un item.');\n      return;\n    }\n    try {\n      const orderPayload = {\n        codigo_orden: newOrder.codigoOrden,\n        fecha_orden: newOrder.date,\n        id_usuario: newOrder.operatorId,\n        id_pos: newOrder.posId,\n        estado: newOrder.status\n      };\n      const {\n        data\n      } = await api.post('/ordenes', orderPayload);\n      const newId = data === null || data === void 0 ? void 0 : data.id;\n      await Promise.all(newOrder.items.map(item => {\n        var _productIdMap$item$me;\n        const productId = (_productIdMap$item$me = productIdMap[item.meatType]) === null || _productIdMap$item$me === void 0 ? void 0 : _productIdMap$item$me[item.cutType];\n        return api.post('/detalle_orden', {\n          id_orden: newId,\n          id_producto: productId,\n          cantidad: item.quantity || 0,\n          peso_total: item.weight || 0\n        });\n      }));\n      setOrders(prev => [...prev, {\n        id: newId,\n        orderCode: newOrder.codigoOrden,\n        date: newOrder.date,\n        posId: newOrder.posId,\n        operatorId: newOrder.operatorId,\n        status: newOrder.status,\n        items: newOrder.items\n      }]);\n      setNewOrder({\n        codigoOrden: '',\n        date: '',\n        posId: '',\n        operatorId: '',\n        status: 'pendiente',\n        items: []\n      });\n      setNewItem({\n        meatType: '',\n        cutType: '',\n        quantity: '',\n        weight: ''\n      });\n      alert('Orden guardada con éxito!');\n    } catch (error) {\n      console.error(\"Error saving order:\", error);\n      alert('Error al guardar la orden. Intenta de nuevo.');\n    }\n  };\n  const getPosName = posId => {\n    const pos = posList.find(p => p.id === posId);\n    return pos ? pos.name : 'Desconocido';\n  };\n  const getOperatorName = operatorId => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n  const handleDeleteOrder = async id => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar esta orden?')) {\n      try {\n        await api.delete(`/ordenes/${id}`);\n        setOrders(prev => prev.filter(order => order.id !== id));\n        alert('Orden eliminada con éxito!');\n      } catch (error) {\n        console.error('Error deleting order:', error);\n        alert('Error al eliminar la orden. Intenta de nuevo.');\n      }\n    }\n  };\n  const handleStartEditStatus = order => {\n    setEditingOrderId(order.id);\n    setEditedOrderStatus(order.status);\n  };\n  const handleSaveStatus = async orderId => {\n    try {\n      const orderToUpdate = orders.find(order => order.id === orderId);\n      if (!orderToUpdate) return;\n      if (editedOrderStatus === 'entregada' && orderToUpdate.status !== 'entregada') {\n        const updatedCuts = subtractFromInventory(cuts, invoices, orderToUpdate.items);\n        setCuts(updatedCuts);\n      }\n      const updatedOrder = {\n        ...orderToUpdate,\n        status: editedOrderStatus\n      };\n      await api.put(`/ordenes/${orderId}`, {\n        codigo_orden: updatedOrder.orderCode,\n        fecha_orden: updatedOrder.date,\n        id_usuario: updatedOrder.operatorId,\n        id_pos: updatedOrder.posId,\n        estado: editedOrderStatus\n      });\n      await refreshInventory();\n      setOrders(prev => prev.map(order => order.id === orderId ? updatedOrder : order));\n      setEditingOrderId(null);\n      setEditedOrderStatus('');\n      alert('Estado de la orden actualizado con éxito!');\n    } catch (error) {\n      console.error(\"Error updating order status:\", error);\n      alert('Error al actualizar el estado de la orden. Intenta de nuevo.');\n    }\n  };\n  const handleCancelEditStatus = () => {\n    setEditingOrderId(null);\n    setEditedOrderStatus('');\n  };\n  const textFilteredOrders = orders.filter(order => (order.orderCode || '').toLowerCase().includes(searchTerm.toLowerCase()) || getPosName(order.posId).toLowerCase().includes(searchTerm.toLowerCase()) || getOperatorName(order.operatorId).toLowerCase().includes(searchTerm.toLowerCase()) || order.status.toLowerCase().includes(searchTerm.toLowerCase()));\n  const dateFilteredOrders = filterByDateRange(textFilteredOrders, startDate, endDate, 'date');\n  const sortedOrders = [...dateFilteredOrders].sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n    return dateB - dateA;\n  });\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const paginatedOrders = sortedOrders.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(sortedOrders.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Registro de \\xD3rdenes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Nueva Orden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"orderCode\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"ID de Orden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"orderCode\",\n            name: \"codigoOrden\",\n            placeholder: \"Ej: PED-2023-001\",\n            value: newOrder.codigoOrden,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"orderDate\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"orderDate\",\n            name: \"date\",\n            value: newOrder.date,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"posId\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Punto de Venta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"posId\",\n            name: \"posId\",\n            value: newOrder.posId,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Punto de Venta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), posList.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: pos.id,\n              children: pos.name\n            }, pos.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"operatorId\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Operario que Registra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"operatorId\",\n            name: \"operatorId\",\n            value: newOrder.operatorId,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Operario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), operarioUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.fullName\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"orderStatus\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Estado del Pedido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"orderStatus\",\n            name: \"status\",\n            value: newOrder.status,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pendiente\",\n              children: \"Pendiente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"enviada\",\n              children: \"Enviada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"entregada\",\n              children: \"Entregada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: \"Agregar Items al Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itemMeatType\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Tipo de Carne\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"itemMeatType\",\n              name: \"meatType\",\n              value: newItem.meatType,\n              onChange: handleItemInputChange,\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecciona Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), Object.keys(cutTypes).map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itemCutType\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Corte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"itemCutType\",\n              name: \"cutType\",\n              value: newItem.cutType,\n              onChange: handleItemInputChange,\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n              disabled: !newItem.meatType,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecciona Corte\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 17\n              }, this), (_cutTypes$newItem$mea = cutTypes[newItem.meatType]) === null || _cutTypes$newItem$mea === void 0 ? void 0 : _cutTypes$newItem$mea.map(cut => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cut,\n                children: cut\n              }, cut, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itemQuantity\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Cantidad (opcional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"itemQuantity\",\n              name: \"quantity\",\n              placeholder: \"Ej: 5\",\n              value: newItem.quantity,\n              onChange: handleItemInputChange,\n              className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itemWeight\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Peso (kg) (opcional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"itemWeight\",\n              name: \"weight\",\n              placeholder: \"Ej: 25\",\n              value: newItem.weight,\n              onChange: handleItemInputChange,\n              className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddItem,\n          className: \"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n          children: \"Agregar Item al Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), newOrder.items.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: \"Items del Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-3\",\n          children: newOrder.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-800 font-medium\",\n                children: [\"Tipo de Carne: \", item.meatType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-800 font-medium\",\n                children: [\"Corte: \", item.cutType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 text-sm\",\n                children: [\"Cantidad: \", item.quantity !== null ? `${item.quantity} piezas` : 'N/A', \" | Peso: \", item.weight !== null ? `${item.weight} kg` : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteItem(item.id),\n              className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveOrder,\n        className: \"w-full mt-6 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n        children: \"Guardar Orden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"\\xD3rdenes Registradas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Filtros de \\xD3rdenes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-orders\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Buscar (ID, Punto de Venta, Operario, Estado)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search-orders\",\n              placeholder: \"Ej: PED-2023-001, Centro, Juan, Pendiente\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"start-date-orders\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Inicio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"start-date-orders\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"end-date-orders\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Fin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"end-date-orders\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearFilters,\n          className: \"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",\n          children: \"Limpiar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), paginatedOrders.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: paginatedOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold text-gray-800\",\n                children: order.orderCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 mt-2\",\n                children: [\"Fecha: \", order.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600\",\n                children: [\"Punto de Venta: \", getPosName(order.posId)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600\",\n                children: [\"Operario: \", getOperatorName(order.operatorId)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 21\n              }, this), editingOrderId === order.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `edit-status-${order.id}`,\n                  className: \"block text-sm font-medium text-gray-700\",\n                  children: \"Estado:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: `edit-status-${order.id}`,\n                  value: editedOrderStatus,\n                  onChange: e => setEditedOrderStatus(e.target.value),\n                  className: \"mt-1 px-2 py-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pendiente\",\n                    children: \"Pendiente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"enviada\",\n                    children: \"Enviada\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"entregada\",\n                    children: \"Entregada\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-2 mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleCancelEditStatus,\n                    className: \"px-2 py-1 bg-gray-500 text-white rounded-md hover:bg-gray-600 text-xs\",\n                    children: \"Cancelar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSaveStatus(order.id),\n                    className: \"px-2 py-1 bg-green-600 text-white rounded-md hover:bg-green-700 text-xs\",\n                    children: \"Guardar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600\",\n                children: [\"Estado: \", order.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [editingOrderId !== order.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStartEditStatus(order),\n                className: \"px-3 py-1 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\",\n                children: \"Editar Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteOrder(order.id),\n                className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n                children: \"Eliminar Orden\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-medium text-gray-800 mb-2\",\n              children: \"Items:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 19\n            }, this), order.items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700 text-sm\",\n              children: [\"- Tipo de Carne: \", item.meatType, \" | Corte: \", item.cutType, \" | Cantidad: \", item.quantity !== null ? item.quantity : 'N/A', \" | Peso: \", item.weight !== null ? `${item.weight} kg` : 'N/A']\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 17\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay \\xF3rdenes registradas que coincidan con la b\\xFAsqueda o rango de fechas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6 space-x-2\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: `px-4 py-2 rounded-lg transition-colors ${currentPage === index + 1 ? 'bg-black text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderForm, \"NbpxuEH7nKNNktdWtTCv/BpzYhk=\");\n_c = OrderForm;\nexport default OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","api","filterByDateRange","subtractFromInventory","InventoryContext","jsxDEV","_jsxDEV","OrderForm","_s","_cutTypes$newItem$mea","orders","setOrders","posList","setPosList","cutTypes","setCutTypes","cutNameToIdByMeat","setCutNameToIdByMeat","cutIdToName","setCutIdToName","cutIdToMeatId","setCutIdToMeatId","meatTypeIdToName","setMeatTypeIdToName","productIdMap","setProductIdMap","productInfoById","setProductInfoById","cuts","setCuts","invoices","setInvoices","users","setUsers","meatTypeNameToId","setMeatTypeNameToId","refreshInventory","newOrder","setNewOrder","codigoOrden","date","posId","operatorId","status","items","newItem","setNewItem","meatType","cutType","quantity","weight","availableCutTypes","setAvailableCutTypes","searchTerm","setSearchTerm","startDate","setStartDate","endDate","setEndDate","editingOrderId","setEditingOrderId","editedOrderStatus","setEditedOrderStatus","currentPage","setCurrentPage","itemsPerPage","operarioUsers","filter","user","role","toLowerCase","loadData","data","get","err","console","error","ordRes","carneRes","prodRes","userRes","factRes","detRes","Promise","all","typeNameToId","typeIdToName","forEach","p","nombre","id_tipo_carne","cutTypesMap","nameToIdByMeat","idToName","idToMeat","productMap","productInfo","tipo_carne","includes","tipo_corte","push","id_tipo_corte","id_producto","meat","cut","invoicesList","cutsMap","det","id_detalle","id","invoiceId","id_desposte","carcassCode","String","id_canal","cantidad","parseFloat","peso","ordersData","map","ord","detalles","id_orden","d","info","peso_total","orderCode","codigo_orden","fecha_orden","id_pos","id_usuario","estado","usersMapped","u","fullName","Object","values","loadUsers","mapped","loadLatestCuts","nameToId","idToNameMap","idToMeatMap","infoMap","prev","handleOrderInputChange","e","name","value","target","handleItemInputChange","handleAddItem","alert","itemToAdd","Date","now","parseInt","handleDeleteItem","itemId","item","handleSaveOrder","length","orderPayload","post","newId","_productIdMap$item$me","productId","getPosName","pos","find","getOperatorName","operator","handleDeleteOrder","window","confirm","delete","order","handleStartEditStatus","handleSaveStatus","orderId","orderToUpdate","updatedCuts","updatedOrder","put","handleCancelEditStatus","textFilteredOrders","dateFilteredOrders","sortedOrders","sort","a","b","dateA","dateB","startIndex","endIndex","paginatedOrders","slice","totalPages","Math","ceil","handlePageChange","page","handleClearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","onChange","keys","disabled","onClick","Array","from","_","index","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/OrderForm.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\nimport { filterByDateRange } from '../utils/dateFilters';\nimport { subtractFromInventory } from '../utils/inventoryLogic';\nimport { InventoryContext } from '../contexts/InventoryContext';\n\n\nconst OrderForm = () => {\n  const [orders, setOrders] = useState([]);\n  const [posList, setPosList] = useState([]);\n  const [cutTypes, setCutTypes] = useState({});\n  const [cutNameToIdByMeat, setCutNameToIdByMeat] = useState({});\n  const [cutIdToName, setCutIdToName] = useState({});\n  const [cutIdToMeatId, setCutIdToMeatId] = useState({});\n  const [meatTypeIdToName, setMeatTypeIdToName] = useState({});\n  const [productIdMap, setProductIdMap] = useState({});\n  const [productInfoById, setProductInfoById] = useState({});\n  \n  const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [meatTypeNameToId, setMeatTypeNameToId] = useState({});\n  const { refreshInventory } = useContext(InventoryContext);\n  const [newOrder, setNewOrder] = useState({\n    codigoOrden: '',\n    date: '',\n    posId: '',\n    operatorId: '',\n    status: 'pendiente',\n    items: [],\n  });\n\n  const [newItem, setNewItem] = useState({\n    meatType: '',\n    cutType: '',\n    quantity: '',\n    weight: '',\n  });\n\n  const [availableCutTypes, setAvailableCutTypes] = useState([]);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [editingOrderId, setEditingOrderId] = useState(null);\n  const [editedOrderStatus, setEditedOrderStatus] = useState('');\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n\n  const operarioUsers = users.filter(\n    user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario'\n  );\n\n\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const { data } = await api.get('/puntos_venta');\n        setPosList(data || []);\n      } catch (err) {\n        console.error('Error loading puntos de venta:', err);\n      }\n\n      try {\n       const [ordRes, carneRes, prodRes, userRes, factRes, detRes] = await Promise.all([\n          api.get('/ordenes'),\n          api.get('/tipo_carne'),\n          api.get('/productos'),\n          api.get('/usuarios'),\n          api.get('/facturas'),\n          api.get('/detalles_corte')\n        ]);\n\n        const typeNameToId = {};\n        const typeIdToName = {};\n        (carneRes.data || []).forEach(p => {\n          typeNameToId[p.nombre] = p.id_tipo_carne;\n          typeIdToName[p.id_tipo_carne] = p.nombre;\n        });\n\n        const cutTypesMap = {};\n        const nameToIdByMeat = {};\n        const idToName = {};\n        const idToMeat = {};\n        const productMap = {};\n        const productInfo = {};\n        (prodRes.data || []).forEach(p => {\n          if (!cutTypesMap[p.tipo_carne]) cutTypesMap[p.tipo_carne] = [];\n          if (!cutTypesMap[p.tipo_carne].includes(p.tipo_corte)) {\n            cutTypesMap[p.tipo_carne].push(p.tipo_corte);\n          }\n          if (!nameToIdByMeat[p.tipo_carne]) nameToIdByMeat[p.tipo_carne] = {};\n          nameToIdByMeat[p.tipo_carne][p.tipo_corte] = p.id_tipo_corte;\n          idToName[p.id_tipo_corte] = p.tipo_corte;\n          idToMeat[p.id_tipo_corte] = p.id_tipo_carne;\n          if (!productMap[p.tipo_carne]) productMap[p.tipo_carne] = {};\n          productMap[p.tipo_carne][p.tipo_corte] = p.id_producto;\n          productInfo[p.id_producto] = { meat: p.tipo_carne, cut: p.tipo_corte };\n        });\n\n        const invoicesList = factRes.data || [];\n\n        const cutsMap = {};\n        (detRes.data || []).forEach(det => {\n          cutsMap[det.id_detalle] = {\n            id: det.id_detalle,\n            invoiceId: det.id_desposte || 0,\n            carcassCode: String(det.id_canal),\n            cutType: det.id_tipo_corte,\n            quantity: det.cantidad,\n            weight: parseFloat(det.peso)\n          };\n        });\n\n        const ordersData = await Promise.all(\n          (ordRes.data || []).map(async ord => {\n            const { data: detalles } = await api.get(`/detalle_orden?orden=${ord.id_orden}`);\n            const items = (detalles || []).map(d => {\n              const info = productInfo[d.id_producto] || {};\n              return {\n                id: d.id_detalle,\n                meatType: info.meat || 'Desconocido',\n                cutType: info.cut || 'N/A',\n                quantity: d.cantidad,\n                weight: parseFloat(d.peso_total)\n              };\n            });\n            return {\n              id: ord.id_orden,\n              orderCode: ord.codigo_orden,\n              date: ord.fecha_orden,\n              posId: ord.id_pos,\n              operatorId: ord.id_usuario,\n              status: ord.estado,\n              items\n            };\n          })\n        );\n\n        const usersMapped = (userRes.data || []).map(u => ({\n          id: u.id,\n          fullName: u.nombre,\n          role: u.role\n        }));\n\n        setMeatTypeNameToId(typeNameToId);\n        setMeatTypeIdToName(typeIdToName);\n        setCutNameToIdByMeat(nameToIdByMeat);\n        setCutIdToName(idToName);\n        setCutIdToMeatId(idToMeat);\n        setCutTypes(cutTypesMap);\n        setProductIdMap(productMap);\n        setProductInfoById(productInfo);\n        setInvoices(invoicesList);\n        setCuts(Object.values(cutsMap));\n        setOrders(ordersData);\n        setUsers(usersMapped);\n      } catch (error) {\n        console.error('Error loading initial data for OrderForm:', error);\n      }\n    };\n    loadData();\n  }, []);\n\n useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const { data } = await api.get('/usuarios');\n        const mapped = (data || []).map(u => ({\n          id: u.id,\n          fullName: u.nombre,\n          role: u.role,\n        }));\n        setUsers(mapped);\n      } catch (err) {\n        console.error('Error loading users for operators list:', err);\n      }\n    };\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n   const loadLatestCuts = async () => {\n      try {\n       const { data } = await api.get('/productos');\n        const map = {};\n        const nameToId = {};\n        const idToNameMap = {};\n        const idToMeatMap = {};\n        const productMap = {};\n        const infoMap = {};\n        (data || []).forEach(p => {\n          if (!map[p.tipo_carne]) map[p.tipo_carne] = [];\n          if (!map[p.tipo_carne].includes(p.tipo_corte)) {\n            map[p.tipo_carne].push(p.tipo_corte);\n          }\n          if (!nameToId[p.tipo_carne]) nameToId[p.tipo_carne] = {};\n          nameToId[p.tipo_carne][p.tipo_corte] = p.id_tipo_corte;\n          idToNameMap[p.id_tipo_corte] = p.tipo_corte;\n          idToMeatMap[p.id_tipo_corte] = p.id_tipo_carne;\n           if (!productMap[p.tipo_carne]) productMap[p.tipo_carne] = {};\n          productMap[p.tipo_carne][p.tipo_corte] = p.id_producto;\n          infoMap[p.id_producto] = { meat: p.tipo_carne, cut: p.tipo_corte };\n        });\n        setCutTypes(map);\n        setCutNameToIdByMeat(nameToId);\n        setCutIdToName(idToNameMap);\n        setCutIdToMeatId(idToMeatMap);\n        setProductIdMap(productMap);\n        setProductInfoById(infoMap);\n      } catch (err) {\n        console.error('Error refreshing cut types:', err);\n      }\n    };\n    loadLatestCuts();\n  }, []);\n\n  useEffect(() => {\n    if (newItem.meatType) {\n      setAvailableCutTypes(cutTypes[newItem.meatType] || []);\n    } else {\n      setAvailableCutTypes([]);\n    }\n    setNewItem(prev => ({ ...prev, cutType: '' }));\n  }, [newItem.meatType, cutTypes]);\n\n\n  const handleOrderInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewOrder({ ...newOrder, [name]: value });\n  };\n\n  const handleItemInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewItem({ ...newItem, [name]: value });\n  };\n\n  const handleAddItem = () => {\n    if (!newItem.meatType || !newItem.cutType || (!newItem.quantity && !newItem.weight)) {\n      alert('Por favor, completa al menos el tipo de carne, corte y cantidad o peso del item.');\n      return;\n    }\n\n    const itemToAdd = {\n      id: `item-${Date.now()}`,\n      ...newItem,\n      quantity: newItem.quantity ? parseInt(newItem.quantity, 10) : null,\n      weight: newItem.weight ? parseFloat(newItem.weight) : null,\n    };\n\n    setNewOrder({\n      ...newOrder,\n      items: [...newOrder.items, itemToAdd],\n    });\n\n    setNewItem({ meatType: '', cutType: '', quantity: '', weight: '' });\n  };\n\n  const handleDeleteItem = (itemId) => {\n    setNewOrder({\n      ...newOrder,\n      items: newOrder.items.filter(item => item.id !== itemId),\n    });\n  };\n\n  const handleSaveOrder = async () => {\n    if (!newOrder.date || !newOrder.posId || !newOrder.operatorId || newOrder.items.length === 0) {\n      alert('Por favor, completa los datos de la orden y agrega al menos un item.');\n      return;\n    }\n\n    try {\n          const orderPayload = {\n        codigo_orden: newOrder.codigoOrden,\n        fecha_orden: newOrder.date,\n        id_usuario: newOrder.operatorId,\n        id_pos: newOrder.posId,\n        estado: newOrder.status\n      };\n      const { data } = await api.post('/ordenes', orderPayload);\n      const newId = data?.id;\n\n      await Promise.all(newOrder.items.map(item => {\n         const productId = productIdMap[item.meatType]?.[item.cutType];\n        return api.post('/detalle_orden', {\n          id_orden: newId,\n          id_producto: productId,\n          cantidad: item.quantity || 0,\n          peso_total: item.weight || 0\n        });\n      }));\n\n      setOrders(prev => [...prev, { id: newId, orderCode: newOrder.codigoOrden, date: newOrder.date, posId: newOrder.posId, operatorId: newOrder.operatorId, status: newOrder.status, items: newOrder.items }]);\n      setNewOrder({\n        codigoOrden: '',\n        date: '',\n        posId: '',\n        operatorId: '',\n        status: 'pendiente',\n        items: [],\n      });\n      setNewItem({ meatType: '', cutType: '', quantity: '', weight: '' });\n      alert('Orden guardada con éxito!');\n    } catch (error) {\n      console.error(\"Error saving order:\", error);\n      alert('Error al guardar la orden. Intenta de nuevo.');\n    }\n  };\n\n  const getPosName = (posId) => {\n    const pos = posList.find(p => p.id === posId);\n    return pos ? pos.name : 'Desconocido';\n  };\n\n  const getOperatorName = (operatorId) => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n\n\n  const handleDeleteOrder = async (id) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar esta orden?')) {\n      try {\n         await api.delete(`/ordenes/${id}`);\n        setOrders(prev => prev.filter(order => order.id !== id));\n        alert('Orden eliminada con éxito!');\n      } catch (error) {\n        console.error('Error deleting order:', error);\n        alert('Error al eliminar la orden. Intenta de nuevo.');\n      }\n    }\n  };\n\n  const handleStartEditStatus = (order) => {\n    setEditingOrderId(order.id);\n    setEditedOrderStatus(order.status);\n  };\n\n  const handleSaveStatus = async (orderId) => {\n    try {\n      const orderToUpdate = orders.find(order => order.id === orderId);\n      if (!orderToUpdate) return;\n\n      if (editedOrderStatus === 'entregada' && orderToUpdate.status !== 'entregada') {\n         const updatedCuts = subtractFromInventory(cuts, invoices, orderToUpdate.items);\n         setCuts(updatedCuts);\n      }\n\n      const updatedOrder = { ...orderToUpdate, status: editedOrderStatus };\n      await api.put(`/ordenes/${orderId}`, {\n        codigo_orden: updatedOrder.orderCode,\n        fecha_orden: updatedOrder.date,\n        id_usuario: updatedOrder.operatorId,\n        id_pos: updatedOrder.posId,\n        estado: editedOrderStatus\n      });\n      await refreshInventory();\n      setOrders(prev => prev.map(order => order.id === orderId ? updatedOrder : order));\n      setEditingOrderId(null);\n      setEditedOrderStatus('');\n      alert('Estado de la orden actualizado con éxito!');\n    } catch (error) {\n      console.error(\"Error updating order status:\", error);\n      alert('Error al actualizar el estado de la orden. Intenta de nuevo.');\n    }\n  };\n\n  const handleCancelEditStatus = () => {\n    setEditingOrderId(null);\n    setEditedOrderStatus('');\n  };\n\n  const textFilteredOrders = orders.filter(order =>\n    (order.orderCode || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\n    getPosName(order.posId).toLowerCase().includes(searchTerm.toLowerCase()) ||\n    getOperatorName(order.operatorId).toLowerCase().includes(searchTerm.toLowerCase()) ||\n    order.status.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const dateFilteredOrders = filterByDateRange(textFilteredOrders, startDate, endDate, 'date');\n\n  const sortedOrders = [...dateFilteredOrders].sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n    return dateB - dateA;\n  });\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const paginatedOrders = sortedOrders.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(sortedOrders.length / itemsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Registro de Órdenes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Nueva Orden</h3>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"orderCode\" className=\"block text-sm font-medium text-gray-700\">ID de Orden</label>\n            <input\n              type=\"text\"\n              id=\"orderCode\"\n              name=\"codigoOrden\"\n              placeholder=\"Ej: PED-2023-001\"\n              value={newOrder.codigoOrden}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"orderDate\" className=\"block text-sm font-medium text-gray-700\">Fecha</label>\n            <input\n              type=\"date\"\n              id=\"orderDate\"\n              name=\"date\"\n              value={newOrder.date}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"posId\" className=\"block text-sm font-medium text-gray-700\">Punto de Venta</label>\n            <select\n              id=\"posId\"\n              name=\"posId\"\n              value={newOrder.posId}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            >\n              <option value=\"\">Selecciona un Punto de Venta</option>\n              {posList.map(pos => (\n                <option key={pos.id} value={pos.id}>\n                  {pos.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"operatorId\" className=\"block text-sm font-medium text-gray-700\">Operario que Registra</label>\n            <select\n              id=\"operatorId\"\n              name=\"operatorId\"\n              value={newOrder.operatorId}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            >\n              <option value=\"\">Selecciona un Operario</option>\n              {operarioUsers.map(user => (\n                <option key={user.id} value={user.id}>\n                  {user.fullName}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"orderStatus\" className=\"block text-sm font-medium text-gray-700\">Estado del Pedido</label>\n            <select\n              id=\"orderStatus\"\n              name=\"status\"\n              value={newOrder.status}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            >\n             <option value=\"pendiente\">Pendiente</option>\n            <option value=\"enviada\">Enviada</option>\n            <option value=\"entregada\">Entregada</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n          <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Agregar Items al Pedido</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"itemMeatType\" className=\"block text-sm font-medium text-gray-700\">Tipo de Carne</label>\n              <select\n                id=\"itemMeatType\"\n                name=\"meatType\"\n                value={newItem.meatType}\n                onChange={handleItemInputChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              >\n                <option value=\"\">Selecciona Tipo</option>\n                {Object.keys(cutTypes).map(type => (\n                  <option key={type} value={type}>{type}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"itemCutType\" className=\"block text-sm font-medium text-gray-700\">Corte</label>\n              <select\n                id=\"itemCutType\"\n                name=\"cutType\"\n                value={newItem.cutType}\n                onChange={handleItemInputChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n                disabled={!newItem.meatType}\n              >\n                <option value=\"\">Selecciona Corte</option>\n                {cutTypes[newItem.meatType]?.map(cut => (\n                  <option key={cut} value={cut}>{cut}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"itemQuantity\" className=\"block text-sm font-medium text-gray-700\">Cantidad (opcional)</label>\n              <input\n                type=\"number\"\n                id=\"itemQuantity\"\n                name=\"quantity\"\n                placeholder=\"Ej: 5\"\n                value={newItem.quantity}\n                onChange={handleItemInputChange}\n                className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"itemWeight\" className=\"block text-sm font-medium text-gray-700\">Peso (kg) (opcional)</label>\n              <input\n                type=\"number\"\n                id=\"itemWeight\"\n                name=\"weight\"\n                placeholder=\"Ej: 25\"\n                value={newItem.weight}\n                onChange={handleItemInputChange}\n                className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n          <button\n            onClick={handleAddItem}\n            className=\"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            Agregar Item al Pedido\n          </button>\n        </div>\n\n        {newOrder.items.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-white\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Items del Pedido</h4>\n            <div className=\"grid grid-cols-1 gap-3\">\n              {newOrder.items.map(item => (\n                <div key={item.id} className=\"border border-gray-200 rounded-lg p-3 flex justify-between items-center\">\n                  <div>\n                    <p className=\"text-gray-800 font-medium\">Tipo de Carne: {item.meatType}</p>\n                    <p className=\"text-gray-800 font-medium\">Corte: {item.cutType}</p>\n                    <p className=\"text-gray-700 text-sm\">\n                      Cantidad: {item.quantity !== null ? `${item.quantity} piezas` : 'N/A'} |\n                      Peso: {item.weight !== null ? `${item.weight} kg` : 'N/A'}\n                    </p>\n                  </div>\n                  <button\n                    onClick={() => handleDeleteItem(item.id)}\n                    className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                  >\n                    Eliminar\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <button\n          onClick={handleSaveOrder}\n          className=\"w-full mt-6 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n        >\n          Guardar Orden\n        </button>\n      </div>\n\n      {/* Sección de Visualización de Órdenes Integrada */}\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Órdenes Registradas</h2>\n\n        <div className=\"mb-6 bg-white p-4 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Filtros de Órdenes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"search-orders\" className=\"block text-sm font-medium text-gray-700\">Buscar (ID, Punto de Venta, Operario, Estado)</label>\n              <input\n                type=\"text\"\n                id=\"search-orders\"\n                placeholder=\"Ej: PED-2023-001, Centro, Juan, Pendiente\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n             <div>\n              <label htmlFor=\"start-date-orders\" className=\"block text-sm font-medium text-gray-700\">Fecha Inicio</label>\n              <input\n                type=\"date\"\n                id=\"start-date-orders\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"end-date-orders\" className=\"block text-sm font-medium text-gray-700\">Fecha Fin</label>\n              <input\n                type=\"date\"\n                id=\"end-date-orders\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n           <button\n            onClick={handleClearFilters}\n            className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Limpiar Filtros\n          </button>\n        </div>\n\n        {paginatedOrders.length > 0 ? (\n          <div className=\"space-y-6\">\n            {paginatedOrders.map(order => (\n              <div key={order.id} className=\"bg-white p-6 rounded-lg shadow-md\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"text-xl font-semibold text-gray-800\">{order.orderCode}</h3>\n                    <p className=\"text-gray-600 mt-2\">Fecha: {order.date}</p>\n                    <p className=\"text-gray-600\">Punto de Venta: {getPosName(order.posId)}</p>\n                    <p className=\"text-gray-600\">Operario: {getOperatorName(order.operatorId)}</p>\n                    {editingOrderId === order.id ? (\n                      <div className=\"mt-2\">\n                        <label htmlFor={`edit-status-${order.id}`} className=\"block text-sm font-medium text-gray-700\">Estado:</label>\n                        <select\n                          id={`edit-status-${order.id}`}\n                          value={editedOrderStatus}\n                          onChange={(e) => setEditedOrderStatus(e.target.value)}\n                          className=\"mt-1 px-2 py-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        >\n                          <option value=\"pendiente\">Pendiente</option>\n                          <option value=\"enviada\">Enviada</option>\n                          <option value=\"entregada\">Entregada</option>\n                        </select>\n                        <div className=\"flex space-x-2 mt-2\">\n                          <button\n                            onClick={handleCancelEditStatus}\n                            className=\"px-2 py-1 bg-gray-500 text-white rounded-md hover:bg-gray-600 text-xs\"\n                          >\n                            Cancelar\n                          </button>\n                          <button\n                            onClick={() => handleSaveStatus(order.id)}\n                            className=\"px-2 py-1 bg-green-600 text-white rounded-md hover:bg-green-700 text-xs\"\n                          >\n                            Guardar\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <p className=\"text-gray-600\">Estado: {order.status}</p>\n                    )}\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    {editingOrderId !== order.id && (\n                      <button\n                        onClick={() => handleStartEditStatus(order)}\n                        className=\"px-3 py-1 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n                      >\n                        Editar Estado\n                      </button>\n                    )}\n                    <button\n                      onClick={() => handleDeleteOrder(order.id)}\n                      className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                    >\n                      Eliminar Orden\n                    </button>\n                  </div>\n                </div>\n                <div className=\"mt-4\">\n                  <h4 className=\"text-lg font-medium text-gray-800 mb-2\">Items:</h4>\n                  {order.items.map(item => (\n                    <p key={item.id} className=\"text-gray-700 text-sm\">- Tipo de Carne: {item.meatType} | Corte: {item.cutType} | Cantidad: {item.quantity !== null ? item.quantity : 'N/A'} | Peso: {item.weight !== null ? `${item.weight} kg` : 'N/A'}</p>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay órdenes registradas que coincidan con la búsqueda o rango de fechas.</p>\n        )}\n      </div>\n\n       {totalPages > 1 && (\n        <div className=\"flex justify-center mt-6 space-x-2\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index + 1}\n              onClick={() => handlePageChange(index + 1)}\n              className={`px-4 py-2 rounded-lg transition-colors ${\n                currentPage === index + 1\n                  ? 'bg-black text-white'\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n              }`}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OrderForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
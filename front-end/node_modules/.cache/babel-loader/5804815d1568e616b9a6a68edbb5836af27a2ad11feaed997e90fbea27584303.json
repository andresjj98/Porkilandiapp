{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\OrderForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { filterByDateRange } from '../utils/dateFilters';\nimport { subtractFromInventory } from '../utils/inventoryLogic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderForm = () => {\n  _s();\n  var _cutTypes$newItem$mea;\n  const [orders, setOrders] = useState([]);\n  const [posList, setPosList] = useState([]);\n  const [cutTypes, setCutTypes] = useState({});\n  const [cutNameToIdByMeat, setCutNameToIdByMeat] = useState({});\n  const [cutIdToName, setCutIdToName] = useState({});\n  const [cutIdToMeatId, setCutIdToMeatId] = useState({});\n  const [meatTypeIdToName, setMeatTypeIdToName] = useState({});\n  const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [meatTypeNameToId, setMeatTypeNameToId] = useState({});\n  const [newOrder, setNewOrder] = useState({\n    orderId: '',\n    date: '',\n    posId: '',\n    operatorId: '',\n    status: 'pendiente',\n    items: []\n  });\n  const [newItem, setNewItem] = useState({\n    meatType: '',\n    cutType: '',\n    quantity: '',\n    weight: ''\n  });\n  const [availableCutTypes, setAvailableCutTypes] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [editingOrderId, setEditingOrderId] = useState(null);\n  const [editedOrderStatus, setEditedOrderStatus] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const operarioUsers = users.filter(user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario');\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const {\n          data\n        } = await api.get('/puntos_venta');\n        setPosList(data || []);\n      } catch (err) {\n        console.error('Error loading puntos de venta:', err);\n      }\n      try {\n        const [ordRes, carneRes, prodRes, userRes, factRes, detRes] = await Promise.all([api.get('/ordenes'), api.get('/tipo_carne'), api.get('/productos'), api.get('/usuarios'), api.get('/facturas'), api.get('/detalles_corte')]);\n        const typeNameToId = {};\n        const typeIdToName = {};\n        (carneRes.data || []).forEach(p => {\n          typeNameToId[p.nombre] = p.id_tipo_carne;\n          typeIdToName[p.id_tipo_carne] = p.nombre;\n        });\n        const cutTypesMap = {};\n        const nameToIdByMeat = {};\n        const idToName = {};\n        const idToMeat = {};\n        (prodRes.data || []).forEach(p => {\n          if (!cutTypesMap[p.tipo_carne]) cutTypesMap[p.tipo_carne] = [];\n          if (!cutTypesMap[p.tipo_carne].includes(p.tipo_corte)) {\n            cutTypesMap[p.tipo_carne].push(p.tipo_corte);\n          }\n          if (!nameToIdByMeat[p.tipo_carne]) nameToIdByMeat[p.tipo_carne] = {};\n          nameToIdByMeat[p.tipo_carne][p.tipo_corte] = p.id_tipo_corte;\n          idToName[p.id_tipo_corte] = p.tipo_corte;\n          idToMeat[p.id_tipo_corte] = p.id_tipo_carne;\n        });\n        const invoicesList = factRes.data || [];\n        const cutsMap = {};\n        (detRes.data || []).forEach(det => {\n          cutsMap[det.id_detalle] = {\n            id: det.id_detalle,\n            invoiceId: det.id_desposte || 0,\n            carcassCode: String(det.id_canal),\n            cutType: det.id_tipo_corte,\n            quantity: det.cantidad,\n            weight: parseFloat(det.peso)\n          };\n        });\n        const ordersData = await Promise.all((ordRes.data || []).map(async ord => {\n          const {\n            data: detalles\n          } = await api.get(`/detalle_orden?orden=${ord.id_orden}`);\n          const items = (detalles || []).map(d => {\n            const meatId = idToMeat[d.id_tipo_corte];\n            return {\n              id: d.id_detalle,\n              meatType: typeIdToName[meatId] || 'Desconocido',\n              cutType: idToName[d.id_tipo_corte] || 'N/A',\n              quantity: d.cantidad,\n              weight: parseFloat(d.peso_total)\n            };\n          });\n          return {\n            id: ord.id_orden,\n            orderId: String(ord.id_orden),\n            date: ord.fecha_orden,\n            posId: ord.id_pos,\n            operatorId: ord.id_usuario,\n            status: ord.estado,\n            items\n          };\n        }));\n        const usersMapped = (userRes.data || []).map(u => ({\n          id: u.id,\n          fullName: u.nombre,\n          role: u.role\n        }));\n        setMeatTypeNameToId(typeNameToId);\n        setMeatTypeIdToName(typeIdToName);\n        setCutNameToIdByMeat(nameToIdByMeat);\n        setCutIdToName(idToName);\n        setCutIdToMeatId(idToMeat);\n        setCutTypes(cutTypesMap);\n        setInvoices(invoicesList);\n        setCuts(Object.values(cutsMap));\n        setOrders(ordersData);\n        setUsers(usersMapped);\n      } catch (error) {\n        console.error('Error loading initial data for OrderForm:', error);\n      }\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const {\n          data\n        } = await api.get('/usuarios');\n        const mapped = (data || []).map(u => ({\n          id: u.id,\n          fullName: u.nombre,\n          role: u.role\n        }));\n        setUsers(mapped);\n      } catch (err) {\n        console.error('Error loading users for operators list:', err);\n      }\n    };\n    loadUsers();\n  }, []);\n  useEffect(() => {\n    const loadLatestCuts = async () => {\n      try {\n        const {\n          data\n        } = await api.get('/productos');\n        const map = {};\n        const nameToId = {};\n        const idToNameMap = {};\n        const idToMeatMap = {};\n        (data || []).forEach(p => {\n          if (!map[p.tipo_carne]) map[p.tipo_carne] = [];\n          if (!map[p.tipo_carne].includes(p.tipo_corte)) {\n            map[p.tipo_carne].push(p.tipo_corte);\n          }\n          if (!nameToId[p.tipo_carne]) nameToId[p.tipo_carne] = {};\n          nameToId[p.tipo_carne][p.tipo_corte] = p.id_tipo_corte;\n          idToNameMap[p.id_tipo_corte] = p.tipo_corte;\n          idToMeatMap[p.id_tipo_corte] = p.id_tipo_carne;\n        });\n        setCutTypes(map);\n        setCutNameToIdByMeat(nameToId);\n        setCutIdToName(idToNameMap);\n        setCutIdToMeatId(idToMeatMap);\n      } catch (err) {\n        console.error('Error refreshing cut types:', err);\n      }\n    };\n    loadLatestCuts();\n  }, []);\n  useEffect(() => {\n    if (newItem.meatType) {\n      setAvailableCutTypes(cutTypes[newItem.meatType] || []);\n    } else {\n      setAvailableCutTypes([]);\n    }\n    setNewItem(prev => ({\n      ...prev,\n      cutType: ''\n    }));\n  }, [newItem.meatType, cutTypes]);\n  const handleOrderInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewOrder({\n      ...newOrder,\n      [name]: value\n    });\n  };\n  const handleItemInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewItem({\n      ...newItem,\n      [name]: value\n    });\n  };\n  const handleAddItem = () => {\n    if (!newItem.meatType || !newItem.cutType || !newItem.quantity && !newItem.weight) {\n      alert('Por favor, completa al menos el tipo de carne, corte y cantidad o peso del item.');\n      return;\n    }\n    const itemToAdd = {\n      id: `item-${Date.now()}`,\n      ...newItem,\n      quantity: newItem.quantity ? parseInt(newItem.quantity, 10) : null,\n      weight: newItem.weight ? parseFloat(newItem.weight) : null\n    };\n    setNewOrder({\n      ...newOrder,\n      items: [...newOrder.items, itemToAdd]\n    });\n    setNewItem({\n      meatType: '',\n      cutType: '',\n      quantity: '',\n      weight: ''\n    });\n  };\n  const handleDeleteItem = itemId => {\n    setNewOrder({\n      ...newOrder,\n      items: newOrder.items.filter(item => item.id !== itemId)\n    });\n  };\n  const handleSaveOrder = async () => {\n    if (!newOrder.date || !newOrder.posId || !newOrder.operatorId || newOrder.items.length === 0) {\n      alert('Por favor, completa los datos de la orden y agrega al menos un item.');\n      return;\n    }\n    try {\n      const orderPayload = {\n        fecha_orden: newOrder.date,\n        id_usuario: newOrder.operatorId,\n        id_pos: newOrder.posId,\n        estado: newOrder.status\n      };\n      const {\n        data\n      } = await api.post('/ordenes', orderPayload);\n      const newId = data === null || data === void 0 ? void 0 : data.id;\n      await Promise.all(newOrder.items.map(item => {\n        var _cutNameToIdByMeat$it;\n        const cutId = (_cutNameToIdByMeat$it = cutNameToIdByMeat[item.meatType]) === null || _cutNameToIdByMeat$it === void 0 ? void 0 : _cutNameToIdByMeat$it[item.cutType];\n        return api.post('/detalle_orden', {\n          id_orden: newId,\n          id_tipo_corte: cutId,\n          cantidad: item.quantity || 0,\n          peso_total: item.weight || 0\n        });\n      }));\n      setOrders(prev => [...prev, {\n        id: newId,\n        orderId: String(newId),\n        date: newOrder.date,\n        posId: newOrder.posId,\n        operatorId: newOrder.operatorId,\n        status: newOrder.status,\n        items: newOrder.items\n      }]);\n      setNewOrder({\n        orderId: '',\n        date: '',\n        posId: '',\n        operatorId: '',\n        status: 'pendiente',\n        items: []\n      });\n      setNewItem({\n        meatType: '',\n        cutType: '',\n        quantity: '',\n        weight: ''\n      });\n      alert('Orden guardada con Ã©xito!');\n    } catch (error) {\n      console.error(\"Error saving order:\", error);\n      alert('Error al guardar la orden. Intenta de nuevo.');\n    }\n  };\n  const getPosName = posId => {\n    const pos = posList.find(p => p.id === posId);\n    return pos ? pos.name : 'Desconocido';\n  };\n  const getOperatorName = operatorId => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n  const handleDeleteOrder = async id => {\n    if (window.confirm('Â¿EstÃ¡s seguro de que quieres eliminar esta orden?')) {\n      try {\n        await api.delete(`/ordenes/${id}`);\n        setOrders(prev => prev.filter(order => order.id !== id));\n        alert('Orden eliminada con Ã©xito!');\n      } catch (error) {\n        console.error('Error deleting order:', error);\n        alert('Error al eliminar la orden. Intenta de nuevo.');\n      }\n    }\n  };\n  const handleStartEditStatus = order => {\n    setEditingOrderId(order.id);\n    setEditedOrderStatus(order.status);\n  };\n  const handleSaveStatus = async orderId => {\n    try {\n      const orderToUpdate = orders.find(order => order.id === orderId);\n      if (!orderToUpdate) return;\n      if (editedOrderStatus === 'entregada' && orderToUpdate.status !== 'entregada') {\n        const updatedCuts = subtractFromInventory(cuts, invoices, orderToUpdate.items);\n        setCuts(updatedCuts);\n      }\n      const updatedOrder = {\n        ...orderToUpdate,\n        status: editedOrderStatus\n      };\n      await api.put(`/ordenes/${orderId}`, {\n        fecha_orden: updatedOrder.date,\n        id_usuario: updatedOrder.operatorId,\n        id_pos: updatedOrder.posId,\n        estado: editedOrderStatus\n      });\n      setOrders(prev => prev.map(order => order.id === orderId ? updatedOrder : order));\n      setEditingOrderId(null);\n      setEditedOrderStatus('');\n      alert('Estado de la orden actualizado con Ã©xito!');\n    } catch (error) {\n      console.error(\"Error updating order status:\", error);\n      alert('Error al actualizar el estado de la orden. Intenta de nuevo.');\n    }\n  };\n  const handleCancelEditStatus = () => {\n    setEditingOrderId(null);\n    setEditedOrderStatus('');\n  };\n  const textFilteredOrders = orders.filter(order => order.orderId.toLowerCase().includes(searchTerm.toLowerCase()) || getPosName(order.posId).toLowerCase().includes(searchTerm.toLowerCase()) || getOperatorName(order.operatorId).toLowerCase().includes(searchTerm.toLowerCase()) || order.status.toLowerCase().includes(searchTerm.toLowerCase()));\n  const dateFilteredOrders = filterByDateRange(textFilteredOrders, startDate, endDate, 'date');\n  const sortedOrders = [...dateFilteredOrders].sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n    return dateB - dateA;\n  });\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const paginatedOrders = sortedOrders.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(sortedOrders.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Registro de \\xD3rdenes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Nueva Orden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"orderId\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"ID de Orden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"orderId\",\n            name: \"orderId\",\n            placeholder: \"Ej: PED-2023-001\",\n            value: newOrder.orderId,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"orderDate\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"orderDate\",\n            name: \"date\",\n            value: newOrder.date,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"posId\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Punto de Venta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"posId\",\n            name: \"posId\",\n            value: newOrder.posId,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Punto de Venta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), posList.map(pos => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: pos.id,\n              children: pos.name\n            }, pos.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"operatorId\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Operario que Registra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"operatorId\",\n            name: \"operatorId\",\n            value: newOrder.operatorId,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Operario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), operarioUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.fullName\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"orderStatus\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Estado del Pedido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"orderStatus\",\n            name: \"status\",\n            value: newOrder.status,\n            onChange: handleOrderInputChange,\n            className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pendiente\",\n              children: \"Pendiente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"enviada\",\n              children: \"Enviada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"entregada\",\n              children: \"Entregada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: \"Agregar Items al Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itemMeatType\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Tipo de Carne\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"itemMeatType\",\n              name: \"meatType\",\n              value: newItem.meatType,\n              onChange: handleItemInputChange,\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecciona Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this), Object.keys(cutTypes).map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itemCutType\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Corte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"itemCutType\",\n              name: \"cutType\",\n              value: newItem.cutType,\n              onChange: handleItemInputChange,\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n              disabled: !newItem.meatType,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecciona Corte\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 17\n              }, this), (_cutTypes$newItem$mea = cutTypes[newItem.meatType]) === null || _cutTypes$newItem$mea === void 0 ? void 0 : _cutTypes$newItem$mea.map(cut => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cut,\n                children: cut\n              }, cut, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itemQuantity\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Cantidad (opcional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"itemQuantity\",\n              name: \"quantity\",\n              placeholder: \"Ej: 5\",\n              value: newItem.quantity,\n              onChange: handleItemInputChange,\n              className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"itemWeight\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Peso (kg) (opcional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"itemWeight\",\n              name: \"weight\",\n              placeholder: \"Ej: 25\",\n              value: newItem.weight,\n              onChange: handleItemInputChange,\n              className: \"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddItem,\n          className: \"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n          children: \"Agregar Item al Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), newOrder.items.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: \"Items del Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-3\",\n          children: newOrder.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-800 font-medium\",\n                children: [\"Tipo de Carne: \", item.meatType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-800 font-medium\",\n                children: [\"Corte: \", item.cutType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 text-sm\",\n                children: [\"Cantidad: \", item.quantity !== null ? `${item.quantity} piezas` : 'N/A', \" | Peso: \", item.weight !== null ? `${item.weight} kg` : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteItem(item.id),\n              className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveOrder,\n        className: \"w-full mt-6 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n        children: \"Guardar Orden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"\\xD3rdenes Registradas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Filtros de \\xD3rdenes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-orders\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Buscar (ID, Punto de Venta, Operario, Estado)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search-orders\",\n              placeholder: \"Ej: PED-2023-001, Centro, Juan, Pendiente\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"start-date-orders\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Inicio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"start-date-orders\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"end-date-orders\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Fin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"end-date-orders\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearFilters,\n          className: \"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",\n          children: \"Limpiar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), paginatedOrders.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: paginatedOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold text-gray-800\",\n                children: order.orderId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600 mt-2\",\n                children: [\"Fecha: \", order.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600\",\n                children: [\"Punto de Venta: \", getPosName(order.posId)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600\",\n                children: [\"Operario: \", getOperatorName(order.operatorId)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 21\n              }, this), editingOrderId === order.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `edit-status-${order.id}`,\n                  className: \"block text-sm font-medium text-gray-700\",\n                  children: \"Estado:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: `edit-status-${order.id}`,\n                  value: editedOrderStatus,\n                  onChange: e => setEditedOrderStatus(e.target.value),\n                  className: \"mt-1 px-2 py-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"pendiente\",\n                    children: \"Pendiente\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"enviada\",\n                    children: \"Enviada\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"entregada\",\n                    children: \"Entregada\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-2 mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleCancelEditStatus,\n                    className: \"px-2 py-1 bg-gray-500 text-white rounded-md hover:bg-gray-600 text-xs\",\n                    children: \"Cancelar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSaveStatus(order.id),\n                    className: \"px-2 py-1 bg-green-600 text-white rounded-md hover:bg-green-700 text-xs\",\n                    children: \"Guardar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600\",\n                children: [\"Estado: \", order.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2\",\n              children: [editingOrderId !== order.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStartEditStatus(order),\n                className: \"px-3 py-1 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\",\n                children: \"Editar Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteOrder(order.id),\n                className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n                children: \"Eliminar Orden\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-medium text-gray-800 mb-2\",\n              children: \"Items:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 19\n            }, this), order.items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700 text-sm\",\n              children: [\"- Tipo de Carne: \", item.meatType, \" | Corte: \", item.cutType, \" | Cantidad: \", item.quantity !== null ? item.quantity : 'N/A', \" | Peso: \", item.weight !== null ? `${item.weight} kg` : 'N/A']\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 17\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay \\xF3rdenes registradas que coincidan con la b\\xFAsqueda o rango de fechas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6 space-x-2\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: `px-4 py-2 rounded-lg transition-colors ${currentPage === index + 1 ? 'bg-black text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderForm, \"pPoPkvXzu9eXA9B7jtNUIcmKZNU=\");\n_c = OrderForm;\nexport default OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["React","useState","useEffect","api","filterByDateRange","subtractFromInventory","jsxDEV","_jsxDEV","OrderForm","_s","_cutTypes$newItem$mea","orders","setOrders","posList","setPosList","cutTypes","setCutTypes","cutNameToIdByMeat","setCutNameToIdByMeat","cutIdToName","setCutIdToName","cutIdToMeatId","setCutIdToMeatId","meatTypeIdToName","setMeatTypeIdToName","cuts","setCuts","invoices","setInvoices","users","setUsers","meatTypeNameToId","setMeatTypeNameToId","newOrder","setNewOrder","orderId","date","posId","operatorId","status","items","newItem","setNewItem","meatType","cutType","quantity","weight","availableCutTypes","setAvailableCutTypes","searchTerm","setSearchTerm","startDate","setStartDate","endDate","setEndDate","editingOrderId","setEditingOrderId","editedOrderStatus","setEditedOrderStatus","currentPage","setCurrentPage","itemsPerPage","operarioUsers","filter","user","role","toLowerCase","loadData","data","get","err","console","error","ordRes","carneRes","prodRes","userRes","factRes","detRes","Promise","all","typeNameToId","typeIdToName","forEach","p","nombre","id_tipo_carne","cutTypesMap","nameToIdByMeat","idToName","idToMeat","tipo_carne","includes","tipo_corte","push","id_tipo_corte","invoicesList","cutsMap","det","id_detalle","id","invoiceId","id_desposte","carcassCode","String","id_canal","cantidad","parseFloat","peso","ordersData","map","ord","detalles","id_orden","d","meatId","peso_total","fecha_orden","id_pos","id_usuario","estado","usersMapped","u","fullName","Object","values","loadUsers","mapped","loadLatestCuts","nameToId","idToNameMap","idToMeatMap","prev","handleOrderInputChange","e","name","value","target","handleItemInputChange","handleAddItem","alert","itemToAdd","Date","now","parseInt","handleDeleteItem","itemId","item","handleSaveOrder","length","orderPayload","post","newId","_cutNameToIdByMeat$it","cutId","getPosName","pos","find","getOperatorName","operator","handleDeleteOrder","window","confirm","delete","order","handleStartEditStatus","handleSaveStatus","orderToUpdate","updatedCuts","updatedOrder","put","handleCancelEditStatus","textFilteredOrders","dateFilteredOrders","sortedOrders","sort","a","b","dateA","dateB","startIndex","endIndex","paginatedOrders","slice","totalPages","Math","ceil","handlePageChange","page","handleClearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","onChange","keys","disabled","cut","onClick","Array","from","_","index","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/OrderForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { filterByDateRange } from '../utils/dateFilters';\nimport { subtractFromInventory } from '../utils/inventoryLogic';\n\n\nconst OrderForm = () => {\n  const [orders, setOrders] = useState([]);\n  const [posList, setPosList] = useState([]);\n  const [cutTypes, setCutTypes] = useState({});\n  const [cutNameToIdByMeat, setCutNameToIdByMeat] = useState({});\n  const [cutIdToName, setCutIdToName] = useState({});\n  const [cutIdToMeatId, setCutIdToMeatId] = useState({});\n  const [meatTypeIdToName, setMeatTypeIdToName] = useState({});\n  \n  const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [meatTypeNameToId, setMeatTypeNameToId] = useState({});\n\n  const [newOrder, setNewOrder] = useState({\n    orderId: '',\n    date: '',\n    posId: '',\n    operatorId: '',\n    status: 'pendiente',\n    items: [],\n  });\n\n  const [newItem, setNewItem] = useState({\n    meatType: '',\n    cutType: '',\n    quantity: '',\n    weight: '',\n  });\n\n  const [availableCutTypes, setAvailableCutTypes] = useState([]);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [editingOrderId, setEditingOrderId] = useState(null);\n  const [editedOrderStatus, setEditedOrderStatus] = useState('');\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n\n  const operarioUsers = users.filter(\n    user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario'\n  );\n\n\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const { data } = await api.get('/puntos_venta');\n        setPosList(data || []);\n      } catch (err) {\n        console.error('Error loading puntos de venta:', err);\n      }\n\n      try {\n       const [ordRes, carneRes, prodRes, userRes, factRes, detRes] = await Promise.all([\n          api.get('/ordenes'),\n          api.get('/tipo_carne'),\n          api.get('/productos'),\n          api.get('/usuarios'),\n          api.get('/facturas'),\n          api.get('/detalles_corte')\n        ]);\n\n        const typeNameToId = {};\n        const typeIdToName = {};\n        (carneRes.data || []).forEach(p => {\n          typeNameToId[p.nombre] = p.id_tipo_carne;\n          typeIdToName[p.id_tipo_carne] = p.nombre;\n        });\n\n        const cutTypesMap = {};\n        const nameToIdByMeat = {};\n        const idToName = {};\n        const idToMeat = {};\n        (prodRes.data || []).forEach(p => {\n          if (!cutTypesMap[p.tipo_carne]) cutTypesMap[p.tipo_carne] = [];\n          if (!cutTypesMap[p.tipo_carne].includes(p.tipo_corte)) {\n            cutTypesMap[p.tipo_carne].push(p.tipo_corte);\n          }\n          if (!nameToIdByMeat[p.tipo_carne]) nameToIdByMeat[p.tipo_carne] = {};\n          nameToIdByMeat[p.tipo_carne][p.tipo_corte] = p.id_tipo_corte;\n          idToName[p.id_tipo_corte] = p.tipo_corte;\n          idToMeat[p.id_tipo_corte] = p.id_tipo_carne;\n        });\n\n        const invoicesList = factRes.data || [];\n\n        const cutsMap = {};\n        (detRes.data || []).forEach(det => {\n          cutsMap[det.id_detalle] = {\n            id: det.id_detalle,\n            invoiceId: det.id_desposte || 0,\n            carcassCode: String(det.id_canal),\n            cutType: det.id_tipo_corte,\n            quantity: det.cantidad,\n            weight: parseFloat(det.peso)\n          };\n        });\n\n        const ordersData = await Promise.all(\n          (ordRes.data || []).map(async ord => {\n            const { data: detalles } = await api.get(`/detalle_orden?orden=${ord.id_orden}`);\n             const items = (detalles || []).map(d => {\n              const meatId = idToMeat[d.id_tipo_corte];\n              return {\n                id: d.id_detalle,\n                meatType: typeIdToName[meatId] || 'Desconocido',\n                cutType: idToName[d.id_tipo_corte] || 'N/A',\n                quantity: d.cantidad,\n                weight: parseFloat(d.peso_total)\n              };\n            });\n            return {\n              id: ord.id_orden,\n              orderId: String(ord.id_orden),\n              date: ord.fecha_orden,\n              posId: ord.id_pos,\n              operatorId: ord.id_usuario,\n              status: ord.estado,\n              items\n            };\n          })\n        );\n\n        const usersMapped = (userRes.data || []).map(u => ({\n          id: u.id,\n          fullName: u.nombre,\n          role: u.role\n        }));\n\n        setMeatTypeNameToId(typeNameToId);\n        setMeatTypeIdToName(typeIdToName);\n        setCutNameToIdByMeat(nameToIdByMeat);\n        setCutIdToName(idToName);\n        setCutIdToMeatId(idToMeat);\n        setCutTypes(cutTypesMap);\n        setInvoices(invoicesList);\n        setCuts(Object.values(cutsMap));\n        setOrders(ordersData);\n        setUsers(usersMapped);\n      } catch (error) {\n        console.error('Error loading initial data for OrderForm:', error);\n      }\n    };\n    loadData();\n  }, []);\n\n useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const { data } = await api.get('/usuarios');\n        const mapped = (data || []).map(u => ({\n          id: u.id,\n          fullName: u.nombre,\n          role: u.role,\n        }));\n        setUsers(mapped);\n      } catch (err) {\n        console.error('Error loading users for operators list:', err);\n      }\n    };\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n   const loadLatestCuts = async () => {\n      try {\n       const { data } = await api.get('/productos');\n        const map = {};\n        const nameToId = {};\n        const idToNameMap = {};\n        const idToMeatMap = {};\n        (data || []).forEach(p => {\n          if (!map[p.tipo_carne]) map[p.tipo_carne] = [];\n          if (!map[p.tipo_carne].includes(p.tipo_corte)) {\n            map[p.tipo_carne].push(p.tipo_corte);\n          }\n          if (!nameToId[p.tipo_carne]) nameToId[p.tipo_carne] = {};\n          nameToId[p.tipo_carne][p.tipo_corte] = p.id_tipo_corte;\n          idToNameMap[p.id_tipo_corte] = p.tipo_corte;\n          idToMeatMap[p.id_tipo_corte] = p.id_tipo_carne;\n        });\n        setCutTypes(map);\n        setCutNameToIdByMeat(nameToId);\n        setCutIdToName(idToNameMap);\n        setCutIdToMeatId(idToMeatMap);\n      } catch (err) {\n        console.error('Error refreshing cut types:', err);\n      }\n    };\n    loadLatestCuts();\n  }, []);\n\n  useEffect(() => {\n    if (newItem.meatType) {\n      setAvailableCutTypes(cutTypes[newItem.meatType] || []);\n    } else {\n      setAvailableCutTypes([]);\n    }\n    setNewItem(prev => ({ ...prev, cutType: '' }));\n  }, [newItem.meatType, cutTypes]);\n\n\n  const handleOrderInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewOrder({ ...newOrder, [name]: value });\n  };\n\n  const handleItemInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewItem({ ...newItem, [name]: value });\n  };\n\n  const handleAddItem = () => {\n    if (!newItem.meatType || !newItem.cutType || (!newItem.quantity && !newItem.weight)) {\n      alert('Por favor, completa al menos el tipo de carne, corte y cantidad o peso del item.');\n      return;\n    }\n\n    const itemToAdd = {\n      id: `item-${Date.now()}`,\n      ...newItem,\n      quantity: newItem.quantity ? parseInt(newItem.quantity, 10) : null,\n      weight: newItem.weight ? parseFloat(newItem.weight) : null,\n    };\n\n    setNewOrder({\n      ...newOrder,\n      items: [...newOrder.items, itemToAdd],\n    });\n\n    setNewItem({ meatType: '', cutType: '', quantity: '', weight: '' });\n  };\n\n  const handleDeleteItem = (itemId) => {\n    setNewOrder({\n      ...newOrder,\n      items: newOrder.items.filter(item => item.id !== itemId),\n    });\n  };\n\n  const handleSaveOrder = async () => {\n    if (!newOrder.date || !newOrder.posId || !newOrder.operatorId || newOrder.items.length === 0) {\n      alert('Por favor, completa los datos de la orden y agrega al menos un item.');\n      return;\n    }\n\n    try {\n          const orderPayload = {\n        fecha_orden: newOrder.date,\n        id_usuario: newOrder.operatorId,\n        id_pos: newOrder.posId,\n        estado: newOrder.status\n      };\n      const { data } = await api.post('/ordenes', orderPayload);\n      const newId = data?.id;\n\n      await Promise.all(newOrder.items.map(item => {\n        const cutId = cutNameToIdByMeat[item.meatType]?.[item.cutType];\n        return api.post('/detalle_orden', {\n          id_orden: newId,\n           id_tipo_corte: cutId,\n          cantidad: item.quantity || 0,\n          peso_total: item.weight || 0\n        });\n      }));\n\n      setOrders(prev => [...prev, { id: newId, orderId: String(newId), date: newOrder.date, posId: newOrder.posId, operatorId: newOrder.operatorId, status: newOrder.status, items: newOrder.items }]);\n      setNewOrder({\n        orderId: '',\n        date: '',\n        posId: '',\n        operatorId: '',\n        status: 'pendiente',\n        items: [],\n      });\n      setNewItem({ meatType: '', cutType: '', quantity: '', weight: '' });\n      alert('Orden guardada con Ã©xito!');\n    } catch (error) {\n      console.error(\"Error saving order:\", error);\n      alert('Error al guardar la orden. Intenta de nuevo.');\n    }\n  };\n\n  const getPosName = (posId) => {\n    const pos = posList.find(p => p.id === posId);\n    return pos ? pos.name : 'Desconocido';\n  };\n\n  const getOperatorName = (operatorId) => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n\n\n  const handleDeleteOrder = async (id) => {\n    if (window.confirm('Â¿EstÃ¡s seguro de que quieres eliminar esta orden?')) {\n      try {\n         await api.delete(`/ordenes/${id}`);\n        setOrders(prev => prev.filter(order => order.id !== id));\n        alert('Orden eliminada con Ã©xito!');\n      } catch (error) {\n        console.error('Error deleting order:', error);\n        alert('Error al eliminar la orden. Intenta de nuevo.');\n      }\n    }\n  };\n\n  const handleStartEditStatus = (order) => {\n    setEditingOrderId(order.id);\n    setEditedOrderStatus(order.status);\n  };\n\n  const handleSaveStatus = async (orderId) => {\n    try {\n      const orderToUpdate = orders.find(order => order.id === orderId);\n      if (!orderToUpdate) return;\n\n      if (editedOrderStatus === 'entregada' && orderToUpdate.status !== 'entregada') {\n         const updatedCuts = subtractFromInventory(cuts, invoices, orderToUpdate.items);\n         setCuts(updatedCuts);\n      }\n\n      const updatedOrder = { ...orderToUpdate, status: editedOrderStatus };\n      await api.put(`/ordenes/${orderId}`, {\n        fecha_orden: updatedOrder.date,\n        id_usuario: updatedOrder.operatorId,\n        id_pos: updatedOrder.posId,\n        estado: editedOrderStatus\n      });\n      setOrders(prev => prev.map(order => order.id === orderId ? updatedOrder : order));\n      setEditingOrderId(null);\n      setEditedOrderStatus('');\n      alert('Estado de la orden actualizado con Ã©xito!');\n    } catch (error) {\n      console.error(\"Error updating order status:\", error);\n      alert('Error al actualizar el estado de la orden. Intenta de nuevo.');\n    }\n  };\n\n  const handleCancelEditStatus = () => {\n    setEditingOrderId(null);\n    setEditedOrderStatus('');\n  };\n\n  const textFilteredOrders = orders.filter(order =>\n    order.orderId.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    getPosName(order.posId).toLowerCase().includes(searchTerm.toLowerCase()) ||\n    getOperatorName(order.operatorId).toLowerCase().includes(searchTerm.toLowerCase()) ||\n    order.status.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const dateFilteredOrders = filterByDateRange(textFilteredOrders, startDate, endDate, 'date');\n\n  const sortedOrders = [...dateFilteredOrders].sort((a, b) => {\n    const dateA = new Date(a.date);\n    const dateB = new Date(b.date);\n    return dateB - dateA;\n  });\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const paginatedOrders = sortedOrders.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(sortedOrders.length / itemsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Registro de Ãrdenes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Nueva Orden</h3>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"orderId\" className=\"block text-sm font-medium text-gray-700\">ID de Orden</label>\n            <input\n              type=\"text\"\n              id=\"orderId\"\n              name=\"orderId\"\n              placeholder=\"Ej: PED-2023-001\"\n              value={newOrder.orderId}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"orderDate\" className=\"block text-sm font-medium text-gray-700\">Fecha</label>\n            <input\n              type=\"date\"\n              id=\"orderDate\"\n              name=\"date\"\n              value={newOrder.date}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"posId\" className=\"block text-sm font-medium text-gray-700\">Punto de Venta</label>\n            <select\n              id=\"posId\"\n              name=\"posId\"\n              value={newOrder.posId}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            >\n              <option value=\"\">Selecciona un Punto de Venta</option>\n              {posList.map(pos => (\n                <option key={pos.id} value={pos.id}>\n                  {pos.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"operatorId\" className=\"block text-sm font-medium text-gray-700\">Operario que Registra</label>\n            <select\n              id=\"operatorId\"\n              name=\"operatorId\"\n              value={newOrder.operatorId}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            >\n              <option value=\"\">Selecciona un Operario</option>\n              {operarioUsers.map(user => (\n                <option key={user.id} value={user.id}>\n                  {user.fullName}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"orderStatus\" className=\"block text-sm font-medium text-gray-700\">Estado del Pedido</label>\n            <select\n              id=\"orderStatus\"\n              name=\"status\"\n              value={newOrder.status}\n              onChange={handleOrderInputChange}\n              className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            >\n             <option value=\"pendiente\">Pendiente</option>\n            <option value=\"enviada\">Enviada</option>\n            <option value=\"entregada\">Entregada</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n          <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Agregar Items al Pedido</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"itemMeatType\" className=\"block text-sm font-medium text-gray-700\">Tipo de Carne</label>\n              <select\n                id=\"itemMeatType\"\n                name=\"meatType\"\n                value={newItem.meatType}\n                onChange={handleItemInputChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              >\n                <option value=\"\">Selecciona Tipo</option>\n                {Object.keys(cutTypes).map(type => (\n                  <option key={type} value={type}>{type}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"itemCutType\" className=\"block text-sm font-medium text-gray-700\">Corte</label>\n              <select\n                id=\"itemCutType\"\n                name=\"cutType\"\n                value={newItem.cutType}\n                onChange={handleItemInputChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n                disabled={!newItem.meatType}\n              >\n                <option value=\"\">Selecciona Corte</option>\n                {cutTypes[newItem.meatType]?.map(cut => (\n                  <option key={cut} value={cut}>{cut}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"itemQuantity\" className=\"block text-sm font-medium text-gray-700\">Cantidad (opcional)</label>\n              <input\n                type=\"number\"\n                id=\"itemQuantity\"\n                name=\"quantity\"\n                placeholder=\"Ej: 5\"\n                value={newItem.quantity}\n                onChange={handleItemInputChange}\n                className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"itemWeight\" className=\"block text-sm font-medium text-gray-700\">Peso (kg) (opcional)</label>\n              <input\n                type=\"number\"\n                id=\"itemWeight\"\n                name=\"weight\"\n                placeholder=\"Ej: 25\"\n                value={newItem.weight}\n                onChange={handleItemInputChange}\n                className=\"w-full mt-1 px-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n          <button\n            onClick={handleAddItem}\n            className=\"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            Agregar Item al Pedido\n          </button>\n        </div>\n\n        {newOrder.items.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-white\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Items del Pedido</h4>\n            <div className=\"grid grid-cols-1 gap-3\">\n              {newOrder.items.map(item => (\n                <div key={item.id} className=\"border border-gray-200 rounded-lg p-3 flex justify-between items-center\">\n                  <div>\n                    <p className=\"text-gray-800 font-medium\">Tipo de Carne: {item.meatType}</p>\n                    <p className=\"text-gray-800 font-medium\">Corte: {item.cutType}</p>\n                    <p className=\"text-gray-700 text-sm\">\n                      Cantidad: {item.quantity !== null ? `${item.quantity} piezas` : 'N/A'} |\n                      Peso: {item.weight !== null ? `${item.weight} kg` : 'N/A'}\n                    </p>\n                  </div>\n                  <button\n                    onClick={() => handleDeleteItem(item.id)}\n                    className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                  >\n                    Eliminar\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <button\n          onClick={handleSaveOrder}\n          className=\"w-full mt-6 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n        >\n          Guardar Orden\n        </button>\n      </div>\n\n      {/* SecciÃ³n de VisualizaciÃ³n de Ãrdenes Integrada */}\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Ãrdenes Registradas</h2>\n\n        <div className=\"mb-6 bg-white p-4 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Filtros de Ãrdenes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"search-orders\" className=\"block text-sm font-medium text-gray-700\">Buscar (ID, Punto de Venta, Operario, Estado)</label>\n              <input\n                type=\"text\"\n                id=\"search-orders\"\n                placeholder=\"Ej: PED-2023-001, Centro, Juan, Pendiente\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n             <div>\n              <label htmlFor=\"start-date-orders\" className=\"block text-sm font-medium text-gray-700\">Fecha Inicio</label>\n              <input\n                type=\"date\"\n                id=\"start-date-orders\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"end-date-orders\" className=\"block text-sm font-medium text-gray-700\">Fecha Fin</label>\n              <input\n                type=\"date\"\n                id=\"end-date-orders\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n           <button\n            onClick={handleClearFilters}\n            className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Limpiar Filtros\n          </button>\n        </div>\n\n        {paginatedOrders.length > 0 ? (\n          <div className=\"space-y-6\">\n            {paginatedOrders.map(order => (\n              <div key={order.id} className=\"bg-white p-6 rounded-lg shadow-md\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"text-xl font-semibold text-gray-800\">{order.orderId}</h3>\n                    <p className=\"text-gray-600 mt-2\">Fecha: {order.date}</p>\n                    <p className=\"text-gray-600\">Punto de Venta: {getPosName(order.posId)}</p>\n                    <p className=\"text-gray-600\">Operario: {getOperatorName(order.operatorId)}</p>\n                    {editingOrderId === order.id ? (\n                      <div className=\"mt-2\">\n                        <label htmlFor={`edit-status-${order.id}`} className=\"block text-sm font-medium text-gray-700\">Estado:</label>\n                        <select\n                          id={`edit-status-${order.id}`}\n                          value={editedOrderStatus}\n                          onChange={(e) => setEditedOrderStatus(e.target.value)}\n                          className=\"mt-1 px-2 py-1 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        >\n                          <option value=\"pendiente\">Pendiente</option>\n                          <option value=\"enviada\">Enviada</option>\n                          <option value=\"entregada\">Entregada</option>\n                        </select>\n                        <div className=\"flex space-x-2 mt-2\">\n                          <button\n                            onClick={handleCancelEditStatus}\n                            className=\"px-2 py-1 bg-gray-500 text-white rounded-md hover:bg-gray-600 text-xs\"\n                          >\n                            Cancelar\n                          </button>\n                          <button\n                            onClick={() => handleSaveStatus(order.id)}\n                            className=\"px-2 py-1 bg-green-600 text-white rounded-md hover:bg-green-700 text-xs\"\n                          >\n                            Guardar\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <p className=\"text-gray-600\">Estado: {order.status}</p>\n                    )}\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    {editingOrderId !== order.id && (\n                      <button\n                        onClick={() => handleStartEditStatus(order)}\n                        className=\"px-3 py-1 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n                      >\n                        Editar Estado\n                      </button>\n                    )}\n                    <button\n                      onClick={() => handleDeleteOrder(order.id)}\n                      className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                    >\n                      Eliminar Orden\n                    </button>\n                  </div>\n                </div>\n                <div className=\"mt-4\">\n                  <h4 className=\"text-lg font-medium text-gray-800 mb-2\">Items:</h4>\n                  {order.items.map(item => (\n                    <p key={item.id} className=\"text-gray-700 text-sm\">- Tipo de Carne: {item.meatType} | Corte: {item.cutType} | Cantidad: {item.quantity !== null ? item.quantity : 'N/A'} | Peso: {item.weight !== null ? `${item.weight} kg` : 'N/A'}</p>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay Ã³rdenes registradas que coincidan con la bÃºsqueda o rango de fechas.</p>\n        )}\n      </div>\n\n       {totalPages > 1 && (\n        <div className=\"flex justify-center mt-6 space-x-2\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index + 1}\n              onClick={() => handlePageChange(index + 1)}\n              className={`px-4 py-2 rounded-lg transition-colors ${\n                currentPage === index + 1\n                  ? 'bg-black text-white'\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n              }`}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OrderForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
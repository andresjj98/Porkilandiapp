{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\InventoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { InventoryContext } from '../contexts/InventoryContext';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryList = () => {\n  _s();\n  /*const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);*/\n  const {\n    items\n  } = useContext(InventoryContext);\n  const [inventory, setInventory] = useState({});\n  const [totalWeightByMeatType, setTotalWeightByMeatType] = useState({});\n  const [summary, setSummary] = useState({});\n  useEffect(() => {\n    /*const groupedInventory = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      const originInvoiceNumber = invoice ? invoice.number : 'Desconocida';\n       if (!acc[meatType]) {\n        acc[meatType] = {};\n      }\n       const key = `${cut.cutType}-${originInvoiceNumber}`;\n       if (!acc[meatType][key]) {\n        acc[meatType][key] = {\n          cutType: cut.cutType,\n          totalWeight: 0,\n          totalQuantity: 0,\n          origins: new Set(),\n        };\n      }\n       acc[meatType][key].totalWeight += cut.weight;\n      acc[meatType][key].totalQuantity += cut.quantity;\n      acc[meatType][key].origins.add(originInvoiceNumber);*/\n\n    const grouped = items.reduce((acc, item) => {\n      if (!acc[item.meatType]) acc[item.meatType] = [];\n      acc[item.meatType].push(item);\n      return acc;\n    }, {});\n    setInventory(grouped);\n\n    /*Object.keys(groupedInventory).forEach(meatType => {\n      Object.keys(groupedInventory[meatType]).forEach(key => {\n        groupedInventory[meatType][key].origins = Array.from(groupedInventory[meatType][key].origins);\n      });\n    });\n     setInventory(groupedInventory);\n     const totalByMeatType = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n       acc[meatType] = (acc[meatType] || 0) + cut.weight;*/\n    const totalByMeatType = items.reduce((acc, item) => {\n      acc[item.meatType] = (acc[item.meatType] || 0) + item.weight;\n      return acc;\n    }, {});\n    setTotalWeightByMeatType(totalByMeatType);\n    const fetchSummary = async () => {\n      try {\n        const {\n          data\n        } = await api.get('/inventario/resumen');\n        const groupedRes = data.reduce((acc, row) => {\n          if (!acc[row.tipo_carne]) acc[row.tipo_carne] = [];\n          acc[row.tipo_carne].push({\n            cut: row.tipo_corte,\n            pieces: row.total_piezas,\n            weight: row.total_kg\n          });\n          return acc;\n        }, {});\n        setSummary(groupedRes);\n      } catch (err) {\n        console.error('Error loading summary:', err);\n      }\n    };\n    fetchSummary();\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Inventario de Cortes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Total de Kilos por Tipo de Carne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), Object.keys(totalWeightByMeatType).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: Object.entries(totalWeightByMeatType).map(([meatType, totalWeight]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-gray-200 rounded-lg p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-800 font-medium\",\n            children: [meatType, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-normal\",\n              children: [totalWeight.toFixed(2), \" kg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, meatType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay datos de inventario para mostrar el resumen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Resumen por Corte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), Object.keys(summary).length > 0 ? Object.entries(summary).map(([meat, cuts]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-700\",\n          children: [\"Tipo de Carne: \", meat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ml-4 list-disc\",\n          children: cuts.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"text-gray-800\",\n            children: [c.cut, \" \\u2192 \", c.pieces, \" piezas | \", c.weight.toFixed(2), \" kg\"]\n          }, c.cut, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, meat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay datos de resumen disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Detalle de Inventario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), Object.keys(inventory).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-8\",\n      children: Object.entries(inventory).map(([meatType, itemsList]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: [\"Tipo de Carne: \", meatType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n          children: itemsList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Tipo de Corte: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.cutType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 72\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Peso Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: [item.weight.toFixed(2), \" kg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 74\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Origen: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.origin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800 font-medium\",\n              children: [\"Estado: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-normal\",\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 70\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)]\n      }, meatType, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600\",\n      children: \"No hay cortes en el inventario detallado a\\xFAn.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryList, \"zViHbcJvKIr2yH64qciuNkzW1lg=\");\n_c = InventoryList;\nexport default InventoryList;\nvar _c;\n$RefreshReg$(_c, \"InventoryList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","InventoryContext","api","jsxDEV","_jsxDEV","InventoryList","_s","items","inventory","setInventory","totalWeightByMeatType","setTotalWeightByMeatType","summary","setSummary","grouped","reduce","acc","item","meatType","push","totalByMeatType","weight","fetchSummary","data","get","groupedRes","row","tipo_carne","cut","tipo_corte","pieces","total_piezas","total_kg","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","map","totalWeight","toFixed","meat","cuts","c","itemsList","cutType","quantity","origin","status","id","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/InventoryList.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { InventoryContext } from '../contexts/InventoryContext';\nimport api from '../services/api';\n\nconst InventoryList = () => {\n  /*const [cuts, setCuts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [users, setUsers] = useState([]);*/\n  const { items } = useContext(InventoryContext);\n  const [inventory, setInventory] = useState({});\n  const [totalWeightByMeatType, setTotalWeightByMeatType] = useState({});\n  const [summary, setSummary] = useState({});\n\n\n  useEffect(() => {\n    /*const groupedInventory = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      const originInvoiceNumber = invoice ? invoice.number : 'Desconocida';\n\n      if (!acc[meatType]) {\n        acc[meatType] = {};\n      }\n\n      const key = `${cut.cutType}-${originInvoiceNumber}`;\n\n      if (!acc[meatType][key]) {\n        acc[meatType][key] = {\n          cutType: cut.cutType,\n          totalWeight: 0,\n          totalQuantity: 0,\n          origins: new Set(),\n        };\n      }\n\n      acc[meatType][key].totalWeight += cut.weight;\n      acc[meatType][key].totalQuantity += cut.quantity;\n      acc[meatType][key].origins.add(originInvoiceNumber);*/\n\n     const grouped = items.reduce((acc, item) => {\n       if (!acc[item.meatType]) acc[item.meatType] = [];\n      acc[item.meatType].push(item);\n\n      return acc;\n    }, {});\n    setInventory(grouped);\n\n    /*Object.keys(groupedInventory).forEach(meatType => {\n      Object.keys(groupedInventory[meatType]).forEach(key => {\n        groupedInventory[meatType][key].origins = Array.from(groupedInventory[meatType][key].origins);\n      });\n    });\n\n    setInventory(groupedInventory);\n\n    const totalByMeatType = cuts.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;*/\n      const totalByMeatType = items.reduce((acc, item) => {\n      acc[item.meatType] = (acc[item.meatType] || 0) + item.weight;\n      return acc;\n    }, {});\n    setTotalWeightByMeatType(totalByMeatType);\n     const fetchSummary = async () => {\n      try {\n        const { data } = await api.get('/inventario/resumen');\n        const groupedRes = data.reduce((acc, row) => {\n          if (!acc[row.tipo_carne]) acc[row.tipo_carne] = [];\n          acc[row.tipo_carne].push({\n            cut: row.tipo_corte,\n            pieces: row.total_piezas,\n            weight: row.total_kg\n          });\n          return acc;\n        }, {});\n        setSummary(groupedRes);\n      } catch (err) {\n        console.error('Error loading summary:', err);\n      }\n    };\n\n    fetchSummary();\n\n\n  }, [items]);\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Inventario de Cortes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Total de Kilos por Tipo de Carne</h3>\n        {Object.keys(totalWeightByMeatType).length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {Object.entries(totalWeightByMeatType).map(([meatType, totalWeight]) => (\n              <div key={meatType} className=\"border border-gray-200 rounded-lg p-4\">\n                <p className=\"text-gray-800 font-medium\">{meatType}: <span className=\"font-normal\">{totalWeight.toFixed(2)} kg</span></p>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay datos de inventario para mostrar el resumen.</p>\n        )}\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Resumen por Corte</h3>\n        {Object.keys(summary).length > 0 ? (\n          Object.entries(summary).map(([meat, cuts]) => (\n            <div key={meat} className=\"mb-4\">\n              <h4 className=\"text-lg font-semibold text-gray-700\">Tipo de Carne: {meat}</h4>\n              <ul className=\"ml-4 list-disc\">\n                {cuts.map(c => (\n                  <li key={c.cut} className=\"text-gray-800\">\n                    {c.cut} → {c.pieces} piezas | {c.weight.toFixed(2)} kg\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))\n        ) : (\n          <p className=\"text-gray-600\">No hay datos de resumen disponibles.</p>\n        )}\n      </div>\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Detalle de Inventario</h2>\n      {Object.keys(inventory).length > 0 ? (\n        <div className=\"space-y-8\">\n          {Object.entries(inventory).map(([meatType, itemsList]) => (\n            <div key={meatType} className=\"bg-white p-6 rounded-lg shadow-md\">\n              <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Tipo de Carne: {meatType}</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n{itemsList.map(item => (\n                  <div key={item.id} className=\"border border-gray-200 rounded-lg p-4\">\n                   <p className=\"text-gray-800 font-medium\">Tipo de Corte: <span className=\"font-normal\">{item.cutType}</span></p>\n                    <p className=\"text-gray-800 font-medium\">Cantidad: <span className=\"font-normal\">{item.quantity}</span></p>\n                    <p className=\"text-gray-800 font-medium\">Peso Total: <span className=\"font-normal\">{item.weight.toFixed(2)} kg</span></p>\n                    <p className=\"text-gray-800 font-medium\">Origen: <span className=\"font-normal\">{item.origin}</span></p>\n                    <p className=\"text-gray-800 font-medium\">Estado: <span className=\"font-normal\">{item.status}</span></p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p className=\"text-gray-600\">No hay cortes en el inventario detallado aún.</p>\n      )}\n    </div>\n  );\n};\n\nexport default InventoryList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\DeboningForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n//import { getStorage, setStorage } from '../utils/storage';\n//import { initialInvoices } from '../mock/invoices';\n//import { initialCutTypes } from '../mock/cutTypes';\nimport { filterByDateRange } from '../utils/dateFilters';\n//import { initialUsers } from '../mock/users';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeboningForm = () => {\n  _s();\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableCarcasses, setAvailableCarcasses] = useState([]);\n  const [selectedCarcassCode, setSelectedCarcassCode] = useState('');\n  const [currentCutsForCarcass, setCurrentCutsForCarcass] = useState([]);\n  const [newCut, setNewCut] = useState({\n    cutType: '',\n    weight: '',\n    quantity: ''\n  });\n  const [productos, setProductos] = useState([]); // Inicializar lista de productos desde el back\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const operarioUsers = users.filter(u => typeof u.rol === 'string' && u.rol.toLowerCase() === 'operario');\n\n  // Cargar datos al montar el componente\n  // AHORA: carga facturas, despostes, usuarios y productos desde tu API\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // 1) Todas las facturas\n        const {\n          data: facturas\n        } = await api.get('/facturas');\n        // 2) Despostes ya hechos (para excluirlos)\n        const {\n          data: despostes\n        } = await api.get('/despostes');\n        const hechosIds = despostes.map(d => d.id_factura);\n        // filtramos facturas que aún no tienen desposte\n        setInvoices(facturas.filter(f => !hechosIds.includes(f.id_factura)));\n\n        // 3) Todos los usuarios → solo operarios\n        const {\n          data: allUsers\n        } = await api.get('/usuarios');\n        setUsers(allUsers);\n        // 4) Lista de productos (tipos de carne)\n        const {\n          data: prods\n        } = await api.get('/productos');\n        setProductos(prods || []);\n      } catch (err) {\n        console.error('Error cargando datos de desposte:', err);\n      }\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    // si no hay factura seleccionada, limpiamos\n    if (!selectedInvoiceId) {\n      setAvailableCarcasses([]);\n      setSelectedCarcassCode('');\n      setCurrentCutsForCarcass([]);\n      return;\n    }\n\n    // función asíncrona para cargar los canales de la factura\n    const loadCanales = async () => {\n      try {\n        // GET /api/canales?factura=ID\n        const {\n          data\n        } = await api.get(`/canales?factura=${selectedInvoiceId}`);\n        setAvailableCarcasses(data || []);\n        setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n      } catch (err) {\n        console.error('Error cargando canales de la factura:', err);\n        setAvailableCarcasses([]);\n        setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n      }\n    };\n    loadCanales();\n  }, [selectedInvoiceId]);\n  useEffect(() => {\n    setCurrentCutsForCarcass([]);\n  }, [selectedCarcassCode]);\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n  const handleNewCutChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCut({\n      ...newCut,\n      [name]: value\n    });\n  };\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10)\n    };\n    setCurrentCutsForCarcass([...currentCutsForCarcass, cutToAdd]);\n    setNewCut({\n      cutType: '',\n      weight: '',\n      quantity: ''\n    });\n  };\n  const handleDeleteTemporaryCut = id => {\n    setCurrentCutsForCarcass(currentCutsForCarcass.filter(cut => cut.id !== id));\n  };\n  const handleRegisterAllCuts = async () => {\n    if (currentCutsForCarcass.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n    if (!selectedInvoiceId || !selectedOperatorId || !selectedCarcassCode) {\n      alert('Por favor, selecciona la factura, el operario y el canal.');\n      return;\n    }\n    const processingDate = new Date().toISOString().split('T')[0];\n    const cutsToSave = currentCutsForCarcass.map(cut => ({\n      invoiceId: selectedInvoiceId,\n      operatorId: selectedOperatorId,\n      carcassCode: selectedCarcassCode,\n      cutType: cut.cutType,\n      weight: cut.weight,\n      quantity: cut.quantity,\n      processingDate\n    }));\n    try {\n      const newCuts = [...cuts, ...cutsToSave.map(c => ({\n        id: `cut-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        ...c\n      }))];\n      await setStorage('cuts', newCuts);\n      setCuts(newCuts);\n      setCurrentCutsForCarcass([]);\n      setSelectedCarcassCode('');\n      setNewCut({\n        cutType: '',\n        weight: '',\n        quantity: ''\n      });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error(\"Error registering cuts:\", error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n  const getTotalWeightSummary = cutsList => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n  const getInvoiceNumber = invoiceId => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n  const getOperatorName = operatorId => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n  const getCutsSummary = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getTotalWeightByMeatType = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return {};\n    const totalChannelWeight = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + channel.weight;\n      return acc;\n    }, {});\n    const totalCutWeight = cutsList.reduce((acc, cut) => {\n      const channel = invoice.channels.find(ch => ch.code === cut.carcassCode);\n      if (channel) {\n        acc[channel.type] = (acc[channel.type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n    const merma = {};\n    Object.keys(totalChannelWeight).forEach(meatType => {\n      const channelWeight = totalChannelWeight[meatType] || 0;\n      const cutWeight = totalCutWeight[meatType] || 0;\n      merma[meatType] = channelWeight - cutWeight;\n    });\n    Object.keys(totalCutWeight).forEach(meatType => {\n      if (!merma.hasOwnProperty(meatType)) {\n        merma[meatType] = -(totalCutWeight[meatType] || 0);\n      }\n    });\n    return Object.entries(merma);\n  };\n  const getCarcassType = carcassCode => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (invoice) {\n      const channel = invoice.channels.find(ch => ch.code === carcassCode);\n      return channel ? channel.type : 'Desconocido';\n    }\n    return 'Desconocido';\n  };\n\n  // Ahora, todos los productos (ej: “Res”, “Cerdo”, “Pollo”, etc.) aparecerán:\n  const availableCutTypes = selectedCarcassCode ? productos.map(p => p.nombre) : [];\n  const invoicesWithoutDeboning = invoices.filter(invoice => {\n    const hasDeboning = cuts.some(cut => cut.invoiceId === invoice.id);\n    return !hasDeboning;\n  });\n  const groupedCutsArray = Object.entries(groupedCuts);\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n    const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n    const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n    return dateB - dateA;\n  });\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Registro de Despostes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Nuevo Desposte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"invoice\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Factura Pendiente de Desposte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"invoice\",\n          value: selectedInvoiceId,\n          onChange: e => setSelectedInvoiceId(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una Factura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), invoicesWithoutDeboning.map(invoice => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: invoice.id,\n            children: [invoice.number, \" (\", invoice.date, \")\"]\n          }, invoice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), invoicesWithoutDeboning.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay facturas pendientes de desposte.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operatorId\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Operario que Desposta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"operatorId\",\n          name: \"operatorId\",\n          value: selectedOperatorId,\n          onChange: e => setSelectedOperatorId(parseInt(e.target.value, 10)),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Operario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), operarioUsers.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id_usuario,\n            children: u.nombre\n          }, u.id_usuario, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"carcass\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Canal a Despostar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"carcass\",\n          value: selectedCarcassCode,\n          onChange: e => setSelectedCarcassCode(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          disabled: !selectedInvoiceId || availableCarcasses.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Canal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), availableCarcasses.map(c => {\n            var _productos$find;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: c.id_canal,\n              children: `Código: ${c.codigo_canal} (` + `${((_productos$find = productos.find(p => p.id_producto === c.id_producto)) === null || _productos$find === void 0 ? void 0 : _productos$find.nombre) || 'Desconocido'}, ` + `${c.peso} kg)`\n            }, c.id_canal, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 3\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), selectedInvoiceId && availableCarcasses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay canales disponibles para despostar en esta factura.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), selectedCarcassCode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Registrar Cortes para Canal \", selectedCarcassCode, \" (\", getCarcassType(selectedCarcassCode), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutType\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Tipo de Corte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cutType\",\n            name: \"cutType\",\n            value: newCut.cutType,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Tipo de Corte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), productos.map(producto => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: producto.nombre,\n              children: producto.nombre\n            }, producto.id_producto, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 16\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutWeight\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Peso del Corte (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutWeight\",\n            name: \"weight\",\n            placeholder: \"Ej: 50\",\n            value: newCut.weight,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutQuantity\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Cantidad de Piezas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutQuantity\",\n            name: \"quantity\",\n            placeholder: \"Ej: 2\",\n            value: newCut.quantity,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTemporaryCut,\n          className: \"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n          children: \"Agregar Corte a la Lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), currentCutsForCarcass.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Cortes Temporales para Canal \", selectedCarcassCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: currentCutsForCarcass.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [cut.cutType, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.weight, \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 77\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.quantity, \" piezas\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTemporaryCut(cut.id),\n              className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 19\n            }, this)]\n          }, cut.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-gray-100 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-md font-semibold text-gray-800 mb-2\",\n            children: \"Resumen de Peso Total Temporal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700\",\n            children: [\"Total Despostado: \", getTotalWeightSummary(currentCutsForCarcass), \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegisterAllCuts,\n          className: \"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n          children: \"Registrar Todos los Cortes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Despostes Registrados por Factura\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Filtros de Despostes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Buscar (N\\xFAmero Factura)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search-deboning\",\n              placeholder: \"Ej: FAC-2023-001\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"start-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Inicio Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"start-date-deboning\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"end-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Fin Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"end-date-deboning\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearFilters,\n          className: \"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",\n          children: \"Limpiar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), paginatedGroupedCuts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n          const invoice = invoices.find(inv => inv.number === invoiceNumber);\n          const invoiceId = invoice ? invoice.id : null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: [\"Factura: \", invoiceNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: cutsList.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-gray-200 rounded-lg p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Corte: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.cutType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 73\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Canal C\\xF3digo: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.carcassCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 80\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Peso: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.weight, \" kg\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.quantity, \" piezas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Operario: \", getOperatorName(cut.operatorId)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Fecha: \", cut.processingDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 25\n                }, this)]\n              }, cut.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 p-4 bg-gray-100 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mb-2\",\n                children: \"Resumen de Peso por Tipo de Corte en esta Factura\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 21\n              }, this), getCutsSummary(cutsList).map(([type, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [type, \": \", totalWeight.toFixed(2), \" kg\"]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mt-4 mb-2\",\n                children: \"Total Kilos Despostado y Merma por Tipo de Carne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 21\n              }, this), getTotalWeightByMeatType(cutsList).map(([meatType, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [meatType, \" (Despostado): \", totalWeight.toFixed(2), \" kg\"]\n              }, meatType, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 23\n              }, this)), invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([meatType, mermaWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [meatType, \" (Merma): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`,\n                  children: [mermaWeight.toFixed(2), \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 45\n                }, this)]\n              }, `${meatType}-merma`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 19\n            }, this)]\n          }, invoiceNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay despostes registrados que coincidan con la b\\xFAsqueda o rango de fechas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6 space-x-2\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: `px-4 py-2 rounded-lg transition-colors ${currentPage === index + 1 ? 'bg-black text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(DeboningForm, \"5ZIZRM/GW8Q0TkP6GvP+UD1yjos=\");\n_c = DeboningForm;\nexport default DeboningForm;\nvar _c;\n$RefreshReg$(_c, \"DeboningForm\");","map":{"version":3,"names":["React","useState","useEffect","filterByDateRange","api","jsxDEV","_jsxDEV","DeboningForm","_s","invoices","setInvoices","cuts","setCuts","users","setUsers","selectedInvoiceId","setSelectedInvoiceId","selectedOperatorId","setSelectedOperatorId","availableCarcasses","setAvailableCarcasses","selectedCarcassCode","setSelectedCarcassCode","currentCutsForCarcass","setCurrentCutsForCarcass","newCut","setNewCut","cutType","weight","quantity","productos","setProductos","searchTerm","setSearchTerm","startDate","setStartDate","endDate","setEndDate","groupedCuts","setGroupedCuts","currentPage","setCurrentPage","itemsPerPage","operarioUsers","filter","u","rol","toLowerCase","loadData","data","facturas","get","despostes","hechosIds","map","d","id_factura","f","includes","allUsers","prods","err","console","error","loadCanales","dateFilteredCuts","grouped","reduce","acc","cut","invoiceNumber","getInvoiceNumber","invoiceId","push","filteredGrouped","Object","entries","cutsList","handleNewCutChange","e","name","value","target","handleAddTemporaryCut","alert","id","Date","now","cutToAdd","parseFloat","parseInt","handleDeleteTemporaryCut","handleRegisterAllCuts","length","processingDate","toISOString","split","cutsToSave","operatorId","carcassCode","newCuts","c","Math","random","toString","substr","setStorage","getTotalWeightSummary","totalWeight","sum","toFixed","invoice","find","inv","number","getOperatorName","operator","user","fullName","getCutsSummary","summary","getTotalWeightByMeatType","channel","channels","ch","code","meatType","type","getMermaByMeatType","totalChannelWeight","totalCutWeight","merma","keys","forEach","channelWeight","cutWeight","hasOwnProperty","getCarcassType","availableCutTypes","p","nombre","invoicesWithoutDeboning","hasDeboning","some","groupedCutsArray","sortedGroupedCuts","sort","cutsA","cutsB","dateA","dateB","startIndex","endIndex","paginatedGroupedCuts","slice","totalPages","ceil","handlePageChange","page","handleClearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","date","id_usuario","disabled","_productos$find","id_canal","codigo_canal","id_producto","peso","producto","placeholder","onClick","mermaWeight","Array","from","_","index","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/DeboningForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n//import { getStorage, setStorage } from '../utils/storage';\n//import { initialInvoices } from '../mock/invoices';\n//import { initialCutTypes } from '../mock/cutTypes';\nimport { filterByDateRange } from '../utils/dateFilters';\n//import { initialUsers } from '../mock/users';\nimport api from '../services/api';\n\n\nconst DeboningForm = () => {\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableCarcasses, setAvailableCarcasses] = useState([]);\n  const [selectedCarcassCode, setSelectedCarcassCode] = useState('');\n  const [currentCutsForCarcass, setCurrentCutsForCarcass] = useState([]);\n  const [newCut, setNewCut] = useState({ cutType: '', weight: '', quantity: '' });\n  const [productos, setProductos] = useState([]); // Inicializar lista de productos desde el back\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n\n  const operarioUsers = users.filter(u =>\n  typeof u.rol === 'string' && u.rol.toLowerCase() === 'operario'\n);\n\n\n  // Cargar datos al montar el componente\n  // AHORA: carga facturas, despostes, usuarios y productos desde tu API\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // 1) Todas las facturas\n        const { data: facturas } = await api.get('/facturas');\n        // 2) Despostes ya hechos (para excluirlos)\n        const { data: despostes } = await api.get('/despostes');\n        const hechosIds = despostes.map(d => d.id_factura);\n        // filtramos facturas que aún no tienen desposte\n        setInvoices(facturas.filter(f => !hechosIds.includes(f.id_factura)));\n\n        // 3) Todos los usuarios → solo operarios\n        const { data: allUsers } = await api.get('/usuarios');\n        setUsers(allUsers);\n        // 4) Lista de productos (tipos de carne)\n        const { data: prods } = await api.get('/productos');\n        setProductos(prods || []);\n      } catch (err) {\n        console.error('Error cargando datos de desposte:', err);\n      }\n    };\n    loadData();\n  }, []);\n\n\nuseEffect(() => {\n  // si no hay factura seleccionada, limpiamos\n  if (!selectedInvoiceId) {\n    setAvailableCarcasses([]);\n    setSelectedCarcassCode('');\n    setCurrentCutsForCarcass([]);\n    return;\n  }\n\n  // función asíncrona para cargar los canales de la factura\n  const loadCanales = async () => {\n    try {\n      // GET /api/canales?factura=ID\n      const { data } = await api.get(`/canales?factura=${selectedInvoiceId}`);\n      setAvailableCarcasses(data || []);\n      setSelectedCarcassCode('');\n      setCurrentCutsForCarcass([]);\n    } catch (err) {\n      console.error('Error cargando canales de la factura:', err);\n      setAvailableCarcasses([]);\n      setSelectedCarcassCode('');\n      setCurrentCutsForCarcass([]);\n    }\n  };\n\n  loadCanales();\n}, [selectedInvoiceId]);\n\n\n  useEffect(() => {\n    setCurrentCutsForCarcass([]);\n  }, [selectedCarcassCode]);\n\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n\n\n  const handleNewCutChange = (e) => {\n    const { name, value } = e.target;\n    setNewCut({ ...newCut, [name]: value });\n  };\n\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10),\n    };\n\n    setCurrentCutsForCarcass([...currentCutsForCarcass, cutToAdd]);\n    setNewCut({ cutType: '', weight: '', quantity: '' });\n  };\n\n  const handleDeleteTemporaryCut = (id) => {\n    setCurrentCutsForCarcass(currentCutsForCarcass.filter(cut => cut.id !== id));\n  };\n\n  const handleRegisterAllCuts = async () => {\n    if (currentCutsForCarcass.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n    if (!selectedInvoiceId || !selectedOperatorId || !selectedCarcassCode) {\n       alert('Por favor, selecciona la factura, el operario y el canal.');\n       return;\n    }\n\n    const processingDate = new Date().toISOString().split('T')[0];\n    const cutsToSave = currentCutsForCarcass.map(cut => ({\n      invoiceId: selectedInvoiceId,\n      operatorId: selectedOperatorId,\n      carcassCode: selectedCarcassCode,\n      cutType: cut.cutType,\n      weight: cut.weight,\n      quantity: cut.quantity,\n      processingDate,\n    }));\n\n    try {\n      const newCuts = [...cuts, ...cutsToSave.map(c => ({ id: `cut-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`, ...c }))];\n      await setStorage('cuts', newCuts);\n      setCuts(newCuts);\n      setCurrentCutsForCarcass([]);\n      setSelectedCarcassCode('');\n      setNewCut({ cutType: '', weight: '', quantity: '' });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error(\"Error registering cuts:\", error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n\n\n  const getTotalWeightSummary = (cutsList) => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n\n  const getInvoiceNumber = (invoiceId) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n\n  const getOperatorName = (operatorId) => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n\n\n  const getCutsSummary = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getTotalWeightByMeatType = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return {};\n\n    const totalChannelWeight = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + channel.weight;\n      return acc;\n    }, {});\n\n    const totalCutWeight = cutsList.reduce((acc, cut) => {\n      const channel = invoice.channels.find(ch => ch.code === cut.carcassCode);\n      if (channel) {\n         acc[channel.type] = (acc[channel.type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n\n    const merma = {};\n    Object.keys(totalChannelWeight).forEach(meatType => {\n      const channelWeight = totalChannelWeight[meatType] || 0;\n      const cutWeight = totalCutWeight[meatType] || 0;\n      merma[meatType] = channelWeight - cutWeight;\n    });\n\n     Object.keys(totalCutWeight).forEach(meatType => {\n        if (!merma.hasOwnProperty(meatType)) {\n             merma[meatType] = -(totalCutWeight[meatType] || 0);\n        }\n     });\n\n\n    return Object.entries(merma);\n  };\n\n\n  const getCarcassType = (carcassCode) => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (invoice) {\n      const channel = invoice.channels.find(ch => ch.code === carcassCode);\n      return channel ? channel.type : 'Desconocido';\n    }\n    return 'Desconocido';\n  };\n\n  // Ahora, todos los productos (ej: “Res”, “Cerdo”, “Pollo”, etc.) aparecerán:\n  const availableCutTypes = selectedCarcassCode ? productos.map(p => p.nombre) : [];\n\n  const invoicesWithoutDeboning = invoices.filter(invoice => {\n    const hasDeboning = cuts.some(cut => cut.invoiceId === invoice.id);\n    return !hasDeboning;\n  });\n\n  const groupedCutsArray = Object.entries(groupedCuts);\n\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n      const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n      const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n      return dateB - dateA;\n  });\n\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Registro de Despostes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Nuevo Desposte</h3>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"invoice\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Factura Pendiente de Desposte</label>\n          <select\n            id=\"invoice\"\n            value={selectedInvoiceId}\n            onChange={(e) => setSelectedInvoiceId(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona una Factura</option>\n            {invoicesWithoutDeboning.map(invoice => (\n              <option key={invoice.id} value={invoice.id}>\n                {invoice.number} ({invoice.date})\n              </option>\n            ))}\n          </select>\n           {invoicesWithoutDeboning.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay facturas pendientes de desposte.</p>\n          )}\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"operatorId\" className=\"block text-sm font-medium text-gray-700\">Operario que Desposta</label>\n          <select\n            id=\"operatorId\"\n            name=\"operatorId\"\n            value={selectedOperatorId}\n            onChange={(e) => setSelectedOperatorId(parseInt(e.target.value, 10))}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona un Operario</option>\n            {operarioUsers.map(u => (\n              <option key={u.id_usuario} value={u.id_usuario}>\n                {u.nombre}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"carcass\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Canal a Despostar</label>\n          <select\n            id=\"carcass\"\n            value={selectedCarcassCode}\n            onChange={(e) => setSelectedCarcassCode(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            disabled={!selectedInvoiceId || availableCarcasses.length === 0}\n          >\n            <option value=\"\">Selecciona un Canal</option>\n            {availableCarcasses.map(c => (\n  <option key={c.id_canal} value={c.id_canal}>\n    {`Código: ${c.codigo_canal} (` +\n      `${productos.find(p => p.id_producto === c.id_producto)?.nombre || 'Desconocido'}, ` +\n      `${c.peso} kg)` }\n  </option>\n            ))}\n          </select>\n           {selectedInvoiceId && availableCarcasses.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay canales disponibles para despostar en esta factura.</p>\n          )}\n        </div>\n\n        {selectedCarcassCode && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Registrar Cortes para Canal {selectedCarcassCode} ({getCarcassType(selectedCarcassCode)})</h4>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutType\" className=\"block text-sm font-medium text-gray-700\">Tipo de Corte</label>\n              <select\n                id=\"cutType\"\n                name=\"cutType\"\n                value={newCut.cutType}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              >\n                <option value=\"\">Selecciona un Tipo de Corte</option>\n                {productos.map(producto => (\n               <option\n                 key={producto.id_producto}\n                 value={producto.nombre}\n               >\n                 {producto.nombre}\n               </option>\n             ))}\n              </select>\n            </div>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutWeight\" className=\"block text-sm font-medium text-gray-700\">Peso del Corte (kg)</label>\n              <input\n                type=\"number\"\n                id=\"cutWeight\"\n                name=\"weight\"\n                placeholder=\"Ej: 50\"\n                value={newCut.weight}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n             <div className=\"mt-3\">\n              <label htmlFor=\"cutQuantity\" className=\"block text-sm font-medium text-gray-700\">Cantidad de Piezas</label>\n              <input\n                type=\"number\"\n                id=\"cutQuantity\"\n                name=\"quantity\"\n                placeholder=\"Ej: 2\"\n                value={newCut.quantity}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n            <button\n              onClick={handleAddTemporaryCut}\n              className=\"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Agregar Corte a la Lista\n            </button>\n          </div>\n        )}\n\n        {currentCutsForCarcass.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-white\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Cortes Temporales para Canal {selectedCarcassCode}</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {currentCutsForCarcass.map(cut => (\n                <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3 flex justify-between items-center\">\n                  <div>\n                    <p className=\"text-gray-700 font-medium\">{cut.cutType}: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                    <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                  </div>\n                  <button\n                    onClick={() => handleDeleteTemporaryCut(cut.id)}\n                    className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                  >\n                    Eliminar\n                  </button>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"mt-4 p-3 bg-gray-100 rounded-lg\">\n              <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso Total Temporal</h5>\n              <p className=\"text-gray-700\">Total Despostado: {getTotalWeightSummary(currentCutsForCarcass)} kg</p>\n            </div>\n\n            <button\n              onClick={handleRegisterAllCuts}\n              className=\"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Registrar Todos los Cortes\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Sección de Visualización de Despostes Integrada */}\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Despostes Registrados por Factura</h2>\n\n        <div className=\"mb-6 bg-white p-4 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Filtros de Despostes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"search-deboning\" className=\"block text-sm font-medium text-gray-700\">Buscar (Número Factura)</label>\n              <input\n                type=\"text\"\n                id=\"search-deboning\"\n                placeholder=\"Ej: FAC-2023-001\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n             <div>\n              <label htmlFor=\"start-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Inicio Desposte</label>\n              <input\n                type=\"date\"\n                id=\"start-date-deboning\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"end-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Fin Desposte</label>\n              <input\n                type=\"date\"\n                id=\"end-date-deboning\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n           <button\n            onClick={handleClearFilters}\n            className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Limpiar Filtros\n          </button>\n        </div>\n\n\n        {paginatedGroupedCuts.length > 0 ? (\n          <div className=\"space-y-8\">\n            {paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n              const invoice = invoices.find(inv => inv.number === invoiceNumber);\n              const invoiceId = invoice ? invoice.id : null;\n\n              return (\n                <div key={invoiceNumber} className=\"bg-white p-6 rounded-lg shadow-md\">\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Factura: {invoiceNumber}</h3>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {cutsList.map(cut => (\n                      <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3\">\n                        <p className=\"text-gray-700 font-medium\">Corte: <span className=\"font-normal\">{cut.cutType}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Canal Código: <span className=\"font-normal\">{cut.carcassCode}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Peso: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                        <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                        <p className=\"text-gray-600 text-sm\">Operario: {getOperatorName(cut.operatorId)}</p>\n                        <p className=\"text-gray-600 text-sm\">Fecha: {cut.processingDate}</p>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"mt-4 p-4 bg-gray-100 rounded-lg\">\n                    <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso por Tipo de Corte en esta Factura</h5>\n                    {getCutsSummary(cutsList).map(([type, totalWeight]) => (\n                      <p key={type} className=\"text-gray-700\">{type}: {totalWeight.toFixed(2)} kg</p>\n                    ))}\n\n                    <h5 className=\"text-md font-semibold text-gray-800 mt-4 mb-2\">Total Kilos Despostado y Merma por Tipo de Carne</h5>\n                    {getTotalWeightByMeatType(cutsList).map(([meatType, totalWeight]) => (\n                      <p key={meatType} className=\"text-gray-700\">{meatType} (Despostado): {totalWeight.toFixed(2)} kg</p>\n                    ))}\n                     {invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([meatType, mermaWeight]) => (\n                      <p key={`${meatType}-merma`} className=\"text-gray-700\">\n                        {meatType} (Merma): <span className={`${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`}>{mermaWeight.toFixed(2)} kg</span>\n                      </p>\n                    ))}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay despostes registrados que coincidan con la búsqueda o rango de fechas.</p>\n        )}\n      </div>\n\n       {totalPages > 1 && (\n        <div className=\"flex justify-center mt-6 space-x-2\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index + 1}\n              onClick={() => handlePageChange(index + 1)}\n              className={`px-4 py-2 rounded-lg transition-colors ${\n                currentPage === index + 1\n                  ? 'bg-black text-white'\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n              }`}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DeboningForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
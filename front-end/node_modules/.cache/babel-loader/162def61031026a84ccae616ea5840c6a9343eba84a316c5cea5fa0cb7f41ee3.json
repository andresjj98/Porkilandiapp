{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\DeboningForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\nimport { InventoryContext } from '../contexts/InventoryContext';\nimport { filterByDateRange } from '../utils/dateFilters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeboningForm = () => {\n  _s();\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [despostes, setDespostes] = useState([]);\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableChannels, setAvailableChannels] = useState([]);\n  const [selectedChannelCodes, setSelectedChannelCodes] = useState([]);\n  const [currentCuts, setCurrentCuts] = useState([]);\n  const [newCut, setNewCut] = useState({\n    cutType: '',\n    weight: '',\n    quantity: ''\n  });\n  const [cutTypes, setCutTypes] = useState({}); // Inicializar vacío\n  const [cutTypeNameToId, setCutTypeNameToId] = useState({});\n  const [desposteChannelsMap, setDesposteChannelsMap] = useState({});\n  const {\n    refreshInventory\n  } = useContext(InventoryContext);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const operarioUsers = users.filter(user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario');\n  const loadData = async () => {\n    try {\n      const [factRes, desRes, detRes, prodRes, userRes] = await Promise.allSettled([api.get('/facturas'), api.get('/despostes'), api.get('/detalles_corte'), api.get('/productos'), api.get('/usuarios')]);\n      const invoicesData = factRes.status === 'fulfilled' ? factRes.value.data : [];\n      setInvoices(invoicesData);\n      const canalMap = {};\n      invoicesData.forEach(inv => {\n        (inv.channels || []).forEach(ch => {\n          canalMap[ch.id] = {\n            code: ch.code,\n            type: ch.type,\n            invoiceId: inv.id\n          };\n        });\n      });\n      const cutTypesByMeat = {};\n      const cutNameToId = {};\n      const cutIdToName = {};\n      const prodData = prodRes.status === 'fulfilled' ? prodRes.value.data : [];\n      (prodData || []).forEach(p => {\n        if (!cutTypesByMeat[p.tipo_carne]) cutTypesByMeat[p.tipo_carne] = [];\n        if (!cutTypesByMeat[p.tipo_carne].includes(p.tipo_corte)) {\n          cutTypesByMeat[p.tipo_carne].push(p.tipo_corte);\n        }\n        cutNameToId[p.tipo_corte] = p.id_tipo_corte;\n        cutIdToName[p.id_tipo_corte] = p.tipo_corte;\n      });\n      const desposteMap = {};\n      const desposteList = desRes.status === 'fulfilled' ? desRes.value.data : [];\n      const desCanalMap = {};\n      for (const d of desposteList) {\n        desposteMap[d.id_desposte] = d;\n        try {\n          const resp = await api.get(`/desposte_canales?desposte=${d.id_desposte}`);\n          desCanalMap[d.id_desposte] = resp.data || [];\n        } catch (err) {\n          desCanalMap[d.id_desposte] = [];\n        }\n      }\n      const detData = detRes.status === 'fulfilled' ? detRes.value.data : [];\n      const mappedCuts = (detData || []).map(det => {\n        const des = desposteMap[det.id_desposte] || {};\n        return {\n          id: det.id_detalle,\n          desposteId: det.id_desposte,\n          invoiceId: des.id_factura,\n          operatorId: des.id_usuario,\n          channelCodes: (desCanalMap[det.id_desposte] || []).map(cid => {\n            var _canalMap$cid;\n            return ((_canalMap$cid = canalMap[cid]) === null || _canalMap$cid === void 0 ? void 0 : _canalMap$cid.code) || cid;\n          }),\n          cutType: cutIdToName[det.id_tipo_corte] || String(det.id_tipo_corte),\n          weight: parseFloat(det.peso),\n          quantity: det.cantidad,\n          processingDate: des.fecha\n        };\n      });\n      const userData = userRes.status === 'fulfilled' ? userRes.value.data : [];\n      const userList = (userData || []).map(u => ({\n        id: u.id,\n        fullName: u.nombre,\n        role: u.role\n      }));\n      setCuts(mappedCuts);\n      setDespostes(desposteList);\n      setDesposteChannelsMap(desCanalMap);\n      setUsers(userList);\n      setCutTypes(cutTypesByMeat);\n      setCutTypeNameToId(cutNameToId);\n    } catch (error) {\n      console.error('Error loading initial data for DeboningForm:', error);\n    }\n  };\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n    loadData();\n  }, []);\n  useEffect(() => {\n    if (selectedInvoiceId) {\n      const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n      if (invoice) {\n        const usedCodes = Object.entries(desposteChannelsMap).flatMap(([_, codes]) => {\n          const des = despostes.find(d => d.id_desposte === Number(_));\n          return des && des.id_factura === selectedInvoiceId ? codes.map(id => {\n            var _invoice$channels$fin;\n            return (_invoice$channels$fin = invoice.channels.find(c => c.id === id)) === null || _invoice$channels$fin === void 0 ? void 0 : _invoice$channels$fin.code;\n          }) : [];\n        });\n        const available = invoice.channels.filter(ch => !usedCodes.includes(ch.code));\n        setAvailableChannels(available);\n        setSelectedChannelCodes([]);\n        setCurrentCuts([]);\n      }\n    } else {\n      setAvailableChannels([]);\n      setSelectedChannelCodes([]);\n      setCurrentCuts([]);\n    }\n  }, [selectedInvoiceId, invoices, desposteChannelsMap, despostes]);\n  useEffect(() => {\n    setCurrentCuts([]);\n  }, [selectedChannelCodes.join(',')]);\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n  const handleNewCutChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCut({\n      ...newCut,\n      [name]: value\n    });\n  };\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10)\n    };\n    setCurrentCuts([...currentCuts, cutToAdd]);\n    setNewCut({\n      cutType: '',\n      weight: '',\n      quantity: ''\n    });\n  };\n  const handleDeleteTemporaryCut = id => {\n    setCurrentCuts(currentCuts.filter(cut => cut.id !== id));\n  };\n  const handleRegisterAllCuts = async () => {\n    if (currentCuts.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n    if (!selectedInvoiceId || !selectedOperatorId || selectedChannelCodes.length === 0) {\n      alert('Por favor, selecciona la factura, el operario y al menos un canal.');\n      return;\n    }\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    const channelIds = invoice ? invoice.channels.filter(c => selectedChannelCodes.includes(c.code)).map(c => c.id) : [];\n    const cutsToSend = currentCuts.map(cut => ({\n      cutTypeId: cutTypeNameToId[cut.cutType],\n      weight: cut.weight,\n      quantity: cut.quantity\n    }));\n    try {\n      await api.post('/despostes', {\n        id_factura: selectedInvoiceId,\n        id_usuario: selectedOperatorId,\n        channelIds,\n        cuts: cutsToSend\n      });\n      await loadData();\n      await refreshInventory();\n      setCurrentCuts([]);\n      setSelectedChannelCodes([]);\n      setNewCut({\n        cutType: '',\n        weight: '',\n        quantity: ''\n      });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error('Error registering cuts:', error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n  const getTotalWeightSummary = cutsList => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n  const getInvoiceNumber = invoiceId => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n  const getOperatorName = operatorId => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n  const getCutsSummary = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getTotalWeightByInvoice = (invoiceId, cutsList) => {\n    return cutsList.reduce((sum, cut) => cut.invoiceId === invoiceId ? sum + cut.weight : sum, 0);\n  };\n  const getMermaByInvoice = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return 0;\n    const channels = invoice.channels;\n    const selectedIds = Object.entries(desposteChannelsMap).reduce((acc, [dId, ids]) => {\n      const d = despostes.find(ds => ds.id_desposte === Number(dId));\n      if (d && d.id_factura === invoiceId) acc.push(...ids);\n      return acc;\n    }, []);\n    const totalChannelWeight = channels.filter(ch => selectedIds.includes(ch.id)).reduce((s, ch) => s + parseFloat(ch.weight), 0);\n    const cutsWeight = getTotalWeightByInvoice(invoiceId, cutsList);\n    return totalChannelWeight - cutsWeight;\n  };\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return [];\n    const channelWeights = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + parseFloat(channel.weight);\n      return acc;\n    }, {});\n    const cutWeights = cutsList.reduce((acc, cut) => {\n      if (cut.invoiceId === invoiceId) {\n        const type = getSelectedMeatType();\n        acc[type] = (acc[type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n    const merma = {};\n    Object.keys(channelWeights).forEach(type => {\n      const channelWeight = channelWeights[type] || 0;\n      const cutWeight = cutWeights[type] || 0;\n      merma[type] = channelWeight - cutWeight;\n    });\n    return Object.entries(merma);\n  };\n  const getSelectedMeatType = () => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (!invoice) return '';\n    const ch = invoice.channels.find(c => selectedChannelCodes.includes(c.code));\n    return ch ? ch.type : '';\n  };\n  const availableCutTypes = selectedChannelCodes.length > 0 ? cutTypes[getSelectedMeatType()] || [] : [];\n\n  // Mostrar solo las facturas que tienen al menos un canal pendiente de desposte\n  const invoicesWithPendingChannels = invoices.filter(invoice => {\n    const usedIds = Object.entries(desposteChannelsMap).reduce((acc, [dId, ids]) => {\n      const d = despostes.find(ds => ds.id_desposte === Number(dId));\n      if (d && d.id_factura === invoice.id) acc.push(...ids);\n      return acc;\n    }, []);\n    return invoice.channels.some(ch => !usedIds.includes(ch.id));\n  });\n  const groupedCutsArray = Object.entries(groupedCuts);\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n    const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n    const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n    return dateB - dateA;\n  });\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Registro de Despostes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Nuevo Desposte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"invoice\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Factura Pendiente de Desposte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"invoice\",\n          value: selectedInvoiceId,\n          onChange: e => setSelectedInvoiceId(Number(e.target.value)),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una Factura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), invoicesWithPendingChannels.map(invoice => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: invoice.id,\n            children: [invoice.number, \" (\", invoice.date, \")\"]\n          }, invoice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), invoicesWithPendingChannels.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay facturas pendientes de desposte.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operatorId\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Operario que Desposta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"operatorId\",\n          name: \"operatorId\",\n          value: selectedOperatorId,\n          onChange: e => setSelectedOperatorId(Number(e.target.value)),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Operario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), operarioUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.id,\n            children: user.fullName\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Canales a Despostar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 space-y-1\",\n          children: [availableChannels.map(ch => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedChannelCodes.includes(ch.code),\n              onChange: e => {\n                if (e.target.checked) {\n                  setSelectedChannelCodes([...selectedChannelCodes, ch.code]);\n                } else {\n                  setSelectedChannelCodes(selectedChannelCodes.filter(c => c !== ch.code));\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: `Código: ${ch.code} (${ch.type}, ${ch.weight}kg)`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, ch.code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)), selectedInvoiceId && availableChannels.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: \"No hay canales disponibles para despostar en esta factura.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), selectedChannelCodes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Registrar Cortes para Canales \", selectedChannelCodes.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutType\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Tipo de Corte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cutType\",\n            name: \"cutType\",\n            value: newCut.cutType,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Tipo de Corte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), availableCutTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutWeight\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Peso del Corte (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutWeight\",\n            name: \"weight\",\n            placeholder: \"Ej: 50\",\n            value: newCut.weight,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutQuantity\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Cantidad de Piezas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutQuantity\",\n            name: \"quantity\",\n            placeholder: \"Ej: 2\",\n            value: newCut.quantity,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTemporaryCut,\n          className: \"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n          children: \"Agregar Corte a la Lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), currentCuts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Cortes Temporales para Canales \", selectedChannelCodes.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: currentCuts.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [cut.cutType, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.weight, \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 77\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.quantity, \" piezas\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTemporaryCut(cut.id),\n              className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this)]\n          }, cut.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-gray-100 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-md font-semibold text-gray-800 mb-2\",\n            children: \"Resumen de Peso Total Temporal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700\",\n            children: [\"Total Despostado: \", getTotalWeightSummary(currentCuts), \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegisterAllCuts,\n          className: \"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n          children: \"Registrar Todos los Cortes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Despostes Registrados por Factura\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Filtros de Despostes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Buscar (N\\xFAmero Factura)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search-deboning\",\n              placeholder: \"Ej: FAC-2023-001\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"start-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Inicio Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"start-date-deboning\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"end-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Fin Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"end-date-deboning\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearFilters,\n          className: \"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",\n          children: \"Limpiar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), paginatedGroupedCuts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n          const invoice = invoices.find(inv => inv.number === invoiceNumber);\n          const invoiceId = invoice ? invoice.id : null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: [\"Factura: \", invoiceNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: cutsList.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-gray-200 rounded-lg p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Corte: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.cutType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 73\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Canales: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.channelCodes.join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 75\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Peso: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.weight, \" kg\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.quantity, \" piezas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Operario: \", getOperatorName(cut.operatorId)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Fecha: \", cut.processingDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 25\n                }, this)]\n              }, cut.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 p-4 bg-gray-100 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mb-2\",\n                children: \"Resumen de Peso por Tipo de Corte en esta Factura\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this), getCutsSummary(cutsList).map(([type, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [type, \": \", totalWeight.toFixed(2), \" kg\"]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mt-4 mb-2\",\n                children: \"Resumen de Peso Total y Merma\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [\"Total Despostado: \", getTotalWeightByInvoice(invoiceId, cutsList).toFixed(2), \" kg\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [\"Merma: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${getMermaByInvoice(invoiceId, cutsList) >= 0 ? 'text-green-600' : 'text-red-600'}`,\n                  children: [getMermaByInvoice(invoiceId, cutsList).toFixed(2), \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mt-4 mb-2\",\n                children: \"Merma Total por Tipo de Carne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 21\n              }, this), invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([type, mermaWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [type, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`,\n                  children: [mermaWeight.toFixed(2), \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 33\n                }, this)]\n              }, `${type}-total-merma`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 19\n            }, this)]\n          }, invoiceNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay despostes registrados que coincidan con la b\\xFAsqueda o rango de fechas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6 space-x-2\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: `px-4 py-2 rounded-lg transition-colors ${currentPage === index + 1 ? 'bg-black text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n};\n_s(DeboningForm, \"RC8rgwtSHSFn2WGCLDrcHTwGQp4=\");\n_c = DeboningForm;\nexport default DeboningForm;\nvar _c;\n$RefreshReg$(_c, \"DeboningForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","api","InventoryContext","filterByDateRange","jsxDEV","_jsxDEV","DeboningForm","_s","invoices","setInvoices","cuts","setCuts","despostes","setDespostes","users","setUsers","selectedInvoiceId","setSelectedInvoiceId","selectedOperatorId","setSelectedOperatorId","availableChannels","setAvailableChannels","selectedChannelCodes","setSelectedChannelCodes","currentCuts","setCurrentCuts","newCut","setNewCut","cutType","weight","quantity","cutTypes","setCutTypes","cutTypeNameToId","setCutTypeNameToId","desposteChannelsMap","setDesposteChannelsMap","refreshInventory","searchTerm","setSearchTerm","startDate","setStartDate","endDate","setEndDate","groupedCuts","setGroupedCuts","currentPage","setCurrentPage","itemsPerPage","operarioUsers","filter","user","role","toLowerCase","loadData","factRes","desRes","detRes","prodRes","userRes","Promise","allSettled","get","invoicesData","status","value","data","canalMap","forEach","inv","channels","ch","id","code","type","invoiceId","cutTypesByMeat","cutNameToId","cutIdToName","prodData","p","tipo_carne","includes","tipo_corte","push","id_tipo_corte","desposteMap","desposteList","desCanalMap","d","id_desposte","resp","err","detData","mappedCuts","map","det","des","id_detalle","desposteId","id_factura","operatorId","id_usuario","channelCodes","cid","_canalMap$cid","String","parseFloat","peso","cantidad","processingDate","fecha","userData","userList","u","fullName","nombre","error","console","invoice","find","usedCodes","Object","entries","flatMap","_","codes","Number","_invoice$channels$fin","c","available","join","dateFilteredCuts","grouped","reduce","acc","cut","invoiceNumber","getInvoiceNumber","filteredGrouped","cutsList","handleNewCutChange","e","name","target","handleAddTemporaryCut","alert","Date","now","cutToAdd","parseInt","handleDeleteTemporaryCut","handleRegisterAllCuts","length","channelIds","cutsToSend","cutTypeId","post","getTotalWeightSummary","totalWeight","sum","toFixed","number","getOperatorName","operator","getCutsSummary","summary","getTotalWeightByInvoice","getMermaByInvoice","selectedIds","dId","ids","ds","totalChannelWeight","s","cutsWeight","getMermaByMeatType","channelWeights","channel","cutWeights","getSelectedMeatType","merma","keys","channelWeight","cutWeight","availableCutTypes","invoicesWithPendingChannels","usedIds","some","groupedCutsArray","sortedGroupedCuts","sort","cutsA","cutsB","dateA","dateB","startIndex","endIndex","paginatedGroupedCuts","slice","totalPages","Math","ceil","handlePageChange","page","handleClearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","date","checked","placeholder","onClick","mermaWeight","Array","from","index","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/DeboningForm.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\nimport { InventoryContext } from '../contexts/InventoryContext';\nimport { filterByDateRange } from '../utils/dateFilters';\n\n\n\nconst DeboningForm = () => {\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [despostes, setDespostes] = useState([]);\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableChannels, setAvailableChannels] = useState([]);\n  const [selectedChannelCodes, setSelectedChannelCodes] = useState([]);\n  const [currentCuts, setCurrentCuts] = useState([]);\n  const [newCut, setNewCut] = useState({ cutType: '', weight: '', quantity: '' });\n  const [cutTypes, setCutTypes] = useState({}); // Inicializar vacío\n  const [cutTypeNameToId, setCutTypeNameToId] = useState({});\n  const [desposteChannelsMap, setDesposteChannelsMap] = useState({});\n\n  const { refreshInventory } = useContext(InventoryContext);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n\n  const operarioUsers = users.filter(\n    user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario'\n  );\n\nconst loadData = async () => {\n    try {\n      const [factRes, desRes, detRes, prodRes, userRes] = await Promise.allSettled([\n        api.get('/facturas'),\n        api.get('/despostes'),\n        api.get('/detalles_corte'),\n        api.get('/productos'),\n        api.get('/usuarios')\n      ]);\n\n      const invoicesData = factRes.status === 'fulfilled' ? factRes.value.data : [];\n      setInvoices(invoicesData);\n\n      const canalMap = {};\n      invoicesData.forEach(inv => {\n        (inv.channels || []).forEach(ch => {\n          canalMap[ch.id] = { code: ch.code, type: ch.type, invoiceId: inv.id };\n        });\n      });\n\n      const cutTypesByMeat = {};\n      const cutNameToId = {};\n      const cutIdToName = {};\n      const prodData = prodRes.status === 'fulfilled' ? prodRes.value.data : [];\n      (prodData || []).forEach(p => {\n        if (!cutTypesByMeat[p.tipo_carne]) cutTypesByMeat[p.tipo_carne] = [];\n        if (!cutTypesByMeat[p.tipo_carne].includes(p.tipo_corte)) {\n          cutTypesByMeat[p.tipo_carne].push(p.tipo_corte);\n        }\n        cutNameToId[p.tipo_corte] = p.id_tipo_corte;\n        cutIdToName[p.id_tipo_corte] = p.tipo_corte;\n      });\n\n      const desposteMap = {};\n      const desposteList = desRes.status === 'fulfilled' ? desRes.value.data : [];\n      const desCanalMap = {};\n      for (const d of desposteList) {\n        desposteMap[d.id_desposte] = d;\n      try {\n          const resp = await api.get(`/desposte_canales?desposte=${d.id_desposte}`);\n          desCanalMap[d.id_desposte] = resp.data || [];\n        } catch (err) {\n          desCanalMap[d.id_desposte] = [];\n        }\n      }\n\n      const detData = detRes.status === 'fulfilled' ? detRes.value.data : [];\n      const mappedCuts = (detData || []).map(det => {\n        const des = desposteMap[det.id_desposte] || {};        \n        return {\n          id: det.id_detalle,\n          desposteId: det.id_desposte,\n          invoiceId: des.id_factura,\n          operatorId: des.id_usuario,\n          channelCodes: (desCanalMap[det.id_desposte] || []).map(cid => canalMap[cid]?.code || cid),\n          cutType: cutIdToName[det.id_tipo_corte] || String(det.id_tipo_corte),\n          weight: parseFloat(det.peso),\n          quantity: det.cantidad,\n          processingDate: des.fecha\n        };\n      });\n\n      const userData = userRes.status === 'fulfilled' ? userRes.value.data : [];\n      const userList = (userData || []).map(u => ({\n        id: u.id,\n        fullName: u.nombre,\n        role: u.role\n      }));\n\n      setCuts(mappedCuts);\n      setDespostes(desposteList);\n      setDesposteChannelsMap(desCanalMap);\n      setUsers(userList);\n      setCutTypes(cutTypesByMeat);\n      setCutTypeNameToId(cutNameToId);\n    } catch (error) {\n      console.error('Error loading initial data for DeboningForm:', error);\n    }\n  };\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n  \n    loadData();\n  }, []);\n\n\n  useEffect(() => {\n    if (selectedInvoiceId) {\n      const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n      if (invoice) {\n        const usedCodes = Object.entries(desposteChannelsMap).flatMap(([_, codes]) => {\n          const des = despostes.find(d => d.id_desposte === Number(_));\n          return des && des.id_factura === selectedInvoiceId ? codes.map(id => invoice.channels.find(c=>c.id===id)?.code) : [];\n        });\n        const available = invoice.channels.filter(ch => !usedCodes.includes(ch.code));\n        setAvailableChannels(available);\n        setSelectedChannelCodes([]);\n        setCurrentCuts([]);\n      }\n    } else {\n      setAvailableChannels([]);\n      setSelectedChannelCodes([]);\n      setCurrentCuts([]);\n    }\n  }, [selectedInvoiceId, invoices, desposteChannelsMap, despostes]);\n\n  useEffect(() => {\n    setCurrentCuts([]);\n  }, [selectedChannelCodes.join(',')]);\n\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n\n\n  const handleNewCutChange = (e) => {\n    const { name, value } = e.target;\n    setNewCut({ ...newCut, [name]: value });\n  };\n\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10),\n    };\n\n    setCurrentCuts([...currentCuts, cutToAdd]);\n    setNewCut({ cutType: '', weight: '', quantity: '' });\n  };\n\n  const handleDeleteTemporaryCut = (id) => {\n    setCurrentCuts(currentCuts.filter(cut => cut.id !== id));\n  };\n\n  const handleRegisterAllCuts = async () => {\n    if (currentCuts.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n    if (!selectedInvoiceId || !selectedOperatorId || selectedChannelCodes.length === 0) {\n       alert('Por favor, selecciona la factura, el operario y al menos un canal.');\n       return;\n    }\n\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    const channelIds = invoice ? invoice.channels.filter(c => selectedChannelCodes.includes(c.code)).map(c=>c.id) : [];\n      const cutsToSend = currentCuts.map(cut => ({\n      cutTypeId: cutTypeNameToId[cut.cutType],\n      weight: cut.weight,\n      quantity: cut.quantity\n    }));\n\n    try {\n      await api.post('/despostes', {\n        id_factura: selectedInvoiceId,\n        id_usuario: selectedOperatorId,\n        channelIds,\n        cuts: cutsToSend\n      });\n      await loadData();\n      await refreshInventory();\n      setCurrentCuts([]);\n      setSelectedChannelCodes([]);\n      setNewCut({ cutType: '', weight: '', quantity: '' });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error('Error registering cuts:', error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n\n\n  const getTotalWeightSummary = (cutsList) => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n\n  const getInvoiceNumber = (invoiceId) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n\n  const getOperatorName = (operatorId) => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n\n\n  const getCutsSummary = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getTotalWeightByInvoice = (invoiceId, cutsList) => {\n    return cutsList.reduce((sum, cut) =>\n      cut.invoiceId === invoiceId ? sum + cut.weight : sum, 0);\n  };\n\n  const getMermaByInvoice = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return 0;\n\n    const channels = invoice.channels;\n    const selectedIds = Object.entries(desposteChannelsMap).reduce((acc,[dId,ids])=>{\n      const d = despostes.find(ds=>ds.id_desposte===Number(dId));\n      if(d && d.id_factura===invoiceId) acc.push(...ids);\n      return acc;\n   },[]);\n    const totalChannelWeight = channels.filter(ch=>selectedIds.includes(ch.id)).reduce((s,ch)=>s+parseFloat(ch.weight),0);\n    const cutsWeight = getTotalWeightByInvoice(invoiceId, cutsList);\n    return totalChannelWeight - cutsWeight;\n  };\nconst getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return [];\n\n    const channelWeights = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + parseFloat(channel.weight);\n      return acc;\n    }, {});\n\n    const cutWeights = cutsList.reduce((acc, cut) => {\n      if (cut.invoiceId === invoiceId) {\n        const type = getSelectedMeatType();\n        acc[type] = (acc[type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n\n    const merma = {};\n    Object.keys(channelWeights).forEach(type => {\n      const channelWeight = channelWeights[type] || 0;\n      const cutWeight = cutWeights[type] || 0;\n      merma[type] = channelWeight - cutWeight;\n    });\n\n    return Object.entries(merma);\n  };\n\n\n  const getSelectedMeatType = () => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (!invoice) return '';\n    const ch = invoice.channels.find(c => selectedChannelCodes.includes(c.code));\n    return ch ? ch.type : '';\n  };\n\n  const availableCutTypes = selectedChannelCodes.length > 0 ? cutTypes[getSelectedMeatType()] || [] : [];\n\n// Mostrar solo las facturas que tienen al menos un canal pendiente de desposte\n  const invoicesWithPendingChannels = invoices.filter(invoice => {\n    const usedIds = Object.entries(desposteChannelsMap).reduce((acc,[dId,ids])=>{\n      const d = despostes.find(ds=>ds.id_desposte===Number(dId));\n      if(d && d.id_factura===invoice.id) acc.push(...ids);\n      return acc;\n    },[]);\n    return invoice.channels.some(ch => !usedIds.includes(ch.id));\n  });\n\n  const groupedCutsArray = Object.entries(groupedCuts);\n\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n      const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n      const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n      return dateB - dateA;\n  });\n\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Registro de Despostes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Nuevo Desposte</h3>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"invoice\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Factura Pendiente de Desposte</label>\n          <select\n            id=\"invoice\"\n            value={selectedInvoiceId}\n            onChange={(e) => setSelectedInvoiceId(Number(e.target.value))}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona una Factura</option>\n             {invoicesWithPendingChannels.map(invoice => (\n              <option key={invoice.id} value={invoice.id}>\n                {invoice.number} ({invoice.date})\n              </option>\n            ))}\n          </select>\n            {invoicesWithPendingChannels.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay facturas pendientes de desposte.</p>\n          )}\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"operatorId\" className=\"block text-sm font-medium text-gray-700\">Operario que Desposta</label>\n          <select\n            id=\"operatorId\"\n            name=\"operatorId\"\n            value={selectedOperatorId}\n            onChange={(e) => setSelectedOperatorId(Number(e.target.value))}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona un Operario</option>\n            {operarioUsers.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.fullName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mt-3\">\n           <label className=\"block text-sm font-medium text-gray-700\">Seleccionar Canales a Despostar</label>\n          <div className=\"mt-2 space-y-1\">\n            {availableChannels.map(ch => (\n              <label key={ch.code} className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedChannelCodes.includes(ch.code)}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      setSelectedChannelCodes([...selectedChannelCodes, ch.code]);\n                    } else {\n                      setSelectedChannelCodes(selectedChannelCodes.filter(c => c !== ch.code));\n                    }\n                  }}\n                />\n                <span>{`Código: ${ch.code} (${ch.type}, ${ch.weight}kg)`}</span>\n              </label>\n            ))}\n          {selectedInvoiceId && availableChannels.length === 0 && (\n              <p className=\"text-sm text-gray-500\">No hay canales disponibles para despostar en esta factura.</p>\n            )}\n          </div>\n        </div>\n\n        {selectedChannelCodes.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Registrar Cortes para Canales {selectedChannelCodes.join(', ')}</h4>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutType\" className=\"block text-sm font-medium text-gray-700\">Tipo de Corte</label>\n              <select\n                id=\"cutType\"\n                name=\"cutType\"\n                value={newCut.cutType}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              >\n                <option value=\"\">Selecciona un Tipo de Corte</option>\n                {availableCutTypes.map(type => (\n                  <option key={type} value={type}>{type}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutWeight\" className=\"block text-sm font-medium text-gray-700\">Peso del Corte (kg)</label>\n              <input\n                type=\"number\"\n                id=\"cutWeight\"\n                name=\"weight\"\n                placeholder=\"Ej: 50\"\n                value={newCut.weight}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n             <div className=\"mt-3\">\n              <label htmlFor=\"cutQuantity\" className=\"block text-sm font-medium text-gray-700\">Cantidad de Piezas</label>\n              <input\n                type=\"number\"\n                id=\"cutQuantity\"\n                name=\"quantity\"\n                placeholder=\"Ej: 2\"\n                value={newCut.quantity}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n            <button\n              onClick={handleAddTemporaryCut}\n              className=\"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Agregar Corte a la Lista\n            </button>\n          </div>\n        )}\n\n        {currentCuts.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-white\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Cortes Temporales para Canales {selectedChannelCodes.join(', ')}</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {currentCuts.map(cut => (\n                <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3 flex justify-between items-center\">\n                  <div>\n                    <p className=\"text-gray-700 font-medium\">{cut.cutType}: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                    <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                  </div>\n                  <button\n                    onClick={() => handleDeleteTemporaryCut(cut.id)}\n                    className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                  >\n                    Eliminar\n                  </button>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"mt-4 p-3 bg-gray-100 rounded-lg\">\n              <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso Total Temporal</h5>\n              <p className=\"text-gray-700\">Total Despostado: {getTotalWeightSummary(currentCuts)} kg</p>\n            </div>\n\n            <button\n              onClick={handleRegisterAllCuts}\n              className=\"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Registrar Todos los Cortes\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Sección de Visualización de Despostes Integrada */}\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Despostes Registrados por Factura</h2>\n\n        <div className=\"mb-6 bg-white p-4 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Filtros de Despostes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"search-deboning\" className=\"block text-sm font-medium text-gray-700\">Buscar (Número Factura)</label>\n              <input\n                type=\"text\"\n                id=\"search-deboning\"\n                placeholder=\"Ej: FAC-2023-001\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n             <div>\n              <label htmlFor=\"start-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Inicio Desposte</label>\n              <input\n                type=\"date\"\n                id=\"start-date-deboning\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"end-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Fin Desposte</label>\n              <input\n                type=\"date\"\n                id=\"end-date-deboning\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n           <button\n            onClick={handleClearFilters}\n            className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Limpiar Filtros\n          </button>\n        </div>\n\n\n        {paginatedGroupedCuts.length > 0 ? (\n          <div className=\"space-y-8\">\n            {paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n              const invoice = invoices.find(inv => inv.number === invoiceNumber);\n              const invoiceId = invoice ? invoice.id : null;\n\n              return (\n                <div key={invoiceNumber} className=\"bg-white p-6 rounded-lg shadow-md\">\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Factura: {invoiceNumber}</h3>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {cutsList.map(cut => (\n                      <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3\">\n                        <p className=\"text-gray-700 font-medium\">Corte: <span className=\"font-normal\">{cut.cutType}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Canales: <span className=\"font-normal\">{cut.channelCodes.join(', ')}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Peso: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                        <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                        <p className=\"text-gray-600 text-sm\">Operario: {getOperatorName(cut.operatorId)}</p>\n                        <p className=\"text-gray-600 text-sm\">Fecha: {cut.processingDate}</p>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"mt-4 p-4 bg-gray-100 rounded-lg\">\n                    <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso por Tipo de Corte en esta Factura</h5>\n                    {getCutsSummary(cutsList).map(([type, totalWeight]) => (\n                      <p key={type} className=\"text-gray-700\">{type}: {totalWeight.toFixed(2)} kg</p>\n                    ))}\n\n                     <h5 className=\"text-md font-semibold text-gray-800 mt-4 mb-2\">Resumen de Peso Total y Merma</h5>\n                    <p className=\"text-gray-700\">Total Despostado: {getTotalWeightByInvoice(invoiceId, cutsList).toFixed(2)} kg</p>\n                    <p className=\"text-gray-700\">Merma: <span className={`${getMermaByInvoice(invoiceId, cutsList) >= 0 ? 'text-green-600' : 'text-red-600'}`}>{getMermaByInvoice(invoiceId, cutsList).toFixed(2)} kg</span></p>\n                    <h5 className=\"text-md font-semibold text-gray-800 mt-4 mb-2\">Merma Total por Tipo de Carne</h5>\n                    {invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([type, mermaWeight]) => (\n                      <p key={`${type}-total-merma`} className=\"text-gray-700\">\n                        {type}: <span className={`${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`}>{mermaWeight.toFixed(2)} kg</span>\n                      </p>\n                    ))}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay despostes registrados que coincidan con la búsqueda o rango de fechas.</p>\n        )}\n      </div>\n\n       {totalPages > 1 && (\n        <div className=\"flex justify-center mt-6 space-x-2\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index + 1}\n              onClick={() => handlePageChange(index + 1)}\n              className={`px-4 py-2 rounded-lg transition-colors ${\n                currentPage === index + 1\n                  ? 'bg-black text-white'\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n              }`}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DeboningForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
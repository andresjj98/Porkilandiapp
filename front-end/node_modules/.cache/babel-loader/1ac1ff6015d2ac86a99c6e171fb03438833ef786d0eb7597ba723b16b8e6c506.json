{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programas\\\\porkiapp_v1.0\\\\front-end\\\\src\\\\components\\\\DeboningForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { filterByDateRange } from '../utils/dateFilters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeboningForm = () => {\n  _s();\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [despostes, setDespostes] = useState([]);\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableCarcasses, setAvailableCarcasses] = useState([]);\n  const [selectedCarcassCode, setSelectedCarcassCode] = useState('');\n  const [currentCutsForCarcass, setCurrentCutsForCarcass] = useState([]);\n  const [newCut, setNewCut] = useState({\n    cutType: '',\n    weight: '',\n    quantity: ''\n  });\n  const [cutTypes, setCutTypes] = useState({}); // Inicializar vacío\n  const [cutTypeNameToId, setCutTypeNameToId] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n  const operarioUsers = users.filter(user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario');\n  const loadData = async () => {\n    try {\n      const [factRes, desRes, detRes, tipoRes, userRes] = await Promise.all([api.get('/facturas'), api.get('/despostes'), api.get('/detalles_corte'), api.get('/tipos_corte'), api.get('/usuarios')]);\n      const invoicesData = factRes.data || [];\n      setInvoices(invoicesData);\n      const canalMap = {};\n      invoicesData.forEach(inv => {\n        (inv.channels || []).forEach(ch => {\n          canalMap[ch.id] = {\n            code: ch.code,\n            type: ch.type,\n            invoiceId: inv.id\n          };\n        });\n      });\n      const cutTypesByMeat = {};\n      const cutNameToId = {};\n      const cutIdToName = {};\n      (tipoRes.data || []).forEach(t => {\n        if (!cutTypesByMeat[t.producto]) cutTypesByMeat[t.producto] = [];\n        cutTypesByMeat[t.producto].push(t.nombre_corte);\n        cutNameToId[t.nombre_corte] = t.id_tipo_corte;\n        cutIdToName[t.id_tipo_corte] = t.nombre_corte;\n      });\n      const desposteMap = {};\n      (desRes.data || []).forEach(d => {\n        desposteMap[d.id_desposte] = d;\n      });\n      const mappedCuts = (detRes.data || []).map(det => {\n        const des = desposteMap[det.id_desposte] || {};\n        const canal = canalMap[det.id_canal] || {};\n        return {\n          id: det.id_detalle,\n          invoiceId: canal.invoiceId || des.id_factura,\n          operatorId: des.id_usuario,\n          carcassCode: canal.code || String(det.id_canal),\n          cutType: cutIdToName[det.id_tipo_corte] || String(det.id_tipo_corte),\n          weight: parseFloat(det.peso),\n          quantity: det.cantidad,\n          processingDate: des.fecha\n        };\n      });\n      const userList = (userRes.data || []).map(u => ({\n        id: u.id,\n        fullName: u.nombre,\n        role: u.role\n      }));\n      setCuts(mappedCuts);\n      setUsers(userList);\n      setCutTypes(cutTypesByMeat);\n      setCutTypeNameToId(cutNameToId);\n    } catch (error) {\n      console.error('Error loading initial data for DeboningForm:', error);\n    }\n  };\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n    loadData();\n  }, []);\n  useEffect(() => {\n    if (selectedInvoiceId) {\n      const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n      if (invoice) {\n        const despostedCarcassCodes = cuts.filter(cut => cut.invoiceId === selectedInvoiceId).map(cut => cut.carcassCode);\n        const available = invoice.channels.filter(channel => !despostedCarcassCodes.includes(channel.code));\n        setAvailableCarcasses(available);\n        setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n      }\n    } else {\n      setAvailableCarcasses([]);\n      setSelectedCarcassCode('');\n      setCurrentCutsForCarcass([]);\n    }\n  }, [selectedInvoiceId, invoices, cuts]);\n  useEffect(() => {\n    setCurrentCutsForCarcass([]);\n  }, [selectedCarcassCode]);\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n  const handleNewCutChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewCut({\n      ...newCut,\n      [name]: value\n    });\n  };\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10)\n    };\n    setCurrentCutsForCarcass([...currentCutsForCarcass, cutToAdd]);\n    setNewCut({\n      cutType: '',\n      weight: '',\n      quantity: ''\n    });\n  };\n  const handleDeleteTemporaryCut = id => {\n    setCurrentCutsForCarcass(currentCutsForCarcass.filter(cut => cut.id !== id));\n  };\n  const handleRegisterAllCuts = async () => {\n    if (currentCutsForCarcass.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n    if (!selectedInvoiceId || !selectedOperatorId || !selectedCarcassCode) {\n      alert('Por favor, selecciona la factura, el operario y el canal.');\n      return;\n    }\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    const channel = invoice ? invoice.channels.find(c => c.code === selectedCarcassCode) : null;\n    if (!channel) {\n      alert('Canal no encontrado en la factura seleccionada.');\n      return;\n    }\n    const cutsToSend = currentCutsForCarcass.map(cut => ({\n      canalId: channel.id,\n      cutTypeId: cutTypeNameToId[cut.cutType],\n      weight: cut.weight,\n      quantity: cut.quantity\n    }));\n    try {\n      await api.post('/despostes', {\n        id_factura: selectedInvoiceId,\n        id_usuario: selectedOperatorId,\n        cuts: cutsToSend\n      });\n      await loadData();\n      setCurrentCutsForCarcass([]);\n      setSelectedCarcassCode('');\n      setNewCut({\n        cutType: '',\n        weight: '',\n        quantity: ''\n      });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error('Error registering cuts:', error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n  const getTotalWeightSummary = cutsList => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n  const getInvoiceNumber = invoiceId => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n  const getOperatorName = operatorId => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n  const getCutsSummary = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getTotalWeightByMeatType = cutsList => {\n    const summary = cutsList.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return {};\n    const totalChannelWeight = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + channel.weight;\n      return acc;\n    }, {});\n    const totalCutWeight = cutsList.reduce((acc, cut) => {\n      const channel = invoice.channels.find(ch => ch.code === cut.carcassCode);\n      if (channel) {\n        acc[channel.type] = (acc[channel.type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n    const merma = {};\n    Object.keys(totalChannelWeight).forEach(meatType => {\n      const channelWeight = totalChannelWeight[meatType] || 0;\n      const cutWeight = totalCutWeight[meatType] || 0;\n      merma[meatType] = channelWeight - cutWeight;\n    });\n    Object.keys(totalCutWeight).forEach(meatType => {\n      if (!merma.hasOwnProperty(meatType)) {\n        merma[meatType] = -(totalCutWeight[meatType] || 0);\n      }\n    });\n    return Object.entries(merma);\n  };\n  const getCarcassType = carcassCode => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (invoice) {\n      const channel = invoice.channels.find(ch => ch.code === carcassCode);\n      return channel ? channel.type : 'Desconocido';\n    }\n    return 'Desconocido';\n  };\n  const availableCutTypes = selectedCarcassCode ? cutTypes[getCarcassType(selectedCarcassCode)] || [] : [];\n  const invoicesWithoutDeboning = invoices.filter(invoice => {\n    const hasDeboning = despostes.some(d => d.id_factura === invoice.id);\n    return !hasDeboning;\n  });\n  const groupedCutsArray = Object.entries(groupedCuts);\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n    const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n    const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n    return dateB - dateA;\n  });\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-50 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-6\",\n      children: \"Registro de Despostes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-4\",\n        children: \"Nuevo Desposte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"invoice\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Factura Pendiente de Desposte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"invoice\",\n          value: selectedInvoiceId,\n          onChange: e => setSelectedInvoiceId(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona una Factura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), invoicesWithoutDeboning.map(invoice => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: invoice.id,\n            children: [invoice.number, \" (\", invoice.date, \")\"]\n          }, invoice.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), invoicesWithoutDeboning.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay facturas pendientes de desposte.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"operatorId\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Operario que Desposta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"operatorId\",\n          name: \"operatorId\",\n          value: selectedOperatorId,\n          onChange: e => setSelectedOperatorId(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Operario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), operarioUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.id,\n            children: user.fullName\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"carcass\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Seleccionar Canal a Despostar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"carcass\",\n          value: selectedCarcassCode,\n          onChange: e => setSelectedCarcassCode(e.target.value),\n          className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n          disabled: !selectedInvoiceId || availableCarcasses.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecciona un Canal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), availableCarcasses.map(carcass => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: carcass.code,\n            children: `Código: ${carcass.code} (${carcass.type}, ${carcass.weight}kg)`\n          }, carcass.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), selectedInvoiceId && availableCarcasses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"No hay canales disponibles para despostar en esta factura.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), selectedCarcassCode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Registrar Cortes para Canal \", selectedCarcassCode, \" (\", getCarcassType(selectedCarcassCode), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutType\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Tipo de Corte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"cutType\",\n            name: \"cutType\",\n            value: newCut.cutType,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un Tipo de Corte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), availableCutTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutWeight\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Peso del Corte (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutWeight\",\n            name: \"weight\",\n            placeholder: \"Ej: 50\",\n            value: newCut.weight,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cutQuantity\",\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Cantidad de Piezas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cutQuantity\",\n            name: \"quantity\",\n            placeholder: \"Ej: 2\",\n            value: newCut.quantity,\n            onChange: handleNewCutChange,\n            className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTemporaryCut,\n          className: \"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\",\n          children: \"Agregar Corte a la Lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this), currentCutsForCarcass.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 border border-gray-200 rounded-lg bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-800 mb-3\",\n          children: [\"Cortes Temporales para Canal \", selectedCarcassCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: currentCutsForCarcass.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [cut.cutType, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.weight, \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 77\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700 font-medium\",\n                children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-normal\",\n                  children: [cut.quantity, \" piezas\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTemporaryCut(cut.id),\n              className: \"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this)]\n          }, cut.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-gray-100 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-md font-semibold text-gray-800 mb-2\",\n            children: \"Resumen de Peso Total Temporal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700\",\n            children: [\"Total Despostado: \", getTotalWeightSummary(currentCutsForCarcass), \" kg\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegisterAllCuts,\n          className: \"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\",\n          children: \"Registrar Todos los Cortes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-6\",\n        children: \"Despostes Registrados por Factura\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Filtros de Despostes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Buscar (N\\xFAmero Factura)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"search-deboning\",\n              placeholder: \"Ej: FAC-2023-001\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"start-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Inicio Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"start-date-deboning\",\n              value: startDate,\n              onChange: e => setStartDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"end-date-deboning\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Fecha Fin Desposte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"end-date-deboning\",\n              value: endDate,\n              onChange: e => setEndDate(e.target.value),\n              className: \"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearFilters,\n          className: \"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\",\n          children: \"Limpiar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), paginatedGroupedCuts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n          const invoice = invoices.find(inv => inv.number === invoiceNumber);\n          const invoiceId = invoice ? invoice.id : null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-6 rounded-lg shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-gray-800 mb-4\",\n              children: [\"Factura: \", invoiceNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n              children: cutsList.map(cut => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-gray-200 rounded-lg p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Corte: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.cutType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 73\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Canal C\\xF3digo: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: cut.carcassCode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 80\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Peso: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.weight, \" kg\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 font-medium\",\n                  children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-normal\",\n                    children: [cut.quantity, \" piezas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Operario: \", getOperatorName(cut.operatorId)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm\",\n                  children: [\"Fecha: \", cut.processingDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 25\n                }, this)]\n              }, cut.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 p-4 bg-gray-100 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mb-2\",\n                children: \"Resumen de Peso por Tipo de Corte en esta Factura\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 21\n              }, this), getCutsSummary(cutsList).map(([type, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [type, \": \", totalWeight.toFixed(2), \" kg\"]\n              }, type, true, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"text-md font-semibold text-gray-800 mt-4 mb-2\",\n                children: \"Total Kilos Despostado y Merma por Tipo de Carne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 21\n              }, this), getTotalWeightByMeatType(cutsList).map(([meatType, totalWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [meatType, \" (Despostado): \", totalWeight.toFixed(2), \" kg\"]\n              }, meatType, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 23\n              }, this)), invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([meatType, mermaWeight]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-700\",\n                children: [meatType, \" (Merma): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`,\n                  children: [mermaWeight.toFixed(2), \" kg\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 45\n                }, this)]\n              }, `${meatType}-merma`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 19\n            }, this)]\n          }, invoiceNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No hay despostes registrados que coincidan con la b\\xFAsqueda o rango de fechas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-6 space-x-2\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: `px-4 py-2 rounded-lg transition-colors ${currentPage === index + 1 ? 'bg-black text-white' : 'bg-gray-200 text-gray-800 hover:bg-gray-300'}`,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n};\n_s(DeboningForm, \"gvYHIFULd4X9n3suCAGm0cdmFyY=\");\n_c = DeboningForm;\nexport default DeboningForm;\nvar _c;\n$RefreshReg$(_c, \"DeboningForm\");","map":{"version":3,"names":["React","useState","useEffect","api","filterByDateRange","jsxDEV","_jsxDEV","DeboningForm","_s","invoices","setInvoices","cuts","setCuts","despostes","setDespostes","users","setUsers","selectedInvoiceId","setSelectedInvoiceId","selectedOperatorId","setSelectedOperatorId","availableCarcasses","setAvailableCarcasses","selectedCarcassCode","setSelectedCarcassCode","currentCutsForCarcass","setCurrentCutsForCarcass","newCut","setNewCut","cutType","weight","quantity","cutTypes","setCutTypes","cutTypeNameToId","setCutTypeNameToId","searchTerm","setSearchTerm","startDate","setStartDate","endDate","setEndDate","groupedCuts","setGroupedCuts","currentPage","setCurrentPage","itemsPerPage","operarioUsers","filter","user","role","toLowerCase","loadData","factRes","desRes","detRes","tipoRes","userRes","Promise","all","get","invoicesData","data","canalMap","forEach","inv","channels","ch","id","code","type","invoiceId","cutTypesByMeat","cutNameToId","cutIdToName","t","producto","push","nombre_corte","id_tipo_corte","desposteMap","d","id_desposte","mappedCuts","map","det","des","canal","id_canal","id_detalle","id_factura","operatorId","id_usuario","carcassCode","String","parseFloat","peso","cantidad","processingDate","fecha","userList","u","fullName","nombre","error","console","invoice","find","despostedCarcassCodes","cut","available","channel","includes","dateFilteredCuts","grouped","reduce","acc","invoiceNumber","getInvoiceNumber","filteredGrouped","Object","entries","cutsList","handleNewCutChange","e","name","value","target","handleAddTemporaryCut","alert","Date","now","cutToAdd","parseInt","handleDeleteTemporaryCut","handleRegisterAllCuts","length","c","cutsToSend","canalId","cutTypeId","post","getTotalWeightSummary","totalWeight","sum","toFixed","number","getOperatorName","operator","getCutsSummary","summary","getTotalWeightByMeatType","meatType","getMermaByMeatType","totalChannelWeight","totalCutWeight","merma","keys","channelWeight","cutWeight","hasOwnProperty","getCarcassType","availableCutTypes","invoicesWithoutDeboning","hasDeboning","some","groupedCutsArray","sortedGroupedCuts","sort","cutsA","cutsB","dateA","dateB","startIndex","endIndex","paginatedGroupedCuts","slice","totalPages","Math","ceil","handlePageChange","page","handleClearFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","date","disabled","carcass","placeholder","onClick","mermaWeight","Array","from","_","index","_c","$RefreshReg$"],"sources":["D:/Programas/porkiapp_v1.0/front-end/src/components/DeboningForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { filterByDateRange } from '../utils/dateFilters';\n\n\n\nconst DeboningForm = () => {\n  const [invoices, setInvoices] = useState([]); // Inicializar vacío\n  const [cuts, setCuts] = useState([]); // Inicializar vacío\n  const [despostes, setDespostes] = useState([]);\n  const [users, setUsers] = useState([]); // Inicializar vacío\n  const [selectedInvoiceId, setSelectedInvoiceId] = useState('');\n  const [selectedOperatorId, setSelectedOperatorId] = useState('');\n  const [availableCarcasses, setAvailableCarcasses] = useState([]);\n  const [selectedCarcassCode, setSelectedCarcassCode] = useState('');\n  const [currentCutsForCarcass, setCurrentCutsForCarcass] = useState([]);\n  const [newCut, setNewCut] = useState({ cutType: '', weight: '', quantity: '' });\n  const [cutTypes, setCutTypes] = useState({}); // Inicializar vacío\n  const [cutTypeNameToId, setCutTypeNameToId] = useState({});\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [groupedCuts, setGroupedCuts] = useState({});\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 12;\n\n  const operarioUsers = users.filter(\n    user => typeof user.role === 'string' && user.role.toLowerCase() === 'operario'\n  );\n\n  const loadData = async () => {\n    try {\n      const [factRes, desRes, detRes, tipoRes, userRes] = await Promise.all([\n        api.get('/facturas'),\n        api.get('/despostes'),\n        api.get('/detalles_corte'),\n        api.get('/tipos_corte'),\n        api.get('/usuarios')\n      ]);\n\n      const invoicesData = factRes.data || [];\n      setInvoices(invoicesData);\n\n      const canalMap = {};\n      invoicesData.forEach(inv => {\n        (inv.channels || []).forEach(ch => {\n          canalMap[ch.id] = { code: ch.code, type: ch.type, invoiceId: inv.id };\n        });\n      });\n\n      const cutTypesByMeat = {};\n      const cutNameToId = {};\n      const cutIdToName = {};\n      (tipoRes.data || []).forEach(t => {\n        if (!cutTypesByMeat[t.producto]) cutTypesByMeat[t.producto] = [];\n        cutTypesByMeat[t.producto].push(t.nombre_corte);\n        cutNameToId[t.nombre_corte] = t.id_tipo_corte;\n        cutIdToName[t.id_tipo_corte] = t.nombre_corte;\n      });\n\n      const desposteMap = {};\n      (desRes.data || []).forEach(d => {\n        desposteMap[d.id_desposte] = d;\n      });\n\n      const mappedCuts = (detRes.data || []).map(det => {\n        const des = desposteMap[det.id_desposte] || {};\n        const canal = canalMap[det.id_canal] || {};\n        return {\n          id: det.id_detalle,\n          invoiceId: canal.invoiceId || des.id_factura,\n          operatorId: des.id_usuario,\n          carcassCode: canal.code || String(det.id_canal),\n          cutType: cutIdToName[det.id_tipo_corte] || String(det.id_tipo_corte),\n          weight: parseFloat(det.peso),\n          quantity: det.cantidad,\n          processingDate: des.fecha\n        };\n      });\n\n      const userList = (userRes.data || []).map(u => ({\n        id: u.id,\n        fullName: u.nombre,\n        role: u.role\n      }));\n\n      setCuts(mappedCuts);\n      setUsers(userList);\n      setCutTypes(cutTypesByMeat);\n      setCutTypeNameToId(cutNameToId);\n    } catch (error) {\n      console.error('Error loading initial data for DeboningForm:', error);\n    }\n  };\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n  \n    loadData();\n  }, []);\n\n\n  useEffect(() => {\n    if (selectedInvoiceId) {\n      const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n      if (invoice) {\n        const despostedCarcassCodes = cuts\n          .filter(cut => cut.invoiceId === selectedInvoiceId)\n          .map(cut => cut.carcassCode);\n\n        const available = invoice.channels.filter(channel =>\n          !despostedCarcassCodes.includes(channel.code)\n        );\n        setAvailableCarcasses(available);\n        setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n      }\n    } else {\n      setAvailableCarcasses([]);\n      setSelectedCarcassCode('');\n        setCurrentCutsForCarcass([]);\n    }\n  }, [selectedInvoiceId, invoices, cuts]);\n\n  useEffect(() => {\n    setCurrentCutsForCarcass([]);\n  }, [selectedCarcassCode]);\n\n  useEffect(() => {\n    const dateFilteredCuts = filterByDateRange(cuts, startDate, endDate, 'processingDate');\n\n    const grouped = dateFilteredCuts.reduce((acc, cut) => {\n      const invoiceNumber = getInvoiceNumber(cut.invoiceId);\n      if (!acc[invoiceNumber]) {\n        acc[invoiceNumber] = [];\n      }\n      acc[invoiceNumber].push(cut);\n      return acc;\n    }, {});\n\n    const filteredGrouped = Object.entries(grouped).reduce((acc, [invoiceNumber, cutsList]) => {\n      if (invoiceNumber.toLowerCase().includes(searchTerm.toLowerCase())) {\n        acc[invoiceNumber] = cutsList;\n      }\n      return acc;\n    }, {});\n\n    setGroupedCuts(filteredGrouped);\n  }, [cuts, invoices, searchTerm, startDate, endDate]);\n\n\n  const handleNewCutChange = (e) => {\n    const { name, value } = e.target;\n    setNewCut({ ...newCut, [name]: value });\n  };\n\n  const handleAddTemporaryCut = () => {\n    if (!newCut.cutType || !newCut.weight || !newCut.quantity) {\n      alert('Por favor, completa todos los campos del corte.');\n      return;\n    }\n\n    const id = `temp-cut-${Date.now()}`;\n    const cutToAdd = {\n      id,\n      cutType: newCut.cutType,\n      weight: parseFloat(newCut.weight),\n      quantity: parseInt(newCut.quantity, 10),\n    };\n\n    setCurrentCutsForCarcass([...currentCutsForCarcass, cutToAdd]);\n    setNewCut({ cutType: '', weight: '', quantity: '' });\n  };\n\n  const handleDeleteTemporaryCut = (id) => {\n    setCurrentCutsForCarcass(currentCutsForCarcass.filter(cut => cut.id !== id));\n  };\n\n  const handleRegisterAllCuts = async () => {\n    if (currentCutsForCarcass.length === 0) {\n      alert('No hay cortes para registrar.');\n      return;\n    }\n    if (!selectedInvoiceId || !selectedOperatorId || !selectedCarcassCode) {\n       alert('Por favor, selecciona la factura, el operario y el canal.');\n       return;\n    }\n\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    const channel = invoice ? invoice.channels.find(c => c.code === selectedCarcassCode) : null;\n    if (!channel) {\n      alert('Canal no encontrado en la factura seleccionada.');\n      return;\n    }\n\n     const cutsToSend = currentCutsForCarcass.map(cut => ({\n      canalId: channel.id,\n      cutTypeId: cutTypeNameToId[cut.cutType],\n      weight: cut.weight,\n      quantity: cut.quantity\n    }));\n\n    try {\n      await api.post('/despostes', {\n        id_factura: selectedInvoiceId,\n        id_usuario: selectedOperatorId,\n        cuts: cutsToSend\n      });\n      await loadData();\n      setCurrentCutsForCarcass([]);\n      setSelectedCarcassCode('');\n      setNewCut({ cutType: '', weight: '', quantity: '' });\n      alert('Cortes registrados con éxito!');\n    } catch (error) {\n      console.error('Error registering cuts:', error);\n      alert('Error al registrar los cortes. Intenta de nuevo.');\n    }\n  };\n\n\n  const getTotalWeightSummary = (cutsList) => {\n    const totalWeight = cutsList.reduce((sum, cut) => sum + parseFloat(cut.weight), 0);\n    return totalWeight.toFixed(2);\n  };\n\n  const getInvoiceNumber = (invoiceId) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    return invoice ? invoice.number : 'Desconocida';\n  };\n\n  const getOperatorName = (operatorId) => {\n    const operator = users.find(user => user.id === operatorId);\n    return operator ? operator.fullName : 'Desconocido';\n  };\n\n\n  const getCutsSummary = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      acc[cut.cutType] = (acc[cut.cutType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getTotalWeightByMeatType = (cutsList) => {\n    const summary = cutsList.reduce((acc, cut) => {\n      const invoice = invoices.find(inv => inv.id === cut.invoiceId);\n      const channel = invoice ? invoice.channels.find(ch => ch.code === cut.carcassCode) : null;\n      const meatType = channel ? channel.type : 'Desconocido';\n\n      acc[meatType] = (acc[meatType] || 0) + cut.weight;\n      return acc;\n    }, {});\n    return Object.entries(summary);\n  };\n\n  const getMermaByMeatType = (invoiceId, cutsList) => {\n    const invoice = invoices.find(inv => inv.id === invoiceId);\n    if (!invoice) return {};\n\n    const totalChannelWeight = invoice.channels.reduce((acc, channel) => {\n      acc[channel.type] = (acc[channel.type] || 0) + channel.weight;\n      return acc;\n    }, {});\n\n    const totalCutWeight = cutsList.reduce((acc, cut) => {\n      const channel = invoice.channels.find(ch => ch.code === cut.carcassCode);\n      if (channel) {\n         acc[channel.type] = (acc[channel.type] || 0) + cut.weight;\n      }\n      return acc;\n    }, {});\n\n    const merma = {};\n    Object.keys(totalChannelWeight).forEach(meatType => {\n      const channelWeight = totalChannelWeight[meatType] || 0;\n      const cutWeight = totalCutWeight[meatType] || 0;\n      merma[meatType] = channelWeight - cutWeight;\n    });\n\n     Object.keys(totalCutWeight).forEach(meatType => {\n        if (!merma.hasOwnProperty(meatType)) {\n             merma[meatType] = -(totalCutWeight[meatType] || 0);\n        }\n     });\n\n\n    return Object.entries(merma);\n  };\n\n\n  const getCarcassType = (carcassCode) => {\n    const invoice = invoices.find(inv => inv.id === selectedInvoiceId);\n    if (invoice) {\n      const channel = invoice.channels.find(ch => ch.code === carcassCode);\n      return channel ? channel.type : 'Desconocido';\n    }\n    return 'Desconocido';\n  };\n\n  const availableCutTypes = selectedCarcassCode ? cutTypes[getCarcassType(selectedCarcassCode)] || [] : [];\n\n  const invoicesWithoutDeboning = invoices.filter(invoice => {\n    const hasDeboning = despostes.some(d => d.id_factura === invoice.id);\n    return !hasDeboning;\n  });\n\n  const groupedCutsArray = Object.entries(groupedCuts);\n\n  const sortedGroupedCuts = groupedCutsArray.sort(([, cutsA], [, cutsB]) => {\n      const dateA = cutsA.length > 0 ? new Date(cutsA[0].processingDate) : new Date(0);\n      const dateB = cutsB.length > 0 ? new Date(cutsB[0].processingDate) : new Date(0);\n      return dateB - dateA;\n  });\n\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n\n  const paginatedGroupedCuts = sortedGroupedCuts.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(sortedGroupedCuts.length / itemsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleClearFilters = () => {\n    setSearchTerm('');\n    setStartDate('');\n    setEndDate('');\n    setCurrentPage(1);\n  };\n\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Registro de Despostes</h2>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Nuevo Desposte</h3>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"invoice\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Factura Pendiente de Desposte</label>\n          <select\n            id=\"invoice\"\n            value={selectedInvoiceId}\n            onChange={(e) => setSelectedInvoiceId(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona una Factura</option>\n            {invoicesWithoutDeboning.map(invoice => (\n              <option key={invoice.id} value={invoice.id}>\n                {invoice.number} ({invoice.date})\n              </option>\n            ))}\n          </select>\n           {invoicesWithoutDeboning.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay facturas pendientes de desposte.</p>\n          )}\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"operatorId\" className=\"block text-sm font-medium text-gray-700\">Operario que Desposta</label>\n          <select\n            id=\"operatorId\"\n            name=\"operatorId\"\n            value={selectedOperatorId}\n            onChange={(e) => setSelectedOperatorId(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n          >\n            <option value=\"\">Selecciona un Operario</option>\n            {operarioUsers.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.fullName}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mt-3\">\n          <label htmlFor=\"carcass\" className=\"block text-sm font-medium text-gray-700\">Seleccionar Canal a Despostar</label>\n          <select\n            id=\"carcass\"\n            value={selectedCarcassCode}\n            onChange={(e) => setSelectedCarcassCode(e.target.value)}\n            className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n            disabled={!selectedInvoiceId || availableCarcasses.length === 0}\n          >\n            <option value=\"\">Selecciona un Canal</option>\n            {availableCarcasses.map(carcass => (\n              <option key={carcass.code} value={carcass.code}>\n                {`Código: ${carcass.code} (${carcass.type}, ${carcass.weight}kg)`}\n              </option>\n            ))}\n          </select>\n           {selectedInvoiceId && availableCarcasses.length === 0 && (\n            <p className=\"text-sm text-gray-500 mt-1\">No hay canales disponibles para despostar en esta factura.</p>\n          )}\n        </div>\n\n        {selectedCarcassCode && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-gray-50\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Registrar Cortes para Canal {selectedCarcassCode} ({getCarcassType(selectedCarcassCode)})</h4>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutType\" className=\"block text-sm font-medium text-gray-700\">Tipo de Corte</label>\n              <select\n                id=\"cutType\"\n                name=\"cutType\"\n                value={newCut.cutType}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              >\n                <option value=\"\">Selecciona un Tipo de Corte</option>\n                {availableCutTypes.map(type => (\n                  <option key={type} value={type}>{type}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"mt-3\">\n              <label htmlFor=\"cutWeight\" className=\"block text-sm font-medium text-gray-700\">Peso del Corte (kg)</label>\n              <input\n                type=\"number\"\n                id=\"cutWeight\"\n                name=\"weight\"\n                placeholder=\"Ej: 50\"\n                value={newCut.weight}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n             <div className=\"mt-3\">\n              <label htmlFor=\"cutQuantity\" className=\"block text-sm font-medium text-gray-700\">Cantidad de Piezas</label>\n              <input\n                type=\"number\"\n                id=\"cutQuantity\"\n                name=\"quantity\"\n                placeholder=\"Ej: 2\"\n                value={newCut.quantity}\n                onChange={handleNewCutChange}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n\n            <button\n              onClick={handleAddTemporaryCut}\n              className=\"w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Agregar Corte a la Lista\n            </button>\n          </div>\n        )}\n\n        {currentCutsForCarcass.length > 0 && (\n          <div className=\"mt-6 p-4 border border-gray-200 rounded-lg bg-white\">\n            <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Cortes Temporales para Canal {selectedCarcassCode}</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {currentCutsForCarcass.map(cut => (\n                <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3 flex justify-between items-center\">\n                  <div>\n                    <p className=\"text-gray-700 font-medium\">{cut.cutType}: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                    <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                  </div>\n                  <button\n                    onClick={() => handleDeleteTemporaryCut(cut.id)}\n                    className=\"px-3 py-1 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm\"\n                  >\n                    Eliminar\n                  </button>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"mt-4 p-3 bg-gray-100 rounded-lg\">\n              <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso Total Temporal</h5>\n              <p className=\"text-gray-700\">Total Despostado: {getTotalWeightSummary(currentCutsForCarcass)} kg</p>\n            </div>\n\n            <button\n              onClick={handleRegisterAllCuts}\n              className=\"w-full mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n            >\n              Registrar Todos los Cortes\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Sección de Visualización de Despostes Integrada */}\n      <div className=\"mt-8\">\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Despostes Registrados por Factura</h2>\n\n        <div className=\"mb-6 bg-white p-4 rounded-lg shadow-md\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Filtros de Despostes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label htmlFor=\"search-deboning\" className=\"block text-sm font-medium text-gray-700\">Buscar (Número Factura)</label>\n              <input\n                type=\"text\"\n                id=\"search-deboning\"\n                placeholder=\"Ej: FAC-2023-001\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n             <div>\n              <label htmlFor=\"start-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Inicio Desposte</label>\n              <input\n                type=\"date\"\n                id=\"start-date-deboning\"\n                value={startDate}\n                onChange={(e) => setStartDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"end-date-deboning\" className=\"block text-sm font-medium text-gray-700\">Fecha Fin Desposte</label>\n              <input\n                type=\"date\"\n                id=\"end-date-deboning\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n                className=\"w-full mt-1 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-black transition\"\n              />\n            </div>\n          </div>\n           <button\n            onClick={handleClearFilters}\n            className=\"mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            Limpiar Filtros\n          </button>\n        </div>\n\n\n        {paginatedGroupedCuts.length > 0 ? (\n          <div className=\"space-y-8\">\n            {paginatedGroupedCuts.map(([invoiceNumber, cutsList]) => {\n              const invoice = invoices.find(inv => inv.number === invoiceNumber);\n              const invoiceId = invoice ? invoice.id : null;\n\n              return (\n                <div key={invoiceNumber} className=\"bg-white p-6 rounded-lg shadow-md\">\n                  <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Factura: {invoiceNumber}</h3>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    {cutsList.map(cut => (\n                      <div key={cut.id} className=\"border border-gray-200 rounded-lg p-3\">\n                        <p className=\"text-gray-700 font-medium\">Corte: <span className=\"font-normal\">{cut.cutType}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Canal Código: <span className=\"font-normal\">{cut.carcassCode}</span></p>\n                        <p className=\"text-gray-700 font-medium\">Peso: <span className=\"font-normal\">{cut.weight} kg</span></p>\n                        <p className=\"text-gray-700 font-medium\">Cantidad: <span className=\"font-normal\">{cut.quantity} piezas</span></p>\n                        <p className=\"text-gray-600 text-sm\">Operario: {getOperatorName(cut.operatorId)}</p>\n                        <p className=\"text-gray-600 text-sm\">Fecha: {cut.processingDate}</p>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"mt-4 p-4 bg-gray-100 rounded-lg\">\n                    <h5 className=\"text-md font-semibold text-gray-800 mb-2\">Resumen de Peso por Tipo de Corte en esta Factura</h5>\n                    {getCutsSummary(cutsList).map(([type, totalWeight]) => (\n                      <p key={type} className=\"text-gray-700\">{type}: {totalWeight.toFixed(2)} kg</p>\n                    ))}\n\n                    <h5 className=\"text-md font-semibold text-gray-800 mt-4 mb-2\">Total Kilos Despostado y Merma por Tipo de Carne</h5>\n                    {getTotalWeightByMeatType(cutsList).map(([meatType, totalWeight]) => (\n                      <p key={meatType} className=\"text-gray-700\">{meatType} (Despostado): {totalWeight.toFixed(2)} kg</p>\n                    ))}\n                     {invoiceId && getMermaByMeatType(invoiceId, cutsList).map(([meatType, mermaWeight]) => (\n                      <p key={`${meatType}-merma`} className=\"text-gray-700\">\n                        {meatType} (Merma): <span className={`${mermaWeight >= 0 ? 'text-green-600' : 'text-red-600'}`}>{mermaWeight.toFixed(2)} kg</span>\n                      </p>\n                    ))}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <p className=\"text-gray-600\">No hay despostes registrados que coincidan con la búsqueda o rango de fechas.</p>\n        )}\n      </div>\n\n       {totalPages > 1 && (\n        <div className=\"flex justify-center mt-6 space-x-2\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index + 1}\n              onClick={() => handlePageChange(index + 1)}\n              className={`px-4 py-2 rounded-lg transition-colors ${\n                currentPage === index + 1\n                  ? 'bg-black text-white'\n                  : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n              }`}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DeboningForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}